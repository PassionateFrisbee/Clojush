Command line args: clojush.problems.software.last_letter_vowel
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 10
alternation-rate = 0.01
atom-generators = (a e i o u y aeiouy #object[clojush.problems.software.last_letter_vowel$fn__7462 0x1fd0ae78 clojush.problems.software.last_letter_vowel$fn__7462@1fd0ae78] #object[clojush.problems.software.last_letter_vowel$fn__7464 0x1f57666b clojush.problems.software.last_letter_vowel$fn__7464@1f57666b] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x637d111d clojush.instructions.tag$tag_instruction_erc$fn__2160@637d111d] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x1ed12d10 clojush.instructions.tag$tagged_instruction_erc$fn__2166@1ed12d10] in1 integer_sub integer_inc boolean_stackdepth boolean_pop string_fromchar exec_yankdup integer_yankdup string_flush boolean_swap exec_shove exec_y boolean_yank integer_eq string_butlast string_conjchar string_substring integer_mult boolean_or boolean_empty exec_s_when_autoconstructing char_dup_items char_iswhitespace string_first exec_do*while exec_string_iterate string_indexofchar integer_fromstring char_frominteger exec_dup_items boolean_dup_items exec_empty string_shove exec_rot char_pop exec_dup boolean_flush char_isdigit string_reverse exec_k char_rot boolean_xor integer_gte boolean_dup_times string_replacefirst boolean_shove string_last boolean_rot integer_div integer_lte integer_mod string_concat exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove string_dup_times char_swap integer_max char_dup_times string_eq integer_stackdepth string_take char_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq string_emptystring string_swap integer_yank exec_while integer_min exec_swap integer_fromchar string_stackdepth string_replacechar char_allfromstring char_yank string_pop integer_dup_items string_nth exec_do*range exec_if char_shove boolean_invert_first_then_and integer_fromboolean char_yankdup boolean_frominteger string_setchar char_isletter boolean_eq string_occurrencesofchar string_replacefirstchar integer_flush string_replace char_dup exec_y_when_autoconstructing char_eq integer_gt boolean_not exec_do*times string_empty char_empty exec_pop string_yankdup string_removechar char_flush exec_s integer_lt string_containschar string_yank exec_noop integer_swap string_split string_fromboolean integer_dup string_rest string_rot exec_yank string_parse_to_chars integer_pop integer_empty integer_dec string_contains string_dup_items exec_stackdepth boolean_and string_length string_frominteger exec_flush exec_when boolean_invert_second_then_and string_dup boolean_yankdup)
error-function = #object[clojush.problems.software.last_letter_vowel$make_llv_error_function_from_cases$the_actual_llv_error_function__7471 0x6ca367aa clojush.problems.software.last_letter_vowel$make_llv_error_function_from_cases$the_actual_llv_error_function__7471@6ca367aa]
evalpush-limit = 1600
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
max-error = 1
max-generations = 300
max-genome-size-in-initial-program = 400
max-points = 3200
parent-selection = :lexicase
population-size = 1000
problem-specific-initial-report = #object[clojush.problems.software.last_letter_vowel$llv_initial_report 0x2a21cbe7 clojush.problems.software.last_letter_vowel$llv_initial_report@2a21cbe7]
problem-specific-report = #object[clojush.problems.software.last_letter_vowel$llv_report 0x4fbc516f clojush.problems.software.last_letter_vowel$llv_report@4fbc516f]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: ["" true]
Train Case:   1 | Input/Output: ["a" true]
Train Case:   2 | Input/Output: ["v" false]
Train Case:   3 | Input/Output: ["o" true]
Train Case:   4 | Input/Output: ["aei" true]
Train Case:   5 | Input/Output: ["ouy" true]
Train Case:   6 | Input/Output: ["chf" false]
Train Case:   7 | Input/Output: ["quite" true]
Train Case:   8 | Input/Output: ["arej" false]
Train Case:   9 | Input/Output: ["asdf" false]
Train Case:  10 | Input/Output: ["p" false]
Train Case:  11 | Input/Output: ["youaremanyyayyea" true]
Train Case:  12 | Input/Output: ["ssssssssssssssssssss" false]
Train Case:  13 | Input/Output: ["oooooooooooooooooooo" true]
Train Case:  14 | Input/Output: ["wiwiwiwiwiwiwiwiwiwi" true]
Train Case:  15 | Input/Output: ["xyxyxyxyxyxyxyxyxyxy" true]
Train Case:  16 | Input/Output: ["eioyeioyeioyeioyeioy" true]
Train Case:  17 | Input/Output: ["uqokuomxdaip" false]
Train Case:  18 | Input/Output: ["irmtxjcoeoqajny" true]
Train Case:  19 | Input/Output: ["rdrpisiifsjta" true]
Train Case:  20 | Input/Output: ["coilcjouvikomduk" false]
Train Case:  21 | Input/Output: ["onaikcoxqtuegttigsno" true]
Train Case:  22 | Input/Output: ["sgataotye" true]
Train Case:  23 | Input/Output: ["p" false]
Train Case:  24 | Input/Output: ["yieymgykongxk" false]
Train Case:  25 | Input/Output: ["eyskeytxpb" false]
Train Case:  26 | Input/Output: ["ooibxpideo" true]
Train Case:  27 | Input/Output: ["gfbtkk" false]
Train Case:  28 | Input/Output: ["d" false]
Train Case:  29 | Input/Output: ["elqi" true]
Train Case:  30 | Input/Output: ["ytnynnwrtlexcm" false]
Train Case:  31 | Input/Output: ["eemiyinnluy" true]
Train Case:  32 | Input/Output: ["monlce" true]
Train Case:  33 | Input/Output: ["gd" false]
Train Case:  34 | Input/Output: ["ifoyoqmkr" false]
Train Case:  35 | Input/Output: ["yfvjdagunlgnfi" true]
Train Case:  36 | Input/Output: ["eouswnyp" false]
Train Case:  37 | Input/Output: ["ljtdacv" false]
Train Case:  38 | Input/Output: ["iqhauxpfhefuwfe" true]
Train Case:  39 | Input/Output: ["oicxh" false]
Train Case:  40 | Input/Output: ["ucnai" true]
Train Case:  41 | Input/Output: ["souiyatjukhliqudh" false]
Train Case:  42 | Input/Output: ["yyytbalpaawjp" false]
Train Case:  43 | Input/Output: ["gevl" false]
Train Case:  44 | Input/Output: ["fpyyjtinjyik" false]
Train Case:  45 | Input/Output: ["iupohyymuaa" true]
Train Case:  46 | Input/Output: ["ibxutaseiwu" true]
Train Case:  47 | Input/Output: ["tcgfycuo" true]
Train Case:  48 | Input/Output: ["eakbxgvjinfv" false]
Train Case:  49 | Input/Output: ["xtwqhlmcpylkaneueoe" true]
Train Case:  50 | Input/Output: ["k" false]
Train Case:  51 | Input/Output: ["teyebvy" true]
Train Case:  52 | Input/Output: ["xuxlayvojieqx" false]
Train Case:  53 | Input/Output: ["knbgvcgyvwalayn" false]
Train Case:  54 | Input/Output: ["woaqxtdsayooomj" false]
Train Case:  55 | Input/Output: ["qnuowundaqiy" true]
Train Case:  56 | Input/Output: ["vwlvrktnafuvifhjgl" false]
Train Case:  57 | Input/Output: ["liiieyie" true]
Train Case:  58 | Input/Output: ["ddadtecrgsapnhnxfceu" true]
Train Case:  59 | Input/Output: ["wnoops" false]
Train Case:  60 | Input/Output: ["ob" false]
Train Case:  61 | Input/Output: ["irrumglwf" false]
Train Case:  62 | Input/Output: ["ujqqtaka" true]
Train Case:  63 | Input/Output: ["befjvikc" false]
Train Case:  64 | Input/Output: ["wyf" false]
Train Case:  65 | Input/Output: ["jripxmveoqo" true]
Train Case:  66 | Input/Output: ["eaoq" false]
Train Case:  67 | Input/Output: ["fymtgxl" false]
Train Case:  68 | Input/Output: ["tyeeqmbeododtupi" true]
Train Case:  69 | Input/Output: ["hjeeuxladlsioufsayxf" false]
Train Case:  70 | Input/Output: ["rfirribvojwkbuum" false]
Train Case:  71 | Input/Output: ["sl" false]
Train Case:  72 | Input/Output: ["jgarxltfqjsdcbvy" true]
Train Case:  73 | Input/Output: ["goer" false]
Train Case:  74 | Input/Output: ["mmoqcmuokylnosclom" false]
Train Case:  75 | Input/Output: ["toyoxmdub" false]
Train Case:  76 | Input/Output: ["rbvmhibao" true]
Train Case:  77 | Input/Output: ["ixfmluqn" false]
Train Case:  78 | Input/Output: ["aclm" false]
Train Case:  79 | Input/Output: ["rfiku" true]
Train Case:  80 | Input/Output: ["kguwoeepbbuyyfimu" true]
Train Case:  81 | Input/Output: ["epnuno" true]
Train Case:  82 | Input/Output: ["auej" false]
Train Case:  83 | Input/Output: ["ykalega" true]
Train Case:  84 | Input/Output: ["ry" true]
Train Case:  85 | Input/Output: ["aaedixr" false]
Train Case:  86 | Input/Output: ["xyqkwe" true]
Train Case:  87 | Input/Output: ["uymayaebkeqebrntlg" false]
Train Case:  88 | Input/Output: ["s" false]
Train Case:  89 | Input/Output: ["uxlpaixkd" false]
Train Case:  90 | Input/Output: ["aybfioxleuhaifj" false]
Train Case:  91 | Input/Output: ["ty" true]
Train Case:  92 | Input/Output: ["elultltvdywj" false]
Train Case:  93 | Input/Output: ["gokjsgxvjpoeaviu" true]
Train Case:  94 | Input/Output: ["awocelusmbpxrl" false]
Train Case:  95 | Input/Output: ["yjmoscjynh" false]
Train Case:  96 | Input/Output: ["rdqpkbiceqraucubaee" true]
Train Case:  97 | Input/Output: ["btuvoimysvseorglt" false]
Train Case:  98 | Input/Output: ["ufeihioiwd" false]
Train Case:  99 | Input/Output: ["hyhylyofus" false]
Test Case:   0 | Input/Output: ["vhidyrau" true]
Test Case:   1 | Input/Output: ["mcwxhoyq" false]
Test Case:   2 | Input/Output: ["vwibivygaqqsop" false]
Test Case:   3 | Input/Output: ["wurcxrvobabdtlevk" false]
Test Case:   4 | Input/Output: ["ocjeibkfkeics" false]
Test Case:   5 | Input/Output: ["eomaavi" true]
Test Case:   6 | Input/Output: ["hafldfgyi" true]
Test Case:   7 | Input/Output: ["byajuetuj" false]
Test Case:   8 | Input/Output: ["ylhbdtgyjwimpvuky" true]
Test Case:   9 | Input/Output: ["eemxpcutrl" false]
Test Case:  10 | Input/Output: ["i" true]
Test Case:  11 | Input/Output: ["yolffauuyvnmrsbcolo" true]
Test Case:  12 | Input/Output: ["dskjqovdoxnoib" false]
Test Case:  13 | Input/Output: ["jerbjxhauqyfqv" false]
Test Case:  14 | Input/Output: ["soavsboey" true]
Test Case:  15 | Input/Output: ["o" true]
Test Case:  16 | Input/Output: ["mbqeeebim" false]
Test Case:  17 | Input/Output: ["bqwupvyqerviyesgoo" true]
Test Case:  18 | Input/Output: ["unjiybuguuaopelhyy" true]
Test Case:  19 | Input/Output: ["ateethawbuuftbsegnjc" false]
Test Case:  20 | Input/Output: ["axbfjyvj" false]
Test Case:  21 | Input/Output: ["aaahjavfyrioi" true]
Test Case:  22 | Input/Output: ["igikaqajbyieyuoums" false]
Test Case:  23 | Input/Output: ["updm" false]
Test Case:  24 | Input/Output: ["ry" true]
Test Case:  25 | Input/Output: ["fggedooio" true]
Test Case:  26 | Input/Output: ["jhaksjav" false]
Test Case:  27 | Input/Output: ["sovaeicxogbimrjvbga" true]
Test Case:  28 | Input/Output: ["alflovyth" false]
Test Case:  29 | Input/Output: ["owhifyyuha" true]
Test Case:  30 | Input/Output: ["tyamdqgwnyrsoikjx" false]
Test Case:  31 | Input/Output: ["phansi" true]
Test Case:  32 | Input/Output: ["pocvldgvxmdkeeocc" false]
Test Case:  33 | Input/Output: ["fwybkgki" true]
Test Case:  34 | Input/Output: ["uniuaocepwvk" false]
Test Case:  35 | Input/Output: ["aimcuivfua" true]
Test Case:  36 | Input/Output: ["egcckhsuwvfoluaeu" true]
Test Case:  37 | Input/Output: ["ixwfxheoykjfnaixts" false]
Test Case:  38 | Input/Output: ["jeteoiariw" false]
Test Case:  39 | Input/Output: ["xxofsmyckehoqtd" false]
Test Case:  40 | Input/Output: ["aymdb" false]
Test Case:  41 | Input/Output: ["ylcyjlngn" false]
Test Case:  42 | Input/Output: ["oi" true]
Test Case:  43 | Input/Output: ["kaiyeahmyii" true]
Test Case:  44 | Input/Output: ["ihassyempaqctad" false]
Test Case:  45 | Input/Output: ["iuc" false]
Test Case:  46 | Input/Output: ["mpxy" true]
Test Case:  47 | Input/Output: ["ougmotpfbk" false]
Test Case:  48 | Input/Output: ["ebrybvukel" false]
Test Case:  49 | Input/Output: ["pxiau" true]
Test Case:  50 | Input/Output: ["okoqqxplumivsyyaysl" false]
Test Case:  51 | Input/Output: ["e" true]
Test Case:  52 | Input/Output: ["fgbmdkcaeorjqwq" false]
Test Case:  53 | Input/Output: ["vyusnbplbhy" true]
Test Case:  54 | Input/Output: ["muplvimcyocmostv" false]
Test Case:  55 | Input/Output: ["ehidtjuvlfetuye" true]
Test Case:  56 | Input/Output: ["loi" true]
Test Case:  57 | Input/Output: ["fhspnht" false]
Test Case:  58 | Input/Output: ["efciwaabuou" true]
Test Case:  59 | Input/Output: ["wajgqcooqop" false]
Test Case:  60 | Input/Output: ["yebgcylujadgtpxk" false]
Test Case:  61 | Input/Output: ["wcabasbbwiyuhvv" false]
Test Case:  62 | Input/Output: ["b" false]
Test Case:  63 | Input/Output: ["ykweonuaxoypxbib" false]
Test Case:  64 | Input/Output: ["cytyfu" true]
Test Case:  65 | Input/Output: ["ihpkas" false]
Test Case:  66 | Input/Output: ["as" false]
Test Case:  67 | Input/Output: ["uuhio" true]
Test Case:  68 | Input/Output: ["pwegrei" true]
Test Case:  69 | Input/Output: ["pygylmsiryxejx" false]
Test Case:  70 | Input/Output: ["fgastpaxrjnj" false]
Test Case:  71 | Input/Output: ["shofyku" true]
Test Case:  72 | Input/Output: ["outearwgjqynoseruf" false]
Test Case:  73 | Input/Output: ["rcadteja" true]
Test Case:  74 | Input/Output: ["jnrrradruiil" false]
Test Case:  75 | Input/Output: ["g" false]
Test Case:  76 | Input/Output: ["wbelhihsfveuomu" true]
Test Case:  77 | Input/Output: ["icjxfxdkke" true]
Test Case:  78 | Input/Output: ["ioqarsc" false]
Test Case:  79 | Input/Output: ["pnksdyigkvduqiyh" false]
Test Case:  80 | Input/Output: ["o" true]
Test Case:  81 | Input/Output: ["tuopbvupv" false]
Test Case:  82 | Input/Output: ["ljaklhaujwfnagishljh" false]
Test Case:  83 | Input/Output: ["uetrspbpro" true]
Test Case:  84 | Input/Output: ["yuhuatvpaliuhccocnf" false]
Test Case:  85 | Input/Output: ["rohkonfid" false]
Test Case:  86 | Input/Output: ["ppckkhonyueofsaxyqri" true]
Test Case:  87 | Input/Output: ["ekexuhxejjvo" true]
Test Case:  88 | Input/Output: ["uiyxqqtfu" true]
Test Case:  89 | Input/Output: ["odanvtugbmia" true]
Test Case:  90 | Input/Output: ["mejotyujilylhcqltaj" false]
Test Case:  91 | Input/Output: ["kpayyrbihudiuip" false]
Test Case:  92 | Input/Output: ["alokytaocttxjyxn" false]
Test Case:  93 | Input/Output: ["iuskieuyrrjp" false]
Test Case:  94 | Input/Output: ["kitapmeejmatf" false]
Test Case:  95 | Input/Output: ["wepbqrrimvai" true]
Test Case:  96 | Input/Output: ["vsljrocvbgytlabagjm" false]
Test Case:  97 | Input/Output: ["kou" true]
Test Case:  98 | Input/Output: ["rtvekpmtysyaryulykvu" true]
Test Case:  99 | Input/Output: ["eoglgryalhuxkwl" false]
Test Case: 100 | Input/Output: ["irvu" true]
Test Case: 101 | Input/Output: ["t" false]
Test Case: 102 | Input/Output: ["quhtusaatmmi" true]
Test Case: 103 | Input/Output: ["atauuqucar" false]
Test Case: 104 | Input/Output: ["lj" false]
Test Case: 105 | Input/Output: ["makxxna" true]
Test Case: 106 | Input/Output: ["dqawxvomj" false]
Test Case: 107 | Input/Output: ["yrtwehk" false]
Test Case: 108 | Input/Output: ["ox" false]
Test Case: 109 | Input/Output: ["eij" false]
Test Case: 110 | Input/Output: ["asajlbigiqedsrumw" false]
Test Case: 111 | Input/Output: ["oeeajdumow" false]
Test Case: 112 | Input/Output: ["cjysw" false]
Test Case: 113 | Input/Output: ["h" false]
Test Case: 114 | Input/Output: ["tnl" false]
Test Case: 115 | Input/Output: ["kketqhl" false]
Test Case: 116 | Input/Output: ["uymigdmucdjynbrufai" true]
Test Case: 117 | Input/Output: ["nudimm" false]
Test Case: 118 | Input/Output: ["yevpe" true]
Test Case: 119 | Input/Output: ["bpimoxhnyuyepxueiep" false]
Test Case: 120 | Input/Output: ["powcmepskwfwtlyt" false]
Test Case: 121 | Input/Output: ["pbo" true]
Test Case: 122 | Input/Output: ["nwavoobgrfsipe" true]
Test Case: 123 | Input/Output: ["godmgur" false]
Test Case: 124 | Input/Output: ["qgycgac" false]
Test Case: 125 | Input/Output: ["ytwgadumxxnya" true]
Test Case: 126 | Input/Output: ["eujdqibceu" true]
Test Case: 127 | Input/Output: ["ewsa" true]
Test Case: 128 | Input/Output: ["tiudeipjqhuaco" true]
Test Case: 129 | Input/Output: ["pumfpi" true]
Test Case: 130 | Input/Output: ["cnyaokkd" false]
Test Case: 131 | Input/Output: ["tl" false]
Test Case: 132 | Input/Output: ["g" false]
Test Case: 133 | Input/Output: ["nwoyamjri" true]
Test Case: 134 | Input/Output: ["ueta" true]
Test Case: 135 | Input/Output: ["foywlcmi" true]
Test Case: 136 | Input/Output: ["ybyagicyvpk" false]
Test Case: 137 | Input/Output: ["wwh" false]
Test Case: 138 | Input/Output: ["uhkhegbvofx" false]
Test Case: 139 | Input/Output: ["rgqnfakyxmb" false]
Test Case: 140 | Input/Output: ["kluifoy" true]
Test Case: 141 | Input/Output: ["u" true]
Test Case: 142 | Input/Output: ["oohaauthebmki" true]
Test Case: 143 | Input/Output: ["onpejiausoyiwejdeek" false]
Test Case: 144 | Input/Output: ["oymikihbtqq" false]
Test Case: 145 | Input/Output: ["hej" false]
Test Case: 146 | Input/Output: ["kpewjrfmfs" false]
Test Case: 147 | Input/Output: ["rlx" false]
Test Case: 148 | Input/Output: ["yxtegcqnyu" true]
Test Case: 149 | Input/Output: ["vtwypljoisa" true]
Test Case: 150 | Input/Output: ["edvof" false]
Test Case: 151 | Input/Output: ["rpceouqvhekokqnucv" false]
Test Case: 152 | Input/Output: ["r" false]
Test Case: 153 | Input/Output: ["oa" true]
Test Case: 154 | Input/Output: ["watasdcewikoa" true]
Test Case: 155 | Input/Output: ["jacrtchodc" false]
Test Case: 156 | Input/Output: ["jf" false]
Test Case: 157 | Input/Output: ["oheyyy" true]
Test Case: 158 | Input/Output: ["uax" false]
Test Case: 159 | Input/Output: ["kyy" true]
Test Case: 160 | Input/Output: ["xeaeil" false]
Test Case: 161 | Input/Output: ["ltlicyeewiqdrmecraet" false]
Test Case: 162 | Input/Output: ["yyecejmiaxiuheoypey" true]
Test Case: 163 | Input/Output: ["d" false]
Test Case: 164 | Input/Output: ["wryuhssvg" false]
Test Case: 165 | Input/Output: ["vockvjmhmkc" false]
Test Case: 166 | Input/Output: ["lhbfepasxab" false]
Test Case: 167 | Input/Output: ["yxsbsjxt" false]
Test Case: 168 | Input/Output: ["tymagig" false]
Test Case: 169 | Input/Output: ["yro" true]
Test Case: 170 | Input/Output: ["diyelqytolqkrsmyem" false]
Test Case: 171 | Input/Output: ["cttqdiopejeu" true]
Test Case: 172 | Input/Output: ["iwejqepyiymeyye" true]
Test Case: 173 | Input/Output: ["fnqaufdtmytutejg" false]
Test Case: 174 | Input/Output: ["odl" false]
Test Case: 175 | Input/Output: ["beo" true]
Test Case: 176 | Input/Output: ["u" true]
Test Case: 177 | Input/Output: ["qxiveyhnloomr" false]
Test Case: 178 | Input/Output: ["nyhgaiuxuyeuugl" false]
Test Case: 179 | Input/Output: ["pxorwaieo" true]
Test Case: 180 | Input/Output: ["bo" true]
Test Case: 181 | Input/Output: ["uienly" true]
Test Case: 182 | Input/Output: ["j" false]
Test Case: 183 | Input/Output: ["oitecylbelwy" true]
Test Case: 184 | Input/Output: ["ewvcehekybq" false]
Test Case: 185 | Input/Output: ["fabquaq" false]
Test Case: 186 | Input/Output: ["yhgnqauagoaiyaieye" true]
Test Case: 187 | Input/Output: ["isaeaturjwqaavfmmeuf" false]
Test Case: 188 | Input/Output: ["buj" false]
Test Case: 189 | Input/Output: ["ejgmooegjsufhtj" false]
Test Case: 190 | Input/Output: ["wujiemiyuyajpraf" false]
Test Case: 191 | Input/Output: ["iyyuiobcrpv" false]
Test Case: 192 | Input/Output: ["ulm" false]
Test Case: 193 | Input/Output: ["yfrouymq" false]
Test Case: 194 | Input/Output: ["lttqdivdvrkt" false]
Test Case: 195 | Input/Output: ["yrunsltjgogxdu" true]
Test Case: 196 | Input/Output: ["ikpxqlcghrsqou" true]
Test Case: 197 | Input/Output: ["kgafryeo" true]
Test Case: 198 | Input/Output: ["fo" true]
Test Case: 199 | Input/Output: ["yyiurwiseaavlybe" true]
Test Case: 200 | Input/Output: ["wakqvsuy" true]
Test Case: 201 | Input/Output: ["uidv" false]
Test Case: 202 | Input/Output: ["mpdio" true]
Test Case: 203 | Input/Output: ["kruaesqgugbwer" false]
Test Case: 204 | Input/Output: ["ku" true]
Test Case: 205 | Input/Output: ["koygcwupkukx" false]
Test Case: 206 | Input/Output: ["klynevorytkwmtby" true]
Test Case: 207 | Input/Output: ["uafyudn" false]
Test Case: 208 | Input/Output: ["xeyqeuoyjoouui" true]
Test Case: 209 | Input/Output: ["bfosixoaorjebcocay" true]
Test Case: 210 | Input/Output: ["wbjgndthftvyylkg" false]
Test Case: 211 | Input/Output: ["yjogi" true]
Test Case: 212 | Input/Output: ["sorslpettf" false]
Test Case: 213 | Input/Output: ["mueeea" true]
Test Case: 214 | Input/Output: ["ikalurk" false]
Test Case: 215 | Input/Output: ["knueroudoegfhocu" true]
Test Case: 216 | Input/Output: ["ywi" true]
Test Case: 217 | Input/Output: ["jddytnluqplod" false]
Test Case: 218 | Input/Output: ["lpaewcu" true]
Test Case: 219 | Input/Output: ["lvgi" true]
Test Case: 220 | Input/Output: ["skqekdasturjy" true]
Test Case: 221 | Input/Output: ["lipuigle" true]
Test Case: 222 | Input/Output: ["idc" false]
Test Case: 223 | Input/Output: ["kaihto" true]
Test Case: 224 | Input/Output: ["akxyxijyxdpjm" false]
Test Case: 225 | Input/Output: ["enaokleeqmgayik" false]
Test Case: 226 | Input/Output: ["ivadiohoi" true]
Test Case: 227 | Input/Output: ["nuwapofllrmuyyaiml" false]
Test Case: 228 | Input/Output: ["eqrvbpxpixkqbcqiawo" true]
Test Case: 229 | Input/Output: ["wuooqbycuesoxdq" false]
Test Case: 230 | Input/Output: ["tvpiueupixi" true]
Test Case: 231 | Input/Output: ["eeaya" true]
Test Case: 232 | Input/Output: ["hvroewyjtojavwn" false]
Test Case: 233 | Input/Output: ["ywtsojojwemuic" false]
Test Case: 234 | Input/Output: ["ukbnhjosieqfjydau" true]
Test Case: 235 | Input/Output: ["ibprr" false]
Test Case: 236 | Input/Output: ["eknqeubemgq" false]
Test Case: 237 | Input/Output: ["yclx" false]
Test Case: 238 | Input/Output: ["yjsiqsupakvtyyao" true]
Test Case: 239 | Input/Output: ["nkhfoyahpakwiokyhtx" false]
Test Case: 240 | Input/Output: ["xmndidqt" false]
Test Case: 241 | Input/Output: ["riyxvwayitjlrhr" false]
Test Case: 242 | Input/Output: ["fvgu" true]
Test Case: 243 | Input/Output: ["cbdjqauafomdueet" false]
Test Case: 244 | Input/Output: ["l" false]
Test Case: 245 | Input/Output: ["dsfwyhubeyljcjo" true]
Test Case: 246 | Input/Output: ["rxmqtdsmjy" true]
Test Case: 247 | Input/Output: ["bfaojqcllkys" false]
Test Case: 248 | Input/Output: ["reulxxrutyu" true]
Test Case: 249 | Input/Output: ["vyudjaefvdjtixufi" true]
Test Case: 250 | Input/Output: ["o" true]
Test Case: 251 | Input/Output: ["i" true]
Test Case: 252 | Input/Output: ["yrnjlljynoxaarxhby" true]
Test Case: 253 | Input/Output: ["tiiactyaqq" false]
Test Case: 254 | Input/Output: ["lneymaaaoskowbod" false]
Test Case: 255 | Input/Output: ["llmxe" true]
Test Case: 256 | Input/Output: ["upedmyqauqwi" true]
Test Case: 257 | Input/Output: ["qaukodaeggttcb" false]
Test Case: 258 | Input/Output: ["hseudnujvodd" false]
Test Case: 259 | Input/Output: ["iea" true]
Test Case: 260 | Input/Output: ["fvbrkoxefuifii" true]
Test Case: 261 | Input/Output: ["rasytvyivu" true]
Test Case: 262 | Input/Output: ["rwmdbiuqkybpaalk" false]
Test Case: 263 | Input/Output: ["uukltpupkquoel" false]
Test Case: 264 | Input/Output: ["hvvbiybeuia" true]
Test Case: 265 | Input/Output: ["ydaiitqqymtqcxsxf" false]
Test Case: 266 | Input/Output: ["awidqkmaqnyffwlabk" false]
Test Case: 267 | Input/Output: ["meriecanf" false]
Test Case: 268 | Input/Output: ["bvjcvouilurlwpenho" true]
Test Case: 269 | Input/Output: ["betop" false]
Test Case: 270 | Input/Output: ["anxvbkloxpeowsib" false]
Test Case: 271 | Input/Output: ["tnyweyavplpaap" false]
Test Case: 272 | Input/Output: ["iuuloaycuhcueiv" false]
Test Case: 273 | Input/Output: ["y" true]
Test Case: 274 | Input/Output: ["fajxtyonxyoboo" true]
Test Case: 275 | Input/Output: ["rtpoqxcb" false]
Test Case: 276 | Input/Output: ["frjcbeyivdpuoiio" true]
Test Case: 277 | Input/Output: ["jyjerqdskwwfjmkicf" false]
Test Case: 278 | Input/Output: ["oxiej" false]
Test Case: 279 | Input/Output: ["weqyevrfgspsvlpaxruo" true]
Test Case: 280 | Input/Output: ["jgirhakrnaoarvoly" true]
Test Case: 281 | Input/Output: ["olvuxox" false]
Test Case: 282 | Input/Output: ["ybboeyonpiastprjcrl" false]
Test Case: 283 | Input/Output: ["isbuxqlua" true]
Test Case: 284 | Input/Output: ["kcgvylrvcuact" false]
Test Case: 285 | Input/Output: ["s" false]
Test Case: 286 | Input/Output: ["asivroexyemeyidk" false]
Test Case: 287 | Input/Output: ["fnqabwurki" true]
Test Case: 288 | Input/Output: ["hbyirooqntfu" true]
Test Case: 289 | Input/Output: ["owap" false]
Test Case: 290 | Input/Output: ["ncelbxujvwioasyufj" false]
Test Case: 291 | Input/Output: ["quswge" true]
Test Case: 292 | Input/Output: ["i" true]
Test Case: 293 | Input/Output: ["i" true]
Test Case: 294 | Input/Output: ["yjq" false]
Test Case: 295 | Input/Output: ["ybcmfuwvafsidui" true]
Test Case: 296 | Input/Output: ["jgoixit" false]
Test Case: 297 | Input/Output: ["j" false]
Test Case: 298 | Input/Output: ["tn" false]
Test Case: 299 | Input/Output: ["oyapqqmdhiugvenh" false]
Test Case: 300 | Input/Output: ["onouawieuhsb" false]
Test Case: 301 | Input/Output: ["fyawyapr" false]
Test Case: 302 | Input/Output: ["ddxqpoqveawgyar" false]
Test Case: 303 | Input/Output: ["boconbu" true]
Test Case: 304 | Input/Output: ["xjhierdieurefq" false]
Test Case: 305 | Input/Output: ["taiicmyoyrlhfemjnj" false]
Test Case: 306 | Input/Output: ["id" false]
Test Case: 307 | Input/Output: ["grydsjhrige" true]
Test Case: 308 | Input/Output: ["qgwdoacsa" true]
Test Case: 309 | Input/Output: ["ijbobkhaidyxoepyer" false]
Test Case: 310 | Input/Output: ["ktapeliblohkokfyg" false]
Test Case: 311 | Input/Output: ["omeay" true]
Test Case: 312 | Input/Output: ["rhvunxxauybutsojyhnk" false]
Test Case: 313 | Input/Output: ["behjlmgiurfrcoidou" true]
Test Case: 314 | Input/Output: ["igsjaaove" true]
Test Case: 315 | Input/Output: ["esrnugeapgoxu" true]
Test Case: 316 | Input/Output: ["cddsxuymbwfaeujaip" false]
Test Case: 317 | Input/Output: ["yiueaowduhmeeior" false]
Test Case: 318 | Input/Output: ["sgpqyitiokejjtby" true]
Test Case: 319 | Input/Output: ["wryuwjhpyyaadoebiaq" false]
Test Case: 320 | Input/Output: ["hth" false]
Test Case: 321 | Input/Output: ["ubmbyeavrvq" false]
Test Case: 322 | Input/Output: ["im" false]
Test Case: 323 | Input/Output: ["awcoygtetircm" false]
Test Case: 324 | Input/Output: ["ekyirbahjeypaiu" true]
Test Case: 325 | Input/Output: ["jcurfyk" false]
Test Case: 326 | Input/Output: ["gpug" false]
Test Case: 327 | Input/Output: ["jhbw" false]
Test Case: 328 | Input/Output: ["nykh" false]
Test Case: 329 | Input/Output: ["fl" false]
Test Case: 330 | Input/Output: ["ykhiykkaqiakqpvqyaa" true]
Test Case: 331 | Input/Output: ["gutb" false]
Test Case: 332 | Input/Output: ["eionic" false]
Test Case: 333 | Input/Output: ["cluykfeays" false]
Test Case: 334 | Input/Output: ["sieeffdxpskk" false]
Test Case: 335 | Input/Output: ["ooj" false]
Test Case: 336 | Input/Output: ["ysyugutdeokatoog" false]
Test Case: 337 | Input/Output: ["leenyisofxfngwhe" true]
Test Case: 338 | Input/Output: ["louvofoaeuyx" false]
Test Case: 339 | Input/Output: ["yvvyihp" false]
Test Case: 340 | Input/Output: ["byoexeumydnsp" false]
Test Case: 341 | Input/Output: ["opinqeuesr" false]
Test Case: 342 | Input/Output: ["gacfecae" true]
Test Case: 343 | Input/Output: ["xxshgjbuxdeh" false]
Test Case: 344 | Input/Output: ["kffub" false]
Test Case: 345 | Input/Output: ["etvxfwysnuiloarq" false]
Test Case: 346 | Input/Output: ["ugqwixoqbxkjijihusid" false]
Test Case: 347 | Input/Output: ["bepvsamu" true]
Test Case: 348 | Input/Output: ["yoecgjqkwxuueuwl" false]
Test Case: 349 | Input/Output: ["aqdvanhsyy" true]
Test Case: 350 | Input/Output: ["u" true]
Test Case: 351 | Input/Output: ["kqbevisej" false]
Test Case: 352 | Input/Output: ["uiynuchaywwqivhgiyq" false]
Test Case: 353 | Input/Output: ["rwbobqcam" false]
Test Case: 354 | Input/Output: ["owaq" false]
Test Case: 355 | Input/Output: ["utugepyboojrpo" true]
Test Case: 356 | Input/Output: ["wyavyqdyunebidq" false]
Test Case: 357 | Input/Output: ["geaxbp" false]
Test Case: 358 | Input/Output: ["ira" true]
Test Case: 359 | Input/Output: ["ynylvru" true]
Test Case: 360 | Input/Output: ["diugwmhlcx" false]
Test Case: 361 | Input/Output: ["wjialtsaerctvjj" false]
Test Case: 362 | Input/Output: ["twhy" true]
Test Case: 363 | Input/Output: ["eordamhaguaweonjariv" false]
Test Case: 364 | Input/Output: ["ege" true]
Test Case: 365 | Input/Output: ["yd" false]
Test Case: 366 | Input/Output: ["v" false]
Test Case: 367 | Input/Output: ["h" false]
Test Case: 368 | Input/Output: ["aukiruuudyuytlotneab" false]
Test Case: 369 | Input/Output: ["plqvqymeft" false]
Test Case: 370 | Input/Output: ["duaobxvae" true]
Test Case: 371 | Input/Output: ["uy" true]
Test Case: 372 | Input/Output: ["axpeqytkck" false]
Test Case: 373 | Input/Output: ["qu" true]
Test Case: 374 | Input/Output: ["knvuhmmhfiassryaqebs" false]
Test Case: 375 | Input/Output: ["pcfwebiyp" false]
Test Case: 376 | Input/Output: ["tywsbtcrvitfuoka" true]
Test Case: 377 | Input/Output: ["dinojyrmjwxpjij" false]
Test Case: 378 | Input/Output: ["vofihrhumutdrcyghfn" false]
Test Case: 379 | Input/Output: ["uebfsuaujygeyg" false]
Test Case: 380 | Input/Output: ["wmijkujuijhrooxjlhn" false]
Test Case: 381 | Input/Output: ["jkdtoap" false]
Test Case: 382 | Input/Output: ["uagukcuri" true]
Test Case: 383 | Input/Output: ["raoki" true]
Test Case: 384 | Input/Output: ["n" false]
Test Case: 385 | Input/Output: ["n" false]
Test Case: 386 | Input/Output: ["akehjhu" true]
Test Case: 387 | Input/Output: ["qooikpnqparjwouuapua" true]
Test Case: 388 | Input/Output: ["mswarluojdbnsg" false]
Test Case: 389 | Input/Output: ["rqnp" false]
Test Case: 390 | Input/Output: ["rs" false]
Test Case: 391 | Input/Output: ["hliqdipwe" true]
Test Case: 392 | Input/Output: ["llaoqyepyao" true]
Test Case: 393 | Input/Output: ["ai" true]
Test Case: 394 | Input/Output: ["uyuypj" false]
Test Case: 395 | Input/Output: ["tq" false]
Test Case: 396 | Input/Output: ["edi" true]
Test Case: 397 | Input/Output: ["qroainoi" true]
Test Case: 398 | Input/Output: ["n" false]
Test Case: 399 | Input/Output: ["i" true]
Test Case: 400 | Input/Output: ["bvqjpyhmjfuhkp" false]
Test Case: 401 | Input/Output: ["o" true]
Test Case: 402 | Input/Output: ["edmthfyimtur" false]
Test Case: 403 | Input/Output: ["ebiaubdnqiueybust" false]
Test Case: 404 | Input/Output: ["ea" true]
Test Case: 405 | Input/Output: ["bnliko" true]
Test Case: 406 | Input/Output: ["bywauwocpjvqi" true]
Test Case: 407 | Input/Output: ["vdesywwnkisfwg" false]
Test Case: 408 | Input/Output: ["peklaytmuetyaclctdk" false]
Test Case: 409 | Input/Output: ["y" true]
Test Case: 410 | Input/Output: ["p" false]
Test Case: 411 | Input/Output: ["xmlhrs" false]
Test Case: 412 | Input/Output: ["xydeipojudkv" false]
Test Case: 413 | Input/Output: ["enqosr" false]
Test Case: 414 | Input/Output: ["lnidok" false]
Test Case: 415 | Input/Output: ["rhogoubi" true]
Test Case: 416 | Input/Output: ["bbegsnlutiwmoc" false]
Test Case: 417 | Input/Output: ["eml" false]
Test Case: 418 | Input/Output: ["usqyxow" false]
Test Case: 419 | Input/Output: ["hleybibaxueyintu" true]
Test Case: 420 | Input/Output: ["jhyckuaoyk" false]
Test Case: 421 | Input/Output: ["vuhbwmybworlsn" false]
Test Case: 422 | Input/Output: ["hdsor" false]
Test Case: 423 | Input/Output: ["beafcdx" false]
Test Case: 424 | Input/Output: ["u" true]
Test Case: 425 | Input/Output: ["m" false]
Test Case: 426 | Input/Output: ["ofldrofgheeklfnj" false]
Test Case: 427 | Input/Output: ["poauvktb" false]
Test Case: 428 | Input/Output: ["hjjukjqoyogh" false]
Test Case: 429 | Input/Output: ["pipjwulitbpjtsw" false]
Test Case: 430 | Input/Output: ["oxtlod" false]
Test Case: 431 | Input/Output: ["bccpxoopuapwgway" true]
Test Case: 432 | Input/Output: ["gymeejplgpalcyao" true]
Test Case: 433 | Input/Output: ["c" false]
Test Case: 434 | Input/Output: ["cxtwsk" false]
Test Case: 435 | Input/Output: ["jrycnndfowf" false]
Test Case: 436 | Input/Output: ["iedcyo" true]
Test Case: 437 | Input/Output: ["xeiu" true]
Test Case: 438 | Input/Output: ["uhqbrfvtghkvuijhpamw" false]
Test Case: 439 | Input/Output: ["pfkujtgcyusej" false]
Test Case: 440 | Input/Output: ["bqvdbdmd" false]
Test Case: 441 | Input/Output: ["ij" false]
Test Case: 442 | Input/Output: ["abpeeuwhocaho" true]
Test Case: 443 | Input/Output: ["xogvtpqnllspqvulfanw" false]
Test Case: 444 | Input/Output: ["ief" false]
Test Case: 445 | Input/Output: ["arewqiyf" false]
Test Case: 446 | Input/Output: ["autiqejyxjaglyl" false]
Test Case: 447 | Input/Output: ["xewlsnuwetaqfeydou" true]
Test Case: 448 | Input/Output: ["kxnm" false]
Test Case: 449 | Input/Output: ["hjiy" true]
Test Case: 450 | Input/Output: ["od" false]
Test Case: 451 | Input/Output: ["yhmnewbunhyyioiisyr" false]
Test Case: 452 | Input/Output: ["ktpoaoytjuyx" false]
Test Case: 453 | Input/Output: ["pwk" false]
Test Case: 454 | Input/Output: ["rbmseo" true]
Test Case: 455 | Input/Output: ["elccxocv" false]
Test Case: 456 | Input/Output: ["atlryuagus" false]
Test Case: 457 | Input/Output: ["wbiicimnb" false]
Test Case: 458 | Input/Output: ["exwv" false]
Test Case: 459 | Input/Output: ["rawhuuquboivyjuhlijj" false]
Test Case: 460 | Input/Output: ["tpwfyedsmgyvy" true]
Test Case: 461 | Input/Output: ["d" false]
Test Case: 462 | Input/Output: ["ueketoeoedhoqlpiwu" true]
Test Case: 463 | Input/Output: ["xqadekseyoborhtvois" false]
Test Case: 464 | Input/Output: ["dfwr" false]
Test Case: 465 | Input/Output: ["kgs" false]
Test Case: 466 | Input/Output: ["kqcaxxfkj" false]
Test Case: 467 | Input/Output: ["vvtvoaxj" false]
Test Case: 468 | Input/Output: ["x" false]
Test Case: 469 | Input/Output: ["amapmshui" true]
Test Case: 470 | Input/Output: ["yftyatutiiwxpf" false]
Test Case: 471 | Input/Output: ["fjisqosofyabalo" true]
Test Case: 472 | Input/Output: ["uewvftq" false]
Test Case: 473 | Input/Output: ["uqtoboud" false]
Test Case: 474 | Input/Output: ["miotsxjqolkf" false]
Test Case: 475 | Input/Output: ["bmjaxoamo" true]
Test Case: 476 | Input/Output: ["mlrbnscgbxgh" false]
Test Case: 477 | Input/Output: ["iledubyienlt" false]
Test Case: 478 | Input/Output: ["nuiyiy" true]
Test Case: 479 | Input/Output: ["chwevhjkjoenvifsiaaw" false]
Test Case: 480 | Input/Output: ["xurqpaakelscblyty" true]
Test Case: 481 | Input/Output: ["iiaqwkrqrxyaq" false]
Test Case: 482 | Input/Output: ["qaeivoaybucaosmqoicq" false]
Test Case: 483 | Input/Output: ["mgqo" true]
Test Case: 484 | Input/Output: ["y" true]
Test Case: 485 | Input/Output: ["qyul" false]
Test Case: 486 | Input/Output: ["yisdlfevji" true]
Test Case: 487 | Input/Output: ["eiui" true]
Test Case: 488 | Input/Output: ["qeqivocuaiqseoeqqj" false]
Test Case: 489 | Input/Output: ["dnsrkmoa" true]
Test Case: 490 | Input/Output: ["oaxttmpocsoruy" true]
Test Case: 491 | Input/Output: ["jqalsxjpifiekt" false]
Test Case: 492 | Input/Output: ["ujndyvea" true]
Test Case: 493 | Input/Output: ["wohxrxgglhiiul" false]
Test Case: 494 | Input/Output: ["plneiakcixi" true]
Test Case: 495 | Input/Output: ["ihsm" false]
Test Case: 496 | Input/Output: ["ftopuibgqscb" false]
Test Case: 497 | Input/Output: ["wvhrgfwwicohn" false]
Test Case: 498 | Input/Output: ["mfubvd" false]
Test Case: 499 | Input/Output: ["fdumeiiiu" true]
Test Case: 500 | Input/Output: ["fccoiarreho" true]
Test Case: 501 | Input/Output: ["edujgoi" true]
Test Case: 502 | Input/Output: ["eduodh" false]
Test Case: 503 | Input/Output: ["jtesjlhoikuhlr" false]
Test Case: 504 | Input/Output: ["uoneiobjeg" false]
Test Case: 505 | Input/Output: ["et" false]
Test Case: 506 | Input/Output: ["f" false]
Test Case: 507 | Input/Output: ["a" true]
Test Case: 508 | Input/Output: ["salafaojrwrlooouqyy" true]
Test Case: 509 | Input/Output: ["gxylthyc" false]
Test Case: 510 | Input/Output: ["ishocmbaeohxi" true]
Test Case: 511 | Input/Output: ["oul" false]
Test Case: 512 | Input/Output: ["a" true]
Test Case: 513 | Input/Output: ["wqupy" true]
Test Case: 514 | Input/Output: ["skiebrmou" true]
Test Case: 515 | Input/Output: ["vljuakivauymfnqiovcv" false]
Test Case: 516 | Input/Output: ["qjejlaexeriayfckih" false]
Test Case: 517 | Input/Output: ["i" true]
Test Case: 518 | Input/Output: ["amyyfyude" true]
Test Case: 519 | Input/Output: ["dicalbnxhus" false]
Test Case: 520 | Input/Output: ["xtywafaootuvmqcrou" true]
Test Case: 521 | Input/Output: ["ueaedppsciouw" false]
Test Case: 522 | Input/Output: ["yhpuoxauqde" true]
Test Case: 523 | Input/Output: ["ntsxyiuoiua" true]
Test Case: 524 | Input/Output: ["owjwatch" false]
Test Case: 525 | Input/Output: ["lxoqeupbjif" false]
Test Case: 526 | Input/Output: ["joaavslsgousbsdnsb" false]
Test Case: 527 | Input/Output: ["ensdx" false]
Test Case: 528 | Input/Output: ["mpcsse" true]
Test Case: 529 | Input/Output: ["vdwjhmupsoo" true]
Test Case: 530 | Input/Output: ["lmy" true]
Test Case: 531 | Input/Output: ["whswugvipry" true]
Test Case: 532 | Input/Output: ["uacfovcarwlq" false]
Test Case: 533 | Input/Output: ["enuyjhefoalpticy" true]
Test Case: 534 | Input/Output: ["sgumsumnxynucg" false]
Test Case: 535 | Input/Output: ["derouvlyywjwbih" false]
Test Case: 536 | Input/Output: ["vekcujlok" false]
Test Case: 537 | Input/Output: ["lgtfg" false]
Test Case: 538 | Input/Output: ["aegoiwelfsb" false]
Test Case: 539 | Input/Output: ["deiry" true]
Test Case: 540 | Input/Output: ["gkyxsovle" true]
Test Case: 541 | Input/Output: ["wadkmeygoydwaosuodou" true]
Test Case: 542 | Input/Output: ["jdyi" true]
Test Case: 543 | Input/Output: ["qxnvragovq" false]
Test Case: 544 | Input/Output: ["pyyktpseiiqfmse" true]
Test Case: 545 | Input/Output: ["mptavcnesoxekiyor" false]
Test Case: 546 | Input/Output: ["usaesjvtkt" false]
Test Case: 547 | Input/Output: ["luxxubujmxieehyyd" false]
Test Case: 548 | Input/Output: ["jfrqsiarxye" true]
Test Case: 549 | Input/Output: ["yaoyrkcyefjc" false]
Test Case: 550 | Input/Output: ["lxclr" false]
Test Case: 551 | Input/Output: ["vn" false]
Test Case: 552 | Input/Output: ["opkixkfvqjyyo" true]
Test Case: 553 | Input/Output: ["iyriiycgwqyxj" false]
Test Case: 554 | Input/Output: ["jea" true]
Test Case: 555 | Input/Output: ["wom" false]
Test Case: 556 | Input/Output: ["mukyukmfjs" false]
Test Case: 557 | Input/Output: ["louepxitt" false]
Test Case: 558 | Input/Output: ["i" true]
Test Case: 559 | Input/Output: ["kybdixqv" false]
Test Case: 560 | Input/Output: ["juwa" true]
Test Case: 561 | Input/Output: ["keqoerpa" true]
Test Case: 562 | Input/Output: ["aapiao" true]
Test Case: 563 | Input/Output: ["d" false]
Test Case: 564 | Input/Output: ["eq" false]
Test Case: 565 | Input/Output: ["tihdepogwiefhi" true]
Test Case: 566 | Input/Output: ["ooqnlwgkwhiem" false]
Test Case: 567 | Input/Output: ["xnmdnxqhoytlouook" false]
Test Case: 568 | Input/Output: ["uyapvlyuosvptfvui" true]
Test Case: 569 | Input/Output: ["douxuxhop" false]
Test Case: 570 | Input/Output: ["jhvuehvud" false]
Test Case: 571 | Input/Output: ["lclatasoimixdmjeo" true]
Test Case: 572 | Input/Output: ["amemhql" false]
Test Case: 573 | Input/Output: ["ishseydjiyochugyloiy" true]
Test Case: 574 | Input/Output: ["ayyaasl" false]
Test Case: 575 | Input/Output: ["oqyjayubapmvk" false]
Test Case: 576 | Input/Output: ["ayatw" false]
Test Case: 577 | Input/Output: ["ena" true]
Test Case: 578 | Input/Output: ["foeyeqwyfu" true]
Test Case: 579 | Input/Output: ["rmjgua" true]
Test Case: 580 | Input/Output: ["uw" false]
Test Case: 581 | Input/Output: ["iefjuttvjpjihuvhy" true]
Test Case: 582 | Input/Output: ["bo" true]
Test Case: 583 | Input/Output: ["dmneqqwspwy" true]
Test Case: 584 | Input/Output: ["oimdmagooxacici" true]
Test Case: 585 | Input/Output: ["mwyciut" false]
Test Case: 586 | Input/Output: ["jdtupkywmamlirqrxgqs" false]
Test Case: 587 | Input/Output: ["casv" false]
Test Case: 588 | Input/Output: ["fnvfnuoidyk" false]
Test Case: 589 | Input/Output: ["ixgqhbuyrieguavxbqa" true]
Test Case: 590 | Input/Output: ["gdusgqm" false]
Test Case: 591 | Input/Output: ["wtpohcouxlexng" false]
Test Case: 592 | Input/Output: ["dioeitoauqofikvewclr" false]
Test Case: 593 | Input/Output: ["khqjhg" false]
Test Case: 594 | Input/Output: ["ajraaytapu" true]
Test Case: 595 | Input/Output: ["nanaamkcuafokgiy" true]
Test Case: 596 | Input/Output: ["asmedcodamxnhbxqa" true]
Test Case: 597 | Input/Output: ["tibglouoteaj" false]
Test Case: 598 | Input/Output: ["hh" false]
Test Case: 599 | Input/Output: ["aytrmmvwyhkred" false]
Test Case: 600 | Input/Output: ["pcxmxenk" false]
Test Case: 601 | Input/Output: ["uyorgnjciurbe" true]
Test Case: 602 | Input/Output: ["uagpfmiyxklejnrjull" false]
Test Case: 603 | Input/Output: ["iaarjryoyngydqiaa" true]
Test Case: 604 | Input/Output: ["pfat" false]
Test Case: 605 | Input/Output: ["oucfleaeuh" false]
Test Case: 606 | Input/Output: ["sqew" false]
Test Case: 607 | Input/Output: ["sn" false]
Test Case: 608 | Input/Output: ["pxmgf" false]
Test Case: 609 | Input/Output: ["osdjwrdoenlmkhasx" false]
Test Case: 610 | Input/Output: ["ykjyicvoagri" true]
Test Case: 611 | Input/Output: ["weplikyglutpsopjv" false]
Test Case: 612 | Input/Output: ["awfrj" false]
Test Case: 613 | Input/Output: ["ypovgkfrapjgarbiaq" false]
Test Case: 614 | Input/Output: ["pcoaw" false]
Test Case: 615 | Input/Output: ["tcfox" false]
Test Case: 616 | Input/Output: ["l" false]
Test Case: 617 | Input/Output: ["ygnrtuorbgoycq" false]
Test Case: 618 | Input/Output: ["nuhu" true]
Test Case: 619 | Input/Output: ["gfyp" false]
Test Case: 620 | Input/Output: ["yyasnsxcaixu" true]
Test Case: 621 | Input/Output: ["jskuveeviuoowiqrodax" false]
Test Case: 622 | Input/Output: ["wspadhwvj" false]
Test Case: 623 | Input/Output: ["amfygixlay" true]
Test Case: 624 | Input/Output: ["orpwjcsnoxkoyupe" true]
Test Case: 625 | Input/Output: ["txernutiorgvuahavu" true]
Test Case: 626 | Input/Output: ["ipjeabpdymo" true]
Test Case: 627 | Input/Output: ["yle" true]
Test Case: 628 | Input/Output: ["yqhujtpayacfk" false]
Test Case: 629 | Input/Output: ["uuwuilntujoyi" true]
Test Case: 630 | Input/Output: ["sgsi" true]
Test Case: 631 | Input/Output: ["iidaoyeexcso" true]
Test Case: 632 | Input/Output: ["mwnuxsamiljijiaqqos" false]
Test Case: 633 | Input/Output: ["rwpjoplc" false]
Test Case: 634 | Input/Output: ["cwgshisu" true]
Test Case: 635 | Input/Output: ["faafmuseqv" false]
Test Case: 636 | Input/Output: ["qyeabdvcpwe" true]
Test Case: 637 | Input/Output: ["kiyciuyhjjeahurlrx" false]
Test Case: 638 | Input/Output: ["hsqiwyihiji" true]
Test Case: 639 | Input/Output: ["euguwiadwk" false]
Test Case: 640 | Input/Output: ["jmwnnrsoptanovvaage" true]
Test Case: 641 | Input/Output: ["ruuarnu" true]
Test Case: 642 | Input/Output: ["e" true]
Test Case: 643 | Input/Output: ["wogjkfmvkgeuy" true]
Test Case: 644 | Input/Output: ["e" true]
Test Case: 645 | Input/Output: ["nlvqtgkpivywmcm" false]
Test Case: 646 | Input/Output: ["tpqonqjemomdjblsbcj" false]
Test Case: 647 | Input/Output: ["iihnigupbxev" false]
Test Case: 648 | Input/Output: ["goiyywok" false]
Test Case: 649 | Input/Output: ["devboiekjfpejiggxbwy" true]
Test Case: 650 | Input/Output: ["uoqbywxiinjeieycv" false]
Test Case: 651 | Input/Output: ["jhkgch" false]
Test Case: 652 | Input/Output: ["khqpy" true]
Test Case: 653 | Input/Output: ["srbxfqvyfhfga" true]
Test Case: 654 | Input/Output: ["wtgdpgrpyaevsgbrswo" true]
Test Case: 655 | Input/Output: ["pyqo" true]
Test Case: 656 | Input/Output: ["qthrooqjbtlirgus" false]
Test Case: 657 | Input/Output: ["qij" false]
Test Case: 658 | Input/Output: ["uhklmjolqeqna" true]
Test Case: 659 | Input/Output: ["lifovpjgq" false]
Test Case: 660 | Input/Output: ["jxdj" false]
Test Case: 661 | Input/Output: ["spyeglsau" true]
Test Case: 662 | Input/Output: ["qgamiogrtm" false]
Test Case: 663 | Input/Output: ["dxrsrvkripiworaatadi" true]
Test Case: 664 | Input/Output: ["wawirepguhavnb" false]
Test Case: 665 | Input/Output: ["feocxkvoexjpnia" true]
Test Case: 666 | Input/Output: ["oplpcofsjjqxxxj" false]
Test Case: 667 | Input/Output: ["kmnsuieuysiduyfuimf" false]
Test Case: 668 | Input/Output: ["ioujrhdcyexnffk" false]
Test Case: 669 | Input/Output: ["olitobjue" true]
Test Case: 670 | Input/Output: ["nvpxg" false]
Test Case: 671 | Input/Output: ["uykegkpdoi" true]
Test Case: 672 | Input/Output: ["wbukbhnkmlfuussfp" false]
Test Case: 673 | Input/Output: ["juuaopbrq" false]
Test Case: 674 | Input/Output: ["bkxeinf" false]
Test Case: 675 | Input/Output: ["wnfxobwqliitwpuyfog" false]
Test Case: 676 | Input/Output: ["u" true]
Test Case: 677 | Input/Output: ["yxad" false]
Test Case: 678 | Input/Output: ["euufo" true]
Test Case: 679 | Input/Output: ["fotkuiuoeko" true]
Test Case: 680 | Input/Output: ["ujugtqypcjmkejle" true]
Test Case: 681 | Input/Output: ["ciiameumyjljm" false]
Test Case: 682 | Input/Output: ["wqnvujpwudn" false]
Test Case: 683 | Input/Output: ["rogai" true]
Test Case: 684 | Input/Output: ["iepewpyfkkv" false]
Test Case: 685 | Input/Output: ["imxvibff" false]
Test Case: 686 | Input/Output: ["ycealusipwwovnee" true]
Test Case: 687 | Input/Output: ["ggxyvojqcyieacjhefu" true]
Test Case: 688 | Input/Output: ["eeauvsibxp" false]
Test Case: 689 | Input/Output: ["idhsxamncfiqqe" true]
Test Case: 690 | Input/Output: ["nneirsxgmiiaomuub" false]
Test Case: 691 | Input/Output: ["uyl" false]
Test Case: 692 | Input/Output: ["nrofnwg" false]
Test Case: 693 | Input/Output: ["r" false]
Test Case: 694 | Input/Output: ["lyoaos" false]
Test Case: 695 | Input/Output: ["av" false]
Test Case: 696 | Input/Output: ["bstfawsih" false]
Test Case: 697 | Input/Output: ["k" false]
Test Case: 698 | Input/Output: ["vpoavtit" false]
Test Case: 699 | Input/Output: ["quuwcewvyu" true]
Test Case: 700 | Input/Output: ["tohjfmmy" true]
Test Case: 701 | Input/Output: ["uojuyiempmqpnpar" false]
Test Case: 702 | Input/Output: ["tdcpouciooaufb" false]
Test Case: 703 | Input/Output: ["oiaogwekbysvnbiol" false]
Test Case: 704 | Input/Output: ["kaydij" false]
Test Case: 705 | Input/Output: ["cykeqftwos" false]
Test Case: 706 | Input/Output: ["jdyglaasajo" true]
Test Case: 707 | Input/Output: ["moveaxxowe" true]
Test Case: 708 | Input/Output: ["yxkfxsydg" false]
Test Case: 709 | Input/Output: ["eniteayyyb" false]
Test Case: 710 | Input/Output: ["pcydhnyejsvpi" true]
Test Case: 711 | Input/Output: ["qxlllroynsspako" true]
Test Case: 712 | Input/Output: ["udxo" true]
Test Case: 713 | Input/Output: ["f" false]
Test Case: 714 | Input/Output: ["yyagebpebpymdfheasf" false]
Test Case: 715 | Input/Output: ["iejp" false]
Test Case: 716 | Input/Output: ["eprebkmqloihue" true]
Test Case: 717 | Input/Output: ["aoykftailox" false]
Test Case: 718 | Input/Output: ["cyxiuiyyhyomxmauusy" true]
Test Case: 719 | Input/Output: ["swq" false]
Test Case: 720 | Input/Output: ["bdjrjufsruta" true]
Test Case: 721 | Input/Output: ["dgpxspihxtwcfin" false]
Test Case: 722 | Input/Output: ["i" true]
Test Case: 723 | Input/Output: ["waedsvcyaosmohu" true]
Test Case: 724 | Input/Output: ["ydyvikusxu" true]
Test Case: 725 | Input/Output: ["vdujkutuweintud" false]
Test Case: 726 | Input/Output: ["pxwiupkfdwoynu" true]
Test Case: 727 | Input/Output: ["kkhxudaes" false]
Test Case: 728 | Input/Output: ["apvemybtlgemwjlohjo" true]
Test Case: 729 | Input/Output: ["qump" false]
Test Case: 730 | Input/Output: ["uu" true]
Test Case: 731 | Input/Output: ["iprweqjhnyauo" true]
Test Case: 732 | Input/Output: ["oekugeaqjfosoh" false]
Test Case: 733 | Input/Output: ["eioepekfppjjyaihb" false]
Test Case: 734 | Input/Output: ["qu" true]
Test Case: 735 | Input/Output: ["cphvvysnviasslwy" true]
Test Case: 736 | Input/Output: ["fxyubgqobmmsel" false]
Test Case: 737 | Input/Output: ["gmjkaeaorifneivo" true]
Test Case: 738 | Input/Output: ["eoojumlaodl" false]
Test Case: 739 | Input/Output: ["i" true]
Test Case: 740 | Input/Output: ["noousro" true]
Test Case: 741 | Input/Output: ["ngcvunaeftdg" false]
Test Case: 742 | Input/Output: ["moabidsbglti" true]
Test Case: 743 | Input/Output: ["edohobtaefnegsss" false]
Test Case: 744 | Input/Output: ["ecgfyngiuorbmrmwitai" true]
Test Case: 745 | Input/Output: ["hsegnksus" false]
Test Case: 746 | Input/Output: ["ireefmoidqenluikr" false]
Test Case: 747 | Input/Output: ["opgtuhoaeuyamkb" false]
Test Case: 748 | Input/Output: ["vferdleime" true]
Test Case: 749 | Input/Output: ["byoihsooomvfilrb" false]
Test Case: 750 | Input/Output: ["hmbiqywjeejudi" true]
Test Case: 751 | Input/Output: ["otkailo" true]
Test Case: 752 | Input/Output: ["dy" true]
Test Case: 753 | Input/Output: ["jletqarxhkoaeavxau" true]
Test Case: 754 | Input/Output: ["gewlwxmtyk" false]
Test Case: 755 | Input/Output: ["jj" false]
Test Case: 756 | Input/Output: ["fahjygwluv" false]
Test Case: 757 | Input/Output: ["gvaoxnaawek" false]
Test Case: 758 | Input/Output: ["ayryp" false]
Test Case: 759 | Input/Output: ["htvfeb" false]
Test Case: 760 | Input/Output: ["ytbahyouiddjhbvry" true]
Test Case: 761 | Input/Output: ["yxmph" false]
Test Case: 762 | Input/Output: ["opvudiusaxyl" false]
Test Case: 763 | Input/Output: ["ovdqikfooeo" true]
Test Case: 764 | Input/Output: ["sn" false]
Test Case: 765 | Input/Output: ["qgsyyvocm" false]
Test Case: 766 | Input/Output: ["vudxairwefvoluxr" false]
Test Case: 767 | Input/Output: ["auusiwqloamojc" false]
Test Case: 768 | Input/Output: ["tuvufywaswghoiogpdha" true]
Test Case: 769 | Input/Output: ["tdxi" true]
Test Case: 770 | Input/Output: ["imoayykegmrbylceuol" false]
Test Case: 771 | Input/Output: ["uu" true]
Test Case: 772 | Input/Output: ["disaoyopgobqdqisnuxe" true]
Test Case: 773 | Input/Output: ["voayfypoprpew" false]
Test Case: 774 | Input/Output: ["aqj" false]
Test Case: 775 | Input/Output: ["ceniaegiyc" false]
Test Case: 776 | Input/Output: ["iamtqqiylirbvg" false]
Test Case: 777 | Input/Output: ["vioatcwfdgevduaored" false]
Test Case: 778 | Input/Output: ["tyym" false]
Test Case: 779 | Input/Output: ["xwnfyqanka" true]
Test Case: 780 | Input/Output: ["ajvat" false]
Test Case: 781 | Input/Output: ["jnfuis" false]
Test Case: 782 | Input/Output: ["kfyka" true]
Test Case: 783 | Input/Output: ["ydgaysyfe" true]
Test Case: 784 | Input/Output: ["gtor" false]
Test Case: 785 | Input/Output: ["xfswnntajw" false]
Test Case: 786 | Input/Output: ["yeryaf" false]
Test Case: 787 | Input/Output: ["tmwomto" true]
Test Case: 788 | Input/Output: ["ltlnwypmnviapjaim" false]
Test Case: 789 | Input/Output: ["tahyxuxowqf" false]
Test Case: 790 | Input/Output: ["eyiryduydsh" false]
Test Case: 791 | Input/Output: ["cyjqvuvkvuusuonq" false]
Test Case: 792 | Input/Output: ["ioxlqlwmxselwsul" false]
Test Case: 793 | Input/Output: ["ndfjhekfustyt" false]
Test Case: 794 | Input/Output: ["toyolgolpt" false]
Test Case: 795 | Input/Output: ["ftoyhddco" true]
Test Case: 796 | Input/Output: ["oqy" true]
Test Case: 797 | Input/Output: ["vsebrdenpwky" true]
Test Case: 798 | Input/Output: ["umoclmuq" false]
Test Case: 799 | Input/Output: ["wo" true]
Test Case: 800 | Input/Output: ["qnlpobjbiyaanux" false]
Test Case: 801 | Input/Output: ["ihddyeuvuiocpnfyqe" true]
Test Case: 802 | Input/Output: ["a" true]
Test Case: 803 | Input/Output: ["exce" true]
Test Case: 804 | Input/Output: ["isjcrnv" false]
Test Case: 805 | Input/Output: ["hkvalps" false]
Test Case: 806 | Input/Output: ["hipxquq" false]
Test Case: 807 | Input/Output: ["ljhdyfyomdinjnilllq" false]
Test Case: 808 | Input/Output: ["oyedniyqlyoimsne" true]
Test Case: 809 | Input/Output: ["i" true]
Test Case: 810 | Input/Output: ["rahtfimgej" false]
Test Case: 811 | Input/Output: ["nocwililhjyp" false]
Test Case: 812 | Input/Output: ["dvqqgrbjgc" false]
Test Case: 813 | Input/Output: ["pahncv" false]
Test Case: 814 | Input/Output: ["jrgydwxshkjnaqfaex" false]
Test Case: 815 | Input/Output: ["jv" false]
Test Case: 816 | Input/Output: ["jrugfsj" false]
Test Case: 817 | Input/Output: ["uiuemxefl" false]
Test Case: 818 | Input/Output: ["tc" false]
Test Case: 819 | Input/Output: ["uueukhswqg" false]
Test Case: 820 | Input/Output: ["draijxwysmsfvlheanix" false]
Test Case: 821 | Input/Output: ["y" true]
Test Case: 822 | Input/Output: ["hoy" true]
Test Case: 823 | Input/Output: ["hheewlgduqsjtreqort" false]
Test Case: 824 | Input/Output: ["fqwrmuncasneta" true]
Test Case: 825 | Input/Output: ["qswsslus" false]
Test Case: 826 | Input/Output: ["eqvlajjehgxjfhvkagt" false]
Test Case: 827 | Input/Output: ["ibydwka" true]
Test Case: 828 | Input/Output: ["maqdgrsmroaigwo" true]
Test Case: 829 | Input/Output: ["dnnmotl" false]
Test Case: 830 | Input/Output: ["bujwuxraqiynlksaih" false]
Test Case: 831 | Input/Output: ["iamywua" true]
Test Case: 832 | Input/Output: ["iossbmfyrgx" false]
Test Case: 833 | Input/Output: ["xp" false]
Test Case: 834 | Input/Output: ["oeuhwibqfsbihxivfosq" false]
Test Case: 835 | Input/Output: ["fislmftu" true]
Test Case: 836 | Input/Output: ["wxwnxrreec" false]
Test Case: 837 | Input/Output: ["yeeicaeuq" false]
Test Case: 838 | Input/Output: ["nxl" false]
Test Case: 839 | Input/Output: ["ipaiafweugqdwyqc" false]
Test Case: 840 | Input/Output: ["lewtiinwolu" true]
Test Case: 841 | Input/Output: ["leeyro" true]
Test Case: 842 | Input/Output: ["qntxiameenyeiabe" true]
Test Case: 843 | Input/Output: ["ucaedvniaonlcli" true]
Test Case: 844 | Input/Output: ["ayfl" false]
Test Case: 845 | Input/Output: ["veoximterryeeip" false]
Test Case: 846 | Input/Output: ["fycyaalma" true]
Test Case: 847 | Input/Output: ["klmfejbhaag" false]
Test Case: 848 | Input/Output: ["miyyuici" true]
Test Case: 849 | Input/Output: ["oconvhelxolty" true]
Test Case: 850 | Input/Output: ["tyuyoduslyyoa" true]
Test Case: 851 | Input/Output: ["rxuhk" false]
Test Case: 852 | Input/Output: ["xneoaysmrgfy" true]
Test Case: 853 | Input/Output: ["rrdeqli" true]
Test Case: 854 | Input/Output: ["ygnrqskap" false]
Test Case: 855 | Input/Output: ["k" false]
Test Case: 856 | Input/Output: ["xvdyrqvncmb" false]
Test Case: 857 | Input/Output: ["o" true]
Test Case: 858 | Input/Output: ["gmvrnnc" false]
Test Case: 859 | Input/Output: ["swncqxaalteexxbgseil" false]
Test Case: 860 | Input/Output: ["yhyyvdyjoagyhmjcyuec" false]
Test Case: 861 | Input/Output: ["aqsdyuudonbnbxsd" false]
Test Case: 862 | Input/Output: ["tojukyfjpaoxseg" false]
Test Case: 863 | Input/Output: ["tehl" false]
Test Case: 864 | Input/Output: ["sedarl" false]
Test Case: 865 | Input/Output: ["inwjuequwanuia" true]
Test Case: 866 | Input/Output: ["einyiuihangipaouiu" true]
Test Case: 867 | Input/Output: ["wkvamnoe" true]
Test Case: 868 | Input/Output: ["xhpqpwutnyjqfybwgdsg" false]
Test Case: 869 | Input/Output: ["eybyofeupbyichdjetui" true]
Test Case: 870 | Input/Output: ["lipbyueyetiotsdsv" false]
Test Case: 871 | Input/Output: ["ixvifvceohldn" false]
Test Case: 872 | Input/Output: ["uavxtamskowvov" false]
Test Case: 873 | Input/Output: ["tovbo" true]
Test Case: 874 | Input/Output: ["soqkoequoqreriryafuy" true]
Test Case: 875 | Input/Output: ["ixjvddjmyhuwits" false]
Test Case: 876 | Input/Output: ["rpxiucm" false]
Test Case: 877 | Input/Output: ["pupgiydmatjmifeohmv" false]
Test Case: 878 | Input/Output: ["vgfixxgd" false]
Test Case: 879 | Input/Output: ["grnjqeijiqffpajv" false]
Test Case: 880 | Input/Output: ["wcoicxmsoofehuidr" false]
Test Case: 881 | Input/Output: ["dorecnsssrwhajx" false]
Test Case: 882 | Input/Output: ["c" false]
Test Case: 883 | Input/Output: ["okiaudamgc" false]
Test Case: 884 | Input/Output: ["xaeroywua" true]
Test Case: 885 | Input/Output: ["otgajatyyh" false]
Test Case: 886 | Input/Output: ["yughuonaxvutu" true]
Test Case: 887 | Input/Output: ["yuvuvd" false]
Test Case: 888 | Input/Output: ["ihqopyumumsi" true]
Test Case: 889 | Input/Output: ["rbxsdifbbdduq" false]
Test Case: 890 | Input/Output: ["pd" false]
Test Case: 891 | Input/Output: ["kasfdilegymfouleygt" false]
Test Case: 892 | Input/Output: ["rj" false]
Test Case: 893 | Input/Output: ["io" true]
Test Case: 894 | Input/Output: ["avdpmcaafmqaqu" true]
Test Case: 895 | Input/Output: ["ahqyeuvbdjhuablsbuat" false]
Test Case: 896 | Input/Output: ["xqeu" true]
Test Case: 897 | Input/Output: ["hfdp" false]
Test Case: 898 | Input/Output: ["ctyoi" true]
Test Case: 899 | Input/Output: ["kkmggwcsy" true]
Test Case: 900 | Input/Output: ["yyhiahbyciroabmudlmk" false]
Test Case: 901 | Input/Output: ["jfeaideqc" false]
Test Case: 902 | Input/Output: ["ygmhmwihwkeq" false]
Test Case: 903 | Input/Output: ["bnpydqcvesfsdiyngeao" true]
Test Case: 904 | Input/Output: ["veuwbfmqosraujea" true]
Test Case: 905 | Input/Output: ["ujycuuao" true]
Test Case: 906 | Input/Output: ["feucaayqyy" true]
Test Case: 907 | Input/Output: ["oktaeqveviup" false]
Test Case: 908 | Input/Output: ["irgbuk" false]
Test Case: 909 | Input/Output: ["ql" false]
Test Case: 910 | Input/Output: ["qkahbovtcceouue" true]
Test Case: 911 | Input/Output: ["qogujyilgxavqlaug" false]
Test Case: 912 | Input/Output: ["oceuaykoyh" false]
Test Case: 913 | Input/Output: ["ht" false]
Test Case: 914 | Input/Output: ["uny" true]
Test Case: 915 | Input/Output: ["tih" false]
Test Case: 916 | Input/Output: ["uao" true]
Test Case: 917 | Input/Output: ["hgytwuejhjsunkso" true]
Test Case: 918 | Input/Output: ["wx" false]
Test Case: 919 | Input/Output: ["nguopbweooppas" false]
Test Case: 920 | Input/Output: ["ueisshyibiw" false]
Test Case: 921 | Input/Output: ["gfyhgdshc" false]
Test Case: 922 | Input/Output: ["er" false]
Test Case: 923 | Input/Output: ["vapwei" true]
Test Case: 924 | Input/Output: ["ooyvffoauxmofqurity" true]
Test Case: 925 | Input/Output: ["wrgjujy" true]
Test Case: 926 | Input/Output: ["lvb" false]
Test Case: 927 | Input/Output: ["dduo" true]
Test Case: 928 | Input/Output: ["elsionwuwsjseesnmp" false]
Test Case: 929 | Input/Output: ["aiuniecqbuh" false]
Test Case: 930 | Input/Output: ["mvaoyt" false]
Test Case: 931 | Input/Output: ["flchuygulfiquke" true]
Test Case: 932 | Input/Output: ["qo" true]
Test Case: 933 | Input/Output: ["yryo" true]
Test Case: 934 | Input/Output: ["tenmvargbmwtr" false]
Test Case: 935 | Input/Output: ["rqkukukheestlep" false]
Test Case: 936 | Input/Output: ["icnughkuymujiuaiaip" false]
Test Case: 937 | Input/Output: ["oryweseshatymrgqee" true]
Test Case: 938 | Input/Output: ["eqaln" false]
Test Case: 939 | Input/Output: ["uggjaoiowtciuvpg" false]
Test Case: 940 | Input/Output: ["adboigj" false]
Test Case: 941 | Input/Output: ["auvnykloojohejaxahnq" false]
Test Case: 942 | Input/Output: ["slaaln" false]
Test Case: 943 | Input/Output: ["bvvsuooiby" true]
Test Case: 944 | Input/Output: ["cxaysqohvchcunlt" false]
Test Case: 945 | Input/Output: ["ycipslutcju" true]
Test Case: 946 | Input/Output: ["xlaqibdpfaoaafkecgup" false]
Test Case: 947 | Input/Output: ["kuysuyyhihptua" true]
Test Case: 948 | Input/Output: ["rveojfihuarwb" false]
Test Case: 949 | Input/Output: ["hnawowwgquotok" false]
Test Case: 950 | Input/Output: ["xuou" true]
Test Case: 951 | Input/Output: ["eanfdigadoceiaaeo" true]
Test Case: 952 | Input/Output: ["dgmhyhdeuiy" true]
Test Case: 953 | Input/Output: ["eibhtxysbbeia" true]
Test Case: 954 | Input/Output: ["hyylvjwn" false]
Test Case: 955 | Input/Output: ["auswecfwdlssufe" true]
Test Case: 956 | Input/Output: ["aypjhgo" true]
Test Case: 957 | Input/Output: ["afct" false]
Test Case: 958 | Input/Output: ["rnjyemwbqleji" true]
Test Case: 959 | Input/Output: ["lesuxepbs" false]
Test Case: 960 | Input/Output: ["wlpccpcjchohbyrp" false]
Test Case: 961 | Input/Output: ["jwy" true]
Test Case: 962 | Input/Output: ["ayc" false]
Test Case: 963 | Input/Output: ["e" true]
Test Case: 964 | Input/Output: ["rfbuyogkqyyyiecow" false]
Test Case: 965 | Input/Output: ["bieitbdjd" false]
Test Case: 966 | Input/Output: ["bfpljhdiiiiinqlkyo" true]
Test Case: 967 | Input/Output: ["xy" true]
Test Case: 968 | Input/Output: ["vymmmsfprgiygito" true]
Test Case: 969 | Input/Output: ["ksjiuvefymmklaeytu" true]
Test Case: 970 | Input/Output: ["waxoidupihpa" true]
Test Case: 971 | Input/Output: ["aeqihlvdnw" false]
Test Case: 972 | Input/Output: ["nqtipujucjuoabjxolt" false]
Test Case: 973 | Input/Output: ["oaogstyraetcexr" false]
Test Case: 974 | Input/Output: ["kluxe" true]
Test Case: 975 | Input/Output: ["dnavciiheaosjouy" true]
Test Case: 976 | Input/Output: ["ljquf" false]
Test Case: 977 | Input/Output: ["vsiwgse" true]
Test Case: 978 | Input/Output: ["t" false]
Test Case: 979 | Input/Output: ["aovvhuhqlfvtujvedemp" false]
Test Case: 980 | Input/Output: ["ujywkgt" false]
Test Case: 981 | Input/Output: ["arbouoancducqtvjmidl" false]
Test Case: 982 | Input/Output: ["nxt" false]
Test Case: 983 | Input/Output: ["ificrsab" false]
Test Case: 984 | Input/Output: ["rnue" true]
Test Case: 985 | Input/Output: ["yppwbga" true]
Test Case: 986 | Input/Output: ["kyyb" false]
Test Case: 987 | Input/Output: ["ixmueofeomx" false]
Test Case: 988 | Input/Output: ["savhuura" true]
Test Case: 989 | Input/Output: ["oqhdqrcyip" false]
Test Case: 990 | Input/Output: ["k" false]
Test Case: 991 | Input/Output: ["ui" true]
Test Case: 992 | Input/Output: ["xeuoooec" false]
Test Case: 993 | Input/Output: ["pnxcdxgmiulkafhttl" false]
Test Case: 994 | Input/Output: ["yieuandkyp" false]
Test Case: 995 | Input/Output: ["aisro" true]
Test Case: 996 | Input/Output: ["ehqpvclog" false]
Test Case: 997 | Input/Output: ["gmoafllxxavq" false]
Test Case: 998 | Input/Output: ["qemdkmwgtinv" false]
Test Case: 999 | Input/Output: ["oyenufkdfpdanrdpkoo" true]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 1250d18dea804db8c91b2a8c57c9e9ffd45fe85f
GitHub link = https://github.com/lspector/Clojush/commit/1250d18dea804db8c91b2a8c57c9e9ffd45fe85f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 10
alternation-rate = 0.01
atom-generators = (a e i o u y aeiouy #object[clojush.problems.software.last_letter_vowel$fn__7462 0x1fd0ae78 clojush.problems.software.last_letter_vowel$fn__7462@1fd0ae78] #object[clojush.problems.software.last_letter_vowel$fn__7464 0x1f57666b clojush.problems.software.last_letter_vowel$fn__7464@1f57666b] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x637d111d clojush.instructions.tag$tag_instruction_erc$fn__2160@637d111d] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x1ed12d10 clojush.instructions.tag$tagged_instruction_erc$fn__2166@1ed12d10] in1 integer_sub integer_inc boolean_stackdepth boolean_pop string_fromchar exec_yankdup integer_yankdup string_flush boolean_swap exec_shove exec_y boolean_yank integer_eq string_butlast string_conjchar string_substring integer_mult boolean_or boolean_empty exec_s_when_autoconstructing char_dup_items char_iswhitespace string_first exec_do*while exec_string_iterate string_indexofchar integer_fromstring char_frominteger exec_dup_items boolean_dup_items exec_empty string_shove exec_rot char_pop exec_dup boolean_flush char_isdigit string_reverse exec_k char_rot boolean_xor integer_gte boolean_dup_times string_replacefirst boolean_shove string_last boolean_rot integer_div integer_lte integer_mod string_concat exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove string_dup_times char_swap integer_max char_dup_times string_eq integer_stackdepth string_take char_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq string_emptystring string_swap integer_yank exec_while integer_min exec_swap integer_fromchar string_stackdepth string_replacechar char_allfromstring char_yank string_pop integer_dup_items string_nth exec_do*range exec_if char_shove boolean_invert_first_then_and integer_fromboolean char_yankdup boolean_frominteger string_setchar char_isletter boolean_eq string_occurrencesofchar string_replacefirstchar integer_flush string_replace char_dup exec_y_when_autoconstructing char_eq integer_gt boolean_not exec_do*times string_empty char_empty exec_pop string_yankdup string_removechar char_flush exec_s integer_lt string_containschar string_yank exec_noop integer_swap string_split string_fromboolean integer_dup string_rest string_rot exec_yank string_parse_to_chars integer_pop integer_empty integer_dec string_contains string_dup_items exec_stackdepth boolean_and string_length string_frominteger exec_flush exec_when boolean_invert_second_then_and string_dup boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.last_letter_vowel$make_llv_error_function_from_cases$the_actual_llv_error_function__7471 0x6ca367aa clojush.problems.software.last_letter_vowel$make_llv_error_function_from_cases$the_actual_llv_error_function__7471@6ca367aa]
error-threshold = 0
evalpush-limit = 1600
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 300
max-genome-size-in-initial-program = 400
max-point-evaluations = 1.0E101
max-points = 3200
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = false
problem-specific-initial-report = #object[clojush.problems.software.last_letter_vowel$llv_initial_report 0x2a21cbe7 clojush.problems.software.last_letter_vowel$llv_initial_report@2a21cbe7]
problem-specific-report = #object[clojush.problems.software.last_letter_vowel$llv_report 0x4fbc516f clojush.problems.software.last_letter_vowel$llv_report@4fbc516f]
random-screen = false
random-seed = -30 -22 -41 -45 -31 57 -55 1 9 81 -31 -59 104 126 -80 7
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Last Letter Vowel problem report - generation 0
Test total error for best: 0
Test mean error for best: 0.00000
;;------------------------------
Outputs of best individual on training cases:

| Correct output: true
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction string_pop} {:close 1, :instruction string_indexofchar} {:close 1, :instruction integer_mod} {:close 1, :instruction string_empty} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 2, :instruction char_dup_times} {:close 0, :instruction string_indexofchar} {:close 0, :instruction boolean_yank} {:close 0, :instruction string_stackdepth} {:close 1, :instruction boolean_and} {:close 1, :instruction string_replace} {:close 0, :instruction string_replacechar} {:close 1, :instruction boolean_xor} {:close 0, :instruction string_empty} {:close 0, :instruction string_frominteger} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_flush} {:close 0, :instruction string_concat} {:close 0, :instruction \e} {:close 0, :instruction string_substring} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction \u} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_noop} {:close 0, :instruction string_fromboolean} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_shove} {:close 0, :instruction \e} {:close 0, :instruction char_allfromstring} {:close 1, :instruction boolean_pop} {:close 0, :instruction char_shove} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction char_allfromstring} {:close 1, :instruction string_dup_items} {:close 1, :instruction integer_shove} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_empty} {:close 0, :instruction string_parse_to_chars} {:close 1, :instruction string_swap} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction "bmojca"} {:close 0, :instruction in1} {:close 0, :instruction integer_add} {:close 0, :instruction string_last} {:close 0, :instruction char_shove} {:close 0, :instruction char_rot} {:close 2, :instruction exec_do*count} {:close 1, :instruction char_iswhitespace} {:close 0, :instruction char_iswhitespace} {:close 3, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction "aeiouy"} {:close 0, :instruction string_containschar} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_stackdepth} {:close 0, :instruction char_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 2, :instruction integer_fromchar} {:close 1, :instruction char_flush} {:close 0, :instruction string_dup_items} {:close 0, :instruction char_iswhitespace} {:close 1, :instruction string_emptystring} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction string_replacefirstchar} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_yankdup} {:close 1, :instruction "caushp"} {:close 0, :instruction char_pop} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction string_stackdepth} {:close 0, :instruction exec_string_iterate} {:close 1, :instruction integer_div} {:close 0, :instruction char_shove} {:close 0, :instruction \y} {:close 1, :instruction string_nth} {:close 0, :instruction \e} {:close 0, :instruction char_shove} {:close 0, :instruction integer_max} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_mult} {:close 0, :instruction string_concat} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_shove} {:close 0, :instruction exec_swap} {:close 0, :instruction string_yankdup} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction string_split} {:close 0, :instruction char_pop} {:close 0, :instruction string_fromchar} {:close 1, :instruction boolean_eq} {:close 1, :instruction string_length} {:close 0, :instruction string_fromboolean} {:close 0, :instruction string_dup_times} {:close 1, :instruction boolean_dup} {:close 0, :instruction string_rest} {:close 1, :instruction string_fromchar} {:close 0, :instruction exec_if} {:close 1, :instruction in1} {:close 0, :instruction string_flush} {:close 0, :instruction boolean_flush} {:close 0, :instruction char_yank} {:close 0, :instruction string_rot} {:close 0, :instruction tagged_907} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_yank} {:close 0, :instruction char_flush} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction string_concat} {:close 0, :instruction boolean_flush} {:close 0, :instruction string_eq} {:close 1, :instruction exec_dup_times} {:close 0, :instruction char_shove} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_and} {:close 0, :instruction string_replace} {:close 0, :instruction string_stackdepth} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_not} {:close 0, :instruction string_indexofchar} {:close 1, :instruction string_flush} {:close 0, :instruction string_conjchar} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_gte} {:close 1, :instruction \y} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_split} {:close 0, :instruction char_yankdup} {:close 1, :instruction char_empty} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction boolean_or} {:close 0, :instruction string_take} {:close 0, :instruction string_shove} {:close 1, :instruction string_removechar} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction \a} {:close 0, :instruction string_eq} {:close 1, :instruction string_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_rot} {:close 0, :instruction string_frominteger} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_empty} {:close 0, :instruction string_take} {:close 0, :instruction string_eq} {:close 2, :instruction string_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction char_dup} {:close 1, :instruction char_yankdup} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_shove} {:close 0, :instruction string_emptystring} {:close 1, :instruction string_fromboolean} {:close 0, :instruction string_yank} {:close 0, :instruction tagged_110} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_yank} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yank} {:close 1, :instruction in1} {:close 1, :instruction integer_rot} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction string_rot} {:close 0, :instruction exec_dup_items} {:close 0, :instruction string_nth} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_pop} {:close 1, :instruction char_yank} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_swap} {:close 1, :instruction string_butlast} {:close 1, :instruction tagged_977} {:close 0, :instruction exec_k} {:close 0, :instruction "achuiyqknsl"} {:close 0, :instruction integer_yankdup} {:close 0, :instruction tagged_824} {:close 0, :instruction tagged_147} {:close 0, :instruction string_shove} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction "knueyvwly"} {:close 1, :instruction boolean_yank} {:close 0, :instruction string_yank} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction char_frominteger} {:close 0, :instruction string_last} {:close 0, :instruction string_removechar} {:close 0, :instruction string_empty} {:close 1, :instruction char_stackdepth} {:close 0, :instruction \u} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_swap} {:close 1, :instruction string_yank} {:close 0, :instruction string_rot} {:close 1, :instruction \o} {:close 0, :instruction exec_s} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_swap} {:close 0, :instruction string_shove} {:close 0, :instruction string_dup_items} {:close 1, :instruction integer_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_while} {:close 0, :instruction integer_max} {:close 0, :instruction \y} {:close 0, :instruction integer_dec} {:close 0, :instruction char_pop} {:close 0, :instruction string_substring} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_or} {:close 2, :instruction char_isdigit} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_do*range} {:close 1, :instruction integer_gt} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction string_stackdepth} {:close 1, :instruction string_flush} {:close 0, :instruction integer_fromstring} {:close 0, :instruction \e} {:close 0, :instruction string_fromchar} {:close 1, :instruction exec_string_iterate} {:close 0, :instruction string_empty} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction string_rest} {:close 0, :instruction boolean_not} {:close 0, :instruction string_fromboolean} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_not} {:close 0, :instruction char_stackdepth} {:close 0, :instruction string_emptystring} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_pop} {:close 0, :instruction string_setchar} {:close 1, :instruction char_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction string_occurrencesofchar} {:close 0, :instruction char_allfromstring} {:close 0, :instruction char_isdigit} {:close 0, :instruction integer_eq} {:close 0, :instruction string_last} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction string_containschar} {:close 0, :instruction string_concat} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction string_conjchar} {:close 1, :instruction string_yank} {:close 0, :instruction exec_if} {:close 1, :instruction string_swap} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction \t} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction string_replace} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_do*count} {:close 0, :instruction char_yankdup} {:close 0, :instruction exec_dup_items} {:close 1, :instruction \y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_min} {:close 0, :instruction char_rot} {:close 0, :instruction boolean_dup} {:close 2, :instruction integer_mod} {:close 0, :instruction tag_string_246} {:close 1, :instruction integer_yank} {:close 0, :instruction char_iswhitespace} {:close 0, :instruction string_occurrencesofchar} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_max} {:close 0, :instruction string_dup} {:close 1, :instruction integer_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_fromstring} {:close 0, :instruction char_swap} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction integer_dup} {:close 0, :instruction string_empty} {:close 2, :instruction string_swap} {:close 1, :instruction string_stackdepth} {:close 0, :instruction string_reverse} {:close 0, :instruction string_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_rest} {:close 0, :instruction exec_flush} {:close 2, :instruction string_pop} {:close 0, :instruction string_take} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_shove} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_lt} {:close 0, :instruction char_stackdepth} {:close 0, :instruction char_rot} {:close 0, :instruction \l} {:close 0, :instruction string_frominteger} {:close 0, :instruction exec_do*while} {:close 0, :instruction char_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction string_dup} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction "aeiouy"} {:close 0, :instruction exec_k_when_autoconstructing} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_y} {:close 0, :instruction tagged_176} {:close 2, :instruction tag_exec_221} {:close 0, :instruction exec_y} {:close 0, :instruction string_stackdepth} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction exec_eq})
Lexicase best program: (integer_inc string_pop string_indexofchar integer_mod string_empty exec_do*while (boolean_invert_first_then_and char_dup_times) string_indexofchar boolean_yank string_stackdepth boolean_and string_replace string_replacechar boolean_xor string_empty string_frominteger integer_swap exec_eq integer_flush string_concat \e string_substring boolean_flush exec_do*range (\u integer_flush exec_noop) string_fromboolean integer_stackdepth integer_shove \e char_allfromstring boolean_pop char_shove string_replacefirstchar boolean_yankdup exec_do*while (char_allfromstring string_dup_items) integer_shove boolean_not integer_empty string_parse_to_chars string_swap integer_lt boolean_frominteger boolean_not boolean_stackdepth "bmojca" in1 integer_add string_last char_shove char_rot exec_do*count () char_iswhitespace char_iswhitespace boolean_swap integer_gt boolean_frominteger "aeiouy" string_containschar string_parse_to_chars string_stackdepth char_pop exec_if (exec_swap (boolean_empty exec_rot (boolean_yankdup) (integer_fromchar) () char_flush) (string_dup_items char_iswhitespace string_emptystring) integer_fromboolean boolean_stackdepth string_replacefirstchar exec_do*while () integer_lte exec_pop (integer_yankdup) "caushp") (char_pop boolean_stackdepth boolean_invert_first_then_and) string_stackdepth exec_string_iterate (integer_div) char_shove \y string_nth \e char_shove integer_max exec_yankdup integer_mult string_concat integer_flush exec_shove () exec_swap (string_yankdup exec_do*count () exec_flush string_split char_pop string_fromchar boolean_eq) (string_length) string_fromboolean string_dup_times boolean_dup string_rest string_fromchar exec_if (in1) (string_flush boolean_flush char_yank string_rot tagged_907 exec_if (boolean_yank char_flush exec_k_when_autoconstructing () (string_concat boolean_flush string_eq exec_dup_times () char_shove boolean_and boolean_and string_replace string_stackdepth boolean_stackdepth boolean_not string_indexofchar string_flush) string_conjchar integer_stackdepth) (integer_gte \y) integer_dup_items string_split char_yankdup char_empty) boolean_frominteger boolean_or string_take string_shove string_removechar boolean_dup_times \a string_eq string_dup boolean_invert_first_then_and exec_rot (string_frominteger boolean_dup_items boolean_and exec_empty) (string_take string_eq string_yank) () exec_do*while (boolean_swap char_dup char_yankdup) boolean_rot boolean_frominteger boolean_shove string_emptystring string_fromboolean string_yank tagged_110 boolean_invert_first_then_and integer_yank string_replacefirstchar boolean_yank in1 integer_rot string_parse_to_chars string_fromboolean exec_string_iterate (string_rot exec_dup_items string_nth exec_eq integer_pop char_yank) integer_dup_times integer_swap string_butlast tagged_977 exec_k ("achuiyqknsl" integer_yankdup tagged_824 tagged_147 string_shove boolean_invert_first_then_and) ("knueyvwly" boolean_yank) string_yank integer_dup integer_fromboolean char_frominteger string_last string_removechar string_empty char_stackdepth \u exec_s_when_autoconstructing (exec_stackdepth) (boolean_dup integer_swap string_yank) (string_rot \o) exec_s (integer_gte integer_swap string_shove string_dup_items integer_empty) (boolean_stackdepth exec_while (integer_max \y integer_dec char_pop string_substring exec_do*range (boolean_or char_isdigit)) exec_pop (exec_do*range (integer_gt) exec_stackdepth) boolean_dup_items string_stackdepth) (string_flush) integer_fromstring \e string_fromchar exec_string_iterate () string_empty boolean_dup_times string_rest boolean_not string_fromboolean integer_shove boolean_dup_items boolean_not char_stackdepth string_emptystring string_fromboolean exec_do*range (exec_pop (string_setchar char_swap) boolean_pop) integer_yankdup boolean_shove boolean_yankdup string_occurrencesofchar char_allfromstring char_isdigit integer_eq string_last boolean_dup_items string_containschar string_concat exec_k_when_autoconstructing (exec_dup (integer_fromboolean string_conjchar string_yank) exec_if (string_swap) (exec_shove (boolean_dup_items boolean_dup_times boolean_xor \t exec_swap (boolean_pop string_replace boolean_yank boolean_xor exec_do*count (char_yankdup exec_dup_items \y) integer_fromboolean integer_mod integer_min char_rot boolean_dup integer_mod) () tag_string_246 integer_yank) char_iswhitespace string_occurrencesofchar boolean_yank) integer_max string_dup integer_dup_items) (boolean_and integer_fromstring char_swap integer_fromboolean boolean_dup_times exec_string_iterate (integer_dup string_empty string_swap)) string_stackdepth string_reverse string_shove integer_dup_items string_rest exec_flush string_pop string_take integer_eq boolean_shove string_replacefirstchar exec_shove (integer_dup_items integer_lt char_stackdepth char_rot \l string_frominteger exec_do*while (char_dup integer_fromboolean string_dup boolean_dup_items integer_min "aeiouy" exec_k_when_autoconstructing (integer_rot) () exec_y (tagged_176 tag_exec_221 ()) exec_y (string_stackdepth integer_stackdepth) string_occurrencesofchar exec_eq)))
Lexicase best errors: [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 99
Lexicase best total error: 1
Lexicase best mean error: 0.01
Lexicase best size: 416
Percent parens: 0.151
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction string_pop} {:close 1, :instruction string_indexofchar} {:close 1, :instruction integer_mod} {:close 1, :instruction string_empty} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 2, :instruction char_dup_times} {:close 0, :instruction string_indexofchar} {:close 0, :instruction boolean_yank} {:close 0, :instruction string_stackdepth} {:close 1, :instruction boolean_and} {:close 1, :instruction string_replace} {:close 0, :instruction string_replacechar} {:close 1, :instruction boolean_xor} {:close 0, :instruction string_empty} {:close 0, :instruction string_frominteger} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_flush} {:close 0, :instruction string_concat} {:close 0, :instruction \e} {:close 0, :instruction string_substring} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction \u} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_noop} {:close 0, :instruction string_fromboolean} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_shove} {:close 0, :instruction \e} {:close 0, :instruction char_allfromstring} {:close 1, :instruction boolean_pop} {:close 0, :instruction char_shove} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction char_allfromstring} {:close 1, :instruction string_dup_items} {:close 1, :instruction integer_shove} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_empty} {:close 0, :instruction string_parse_to_chars} {:close 1, :instruction string_swap} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction "bmojca"} {:close 0, :instruction in1} {:close 0, :instruction integer_add} {:close 0, :instruction string_last} {:close 0, :instruction char_shove} {:close 0, :instruction char_rot} {:close 2, :instruction exec_do*count} {:close 1, :instruction char_iswhitespace} {:close 0, :instruction char_iswhitespace} {:close 3, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction "aeiouy"} {:close 0, :instruction string_containschar} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_stackdepth} {:close 0, :instruction char_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 2, :instruction integer_fromchar} {:close 1, :instruction char_flush} {:close 0, :instruction string_dup_items} {:close 0, :instruction char_iswhitespace} {:close 1, :instruction string_emptystring} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction string_replacefirstchar} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_yankdup} {:close 1, :instruction "caushp"} {:close 0, :instruction char_pop} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction string_stackdepth} {:close 0, :instruction exec_string_iterate} {:close 1, :instruction integer_div} {:close 0, :instruction char_shove} {:close 0, :instruction \y} {:close 1, :instruction string_nth} {:close 0, :instruction \e} {:close 0, :instruction char_shove} {:close 0, :instruction integer_max} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_mult} {:close 0, :instruction string_concat} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_shove} {:close 0, :instruction exec_swap} {:close 0, :instruction string_yankdup} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction string_split} {:close 0, :instruction char_pop} {:close 0, :instruction string_fromchar} {:close 1, :instruction boolean_eq} {:close 1, :instruction string_length} {:close 0, :instruction string_fromboolean} {:close 0, :instruction string_dup_times} {:close 1, :instruction boolean_dup} {:close 0, :instruction string_rest} {:close 1, :instruction string_fromchar} {:close 0, :instruction exec_if} {:close 1, :instruction in1} {:close 0, :instruction string_flush} {:close 0, :instruction boolean_flush} {:close 0, :instruction char_yank} {:close 0, :instruction string_rot} {:close 0, :instruction tagged_907} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_yank} {:close 0, :instruction char_flush} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction string_concat} {:close 0, :instruction boolean_flush} {:close 0, :instruction string_eq} {:close 1, :instruction exec_dup_times} {:close 0, :instruction char_shove} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_and} {:close 0, :instruction string_replace} {:close 0, :instruction string_stackdepth} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_not} {:close 0, :instruction string_indexofchar} {:close 1, :instruction string_flush} {:close 0, :instruction string_conjchar} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_gte} {:close 1, :instruction \y} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_split} {:close 0, :instruction char_yankdup} {:close 1, :instruction char_empty} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction boolean_or} {:close 0, :instruction string_take} {:close 0, :instruction string_shove} {:close 1, :instruction string_removechar} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction \a} {:close 0, :instruction string_eq} {:close 1, :instruction string_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_rot} {:close 0, :instruction string_frominteger} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_empty} {:close 0, :instruction string_take} {:close 0, :instruction string_eq} {:close 2, :instruction string_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction char_dup} {:close 1, :instruction char_yankdup} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_shove} {:close 0, :instruction string_emptystring} {:close 1, :instruction string_fromboolean} {:close 0, :instruction string_yank} {:close 0, :instruction tagged_110} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_yank} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yank} {:close 1, :instruction in1} {:close 1, :instruction integer_rot} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction string_rot} {:close 0, :instruction exec_dup_items} {:close 0, :instruction string_nth} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_pop} {:close 1, :instruction char_yank} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_swap} {:close 1, :instruction string_butlast} {:close 1, :instruction tagged_977} {:close 0, :instruction exec_k} {:close 0, :instruction "achuiyqknsl"} {:close 0, :instruction integer_yankdup} {:close 0, :instruction tagged_824} {:close 0, :instruction tagged_147} {:close 0, :instruction string_shove} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction "knueyvwly"} {:close 1, :instruction boolean_yank} {:close 0, :instruction string_yank} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction char_frominteger} {:close 0, :instruction string_last} {:close 0, :instruction string_removechar} {:close 0, :instruction string_empty} {:close 1, :instruction char_stackdepth} {:close 0, :instruction \u} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_swap} {:close 1, :instruction string_yank} {:close 0, :instruction string_rot} {:close 1, :instruction \o} {:close 0, :instruction exec_s} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_swap} {:close 0, :instruction string_shove} {:close 0, :instruction string_dup_items} {:close 1, :instruction integer_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_while} {:close 0, :instruction integer_max} {:close 0, :instruction \y} {:close 0, :instruction integer_dec} {:close 0, :instruction char_pop} {:close 0, :instruction string_substring} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_or} {:close 2, :instruction char_isdigit} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_do*range} {:close 1, :instruction integer_gt} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction string_stackdepth} {:close 1, :instruction string_flush} {:close 0, :instruction integer_fromstring} {:close 0, :instruction \e} {:close 0, :instruction string_fromchar} {:close 1, :instruction exec_string_iterate} {:close 0, :instruction string_empty} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction string_rest} {:close 0, :instruction boolean_not} {:close 0, :instruction string_fromboolean} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_not} {:close 0, :instruction char_stackdepth} {:close 0, :instruction string_emptystring} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_pop} {:close 0, :instruction string_setchar} {:close 1, :instruction char_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction string_occurrencesofchar} {:close 0, :instruction char_allfromstring} {:close 0, :instruction char_isdigit} {:close 0, :instruction integer_eq} {:close 0, :instruction string_last} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction string_containschar} {:close 0, :instruction string_concat} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction string_conjchar} {:close 1, :instruction string_yank} {:close 0, :instruction exec_if} {:close 1, :instruction string_swap} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction \t} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction string_replace} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_do*count} {:close 0, :instruction char_yankdup} {:close 0, :instruction exec_dup_items} {:close 1, :instruction \y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_min} {:close 0, :instruction char_rot} {:close 0, :instruction boolean_dup} {:close 2, :instruction integer_mod} {:close 0, :instruction tag_string_246} {:close 1, :instruction integer_yank} {:close 0, :instruction char_iswhitespace} {:close 0, :instruction string_occurrencesofchar} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_max} {:close 0, :instruction string_dup} {:close 1, :instruction integer_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_fromstring} {:close 0, :instruction char_swap} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction integer_dup} {:close 0, :instruction string_empty} {:close 2, :instruction string_swap} {:close 1, :instruction string_stackdepth} {:close 0, :instruction string_reverse} {:close 0, :instruction string_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_rest} {:close 0, :instruction exec_flush} {:close 2, :instruction string_pop} {:close 0, :instruction string_take} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_shove} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_lt} {:close 0, :instruction char_stackdepth} {:close 0, :instruction char_rot} {:close 0, :instruction \l} {:close 0, :instruction string_frominteger} {:close 0, :instruction exec_do*while} {:close 0, :instruction char_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction string_dup} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction "aeiouy"} {:close 0, :instruction exec_k_when_autoconstructing} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_y} {:close 0, :instruction tagged_176} {:close 2, :instruction tag_exec_221} {:close 0, :instruction exec_y} {:close 0, :instruction string_stackdepth} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction exec_eq})
Zero cases best program: (integer_inc string_pop string_indexofchar integer_mod string_empty exec_do*while (boolean_invert_first_then_and char_dup_times) string_indexofchar boolean_yank string_stackdepth boolean_and string_replace string_replacechar boolean_xor string_empty string_frominteger integer_swap exec_eq integer_flush string_concat \e string_substring boolean_flush exec_do*range (\u integer_flush exec_noop) string_fromboolean integer_stackdepth integer_shove \e char_allfromstring boolean_pop char_shove string_replacefirstchar boolean_yankdup exec_do*while (char_allfromstring string_dup_items) integer_shove boolean_not integer_empty string_parse_to_chars string_swap integer_lt boolean_frominteger boolean_not boolean_stackdepth "bmojca" in1 integer_add string_last char_shove char_rot exec_do*count () char_iswhitespace char_iswhitespace boolean_swap integer_gt boolean_frominteger "aeiouy" string_containschar string_parse_to_chars string_stackdepth char_pop exec_if (exec_swap (boolean_empty exec_rot (boolean_yankdup) (integer_fromchar) () char_flush) (string_dup_items char_iswhitespace string_emptystring) integer_fromboolean boolean_stackdepth string_replacefirstchar exec_do*while () integer_lte exec_pop (integer_yankdup) "caushp") (char_pop boolean_stackdepth boolean_invert_first_then_and) string_stackdepth exec_string_iterate (integer_div) char_shove \y string_nth \e char_shove integer_max exec_yankdup integer_mult string_concat integer_flush exec_shove () exec_swap (string_yankdup exec_do*count () exec_flush string_split char_pop string_fromchar boolean_eq) (string_length) string_fromboolean string_dup_times boolean_dup string_rest string_fromchar exec_if (in1) (string_flush boolean_flush char_yank string_rot tagged_907 exec_if (boolean_yank char_flush exec_k_when_autoconstructing () (string_concat boolean_flush string_eq exec_dup_times () char_shove boolean_and boolean_and string_replace string_stackdepth boolean_stackdepth boolean_not string_indexofchar string_flush) string_conjchar integer_stackdepth) (integer_gte \y) integer_dup_items string_split char_yankdup char_empty) boolean_frominteger boolean_or string_take string_shove string_removechar boolean_dup_times \a string_eq string_dup boolean_invert_first_then_and exec_rot (string_frominteger boolean_dup_items boolean_and exec_empty) (string_take string_eq string_yank) () exec_do*while (boolean_swap char_dup char_yankdup) boolean_rot boolean_frominteger boolean_shove string_emptystring string_fromboolean string_yank tagged_110 boolean_invert_first_then_and integer_yank string_replacefirstchar boolean_yank in1 integer_rot string_parse_to_chars string_fromboolean exec_string_iterate (string_rot exec_dup_items string_nth exec_eq integer_pop char_yank) integer_dup_times integer_swap string_butlast tagged_977 exec_k ("achuiyqknsl" integer_yankdup tagged_824 tagged_147 string_shove boolean_invert_first_then_and) ("knueyvwly" boolean_yank) string_yank integer_dup integer_fromboolean char_frominteger string_last string_removechar string_empty char_stackdepth \u exec_s_when_autoconstructing (exec_stackdepth) (boolean_dup integer_swap string_yank) (string_rot \o) exec_s (integer_gte integer_swap string_shove string_dup_items integer_empty) (boolean_stackdepth exec_while (integer_max \y integer_dec char_pop string_substring exec_do*range (boolean_or char_isdigit)) exec_pop (exec_do*range (integer_gt) exec_stackdepth) boolean_dup_items string_stackdepth) (string_flush) integer_fromstring \e string_fromchar exec_string_iterate () string_empty boolean_dup_times string_rest boolean_not string_fromboolean integer_shove boolean_dup_items boolean_not char_stackdepth string_emptystring string_fromboolean exec_do*range (exec_pop (string_setchar char_swap) boolean_pop) integer_yankdup boolean_shove boolean_yankdup string_occurrencesofchar char_allfromstring char_isdigit integer_eq string_last boolean_dup_items string_containschar string_concat exec_k_when_autoconstructing (exec_dup (integer_fromboolean string_conjchar string_yank) exec_if (string_swap) (exec_shove (boolean_dup_items boolean_dup_times boolean_xor \t exec_swap (boolean_pop string_replace boolean_yank boolean_xor exec_do*count (char_yankdup exec_dup_items \y) integer_fromboolean integer_mod integer_min char_rot boolean_dup integer_mod) () tag_string_246 integer_yank) char_iswhitespace string_occurrencesofchar boolean_yank) integer_max string_dup integer_dup_items) (boolean_and integer_fromstring char_swap integer_fromboolean boolean_dup_times exec_string_iterate (integer_dup string_empty string_swap)) string_stackdepth string_reverse string_shove integer_dup_items string_rest exec_flush string_pop string_take integer_eq boolean_shove string_replacefirstchar exec_shove (integer_dup_items integer_lt char_stackdepth char_rot \l string_frominteger exec_do*while (char_dup integer_fromboolean string_dup boolean_dup_items integer_min "aeiouy" exec_k_when_autoconstructing (integer_rot) () exec_y (tagged_176 tag_exec_221 ()) exec_y (string_stackdepth integer_stackdepth) string_occurrencesofchar exec_eq)))
Zero cases best errors: [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 99
Zero cases best number of zero cases: 99
Zero cases best total error: 1
Zero cases best mean error: 0.01
Zero cases best size: 416
Percent parens: 0.151
--- Lexicase Population Statistics ---
Count of elite individuals by case: (237 229 327 227 230 228 327 231 326 326 328 230 327 229 228 227 228 326 229 228 328 230 229 328 328 331 228 328 328 228 328 231 227 327 328 232 328 326 231 325 232 328 328 327 328 232 231 229 327 230 328 230 328 329 328 229 326 230 229 327 326 327 230 327 327 230 326 327 230 325 327 326 228 327 327 327 231 326 326 230 229 228 325 230 229 324 227 327 328 326 327 229 329 229 326 331 230 329 329 330)
Population mean number of elite cases: 28.42
Count of perfect (error zero) individuals by case: (237 229 327 227 230 228 327 231 326 326 328 230 327 229 228 227 228 326 229 228 328 230 229 328 328 331 228 328 328 228 328 231 227 327 328 232 328 326 231 325 232 328 328 327 328 232 231 229 327 230 328 230 328 329 328 229 326 230 229 327 326 327 230 327 327 230 326 327 230 325 327 326 228 327 327 327 231 326 326 230 229 228 325 230 229 324 227 327 328 326 327 229 329 229 326 331 230 329 329 330)
Population mean number of perfect (error zero) cases: 28.42
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction string_pop} {:close 1, :instruction string_indexofchar} {:close 1, :instruction integer_mod} {:close 1, :instruction string_empty} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 2, :instruction char_dup_times} {:close 0, :instruction string_indexofchar} {:close 0, :instruction boolean_yank} {:close 0, :instruction string_stackdepth} {:close 1, :instruction boolean_and} {:close 1, :instruction string_replace} {:close 0, :instruction string_replacechar} {:close 1, :instruction boolean_xor} {:close 0, :instruction string_empty} {:close 0, :instruction string_frominteger} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_flush} {:close 0, :instruction string_concat} {:close 0, :instruction \e} {:close 0, :instruction string_substring} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction \u} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_noop} {:close 0, :instruction string_fromboolean} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_shove} {:close 0, :instruction \e} {:close 0, :instruction char_allfromstring} {:close 1, :instruction boolean_pop} {:close 0, :instruction char_shove} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction char_allfromstring} {:close 1, :instruction string_dup_items} {:close 1, :instruction integer_shove} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_empty} {:close 0, :instruction string_parse_to_chars} {:close 1, :instruction string_swap} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction "bmojca"} {:close 0, :instruction in1} {:close 0, :instruction integer_add} {:close 0, :instruction string_last} {:close 0, :instruction char_shove} {:close 0, :instruction char_rot} {:close 2, :instruction exec_do*count} {:close 1, :instruction char_iswhitespace} {:close 0, :instruction char_iswhitespace} {:close 3, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction "aeiouy"} {:close 0, :instruction string_containschar} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_stackdepth} {:close 0, :instruction char_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 2, :instruction integer_fromchar} {:close 1, :instruction char_flush} {:close 0, :instruction string_dup_items} {:close 0, :instruction char_iswhitespace} {:close 1, :instruction string_emptystring} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction string_replacefirstchar} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_yankdup} {:close 1, :instruction "caushp"} {:close 0, :instruction char_pop} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction string_stackdepth} {:close 0, :instruction exec_string_iterate} {:close 1, :instruction integer_div} {:close 0, :instruction char_shove} {:close 0, :instruction \y} {:close 1, :instruction string_nth} {:close 0, :instruction \e} {:close 0, :instruction char_shove} {:close 0, :instruction integer_max} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_mult} {:close 0, :instruction string_concat} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_shove} {:close 0, :instruction exec_swap} {:close 0, :instruction string_yankdup} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction string_split} {:close 0, :instruction char_pop} {:close 0, :instruction string_fromchar} {:close 1, :instruction boolean_eq} {:close 1, :instruction string_length} {:close 0, :instruction string_fromboolean} {:close 0, :instruction string_dup_times} {:close 1, :instruction boolean_dup} {:close 0, :instruction string_rest} {:close 1, :instruction string_fromchar} {:close 0, :instruction exec_if} {:close 1, :instruction in1} {:close 0, :instruction string_flush} {:close 0, :instruction boolean_flush} {:close 0, :instruction char_yank} {:close 0, :instruction string_rot} {:close 0, :instruction tagged_907} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_yank} {:close 0, :instruction char_flush} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction string_concat} {:close 0, :instruction boolean_flush} {:close 0, :instruction string_eq} {:close 1, :instruction exec_dup_times} {:close 0, :instruction char_shove} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_and} {:close 0, :instruction string_replace} {:close 0, :instruction string_stackdepth} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_not} {:close 0, :instruction string_indexofchar} {:close 1, :instruction string_flush} {:close 0, :instruction string_conjchar} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_gte} {:close 1, :instruction \y} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_split} {:close 0, :instruction char_yankdup} {:close 1, :instruction char_empty} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction boolean_or} {:close 0, :instruction string_take} {:close 0, :instruction string_shove} {:close 1, :instruction string_removechar} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction \a} {:close 0, :instruction string_eq} {:close 1, :instruction string_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_rot} {:close 0, :instruction string_frominteger} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_empty} {:close 0, :instruction string_take} {:close 0, :instruction string_eq} {:close 2, :instruction string_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction char_dup} {:close 1, :instruction char_yankdup} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_shove} {:close 0, :instruction string_emptystring} {:close 1, :instruction string_fromboolean} {:close 0, :instruction string_yank} {:close 0, :instruction tagged_110} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_yank} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yank} {:close 1, :instruction in1} {:close 1, :instruction integer_rot} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction string_rot} {:close 0, :instruction exec_dup_items} {:close 0, :instruction string_nth} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_pop} {:close 1, :instruction char_yank} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_swap} {:close 1, :instruction string_butlast} {:close 1, :instruction tagged_977} {:close 0, :instruction exec_k} {:close 0, :instruction "achuiyqknsl"} {:close 0, :instruction integer_yankdup} {:close 0, :instruction tagged_824} {:close 0, :instruction tagged_147} {:close 0, :instruction string_shove} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction "knueyvwly"} {:close 1, :instruction boolean_yank} {:close 0, :instruction string_yank} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction char_frominteger} {:close 0, :instruction string_last} {:close 0, :instruction string_removechar} {:close 0, :instruction string_empty} {:close 1, :instruction char_stackdepth} {:close 0, :instruction \u} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_swap} {:close 1, :instruction string_yank} {:close 0, :instruction string_rot} {:close 1, :instruction \o} {:close 0, :instruction exec_s} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_swap} {:close 0, :instruction string_shove} {:close 0, :instruction string_dup_items} {:close 1, :instruction integer_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_while} {:close 0, :instruction integer_max} {:close 0, :instruction \y} {:close 0, :instruction integer_dec} {:close 0, :instruction char_pop} {:close 0, :instruction string_substring} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_or} {:close 2, :instruction char_isdigit} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_do*range} {:close 1, :instruction integer_gt} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction string_stackdepth} {:close 1, :instruction string_flush} {:close 0, :instruction integer_fromstring} {:close 0, :instruction \e} {:close 0, :instruction string_fromchar} {:close 1, :instruction exec_string_iterate} {:close 0, :instruction string_empty} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction string_rest} {:close 0, :instruction boolean_not} {:close 0, :instruction string_fromboolean} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_not} {:close 0, :instruction char_stackdepth} {:close 0, :instruction string_emptystring} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_pop} {:close 0, :instruction string_setchar} {:close 1, :instruction char_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction string_occurrencesofchar} {:close 0, :instruction char_allfromstring} {:close 0, :instruction char_isdigit} {:close 0, :instruction integer_eq} {:close 0, :instruction string_last} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction string_containschar} {:close 0, :instruction string_concat} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction string_conjchar} {:close 1, :instruction string_yank} {:close 0, :instruction exec_if} {:close 1, :instruction string_swap} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction \t} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction string_replace} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_do*count} {:close 0, :instruction char_yankdup} {:close 0, :instruction exec_dup_items} {:close 1, :instruction \y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_min} {:close 0, :instruction char_rot} {:close 0, :instruction boolean_dup} {:close 2, :instruction integer_mod} {:close 0, :instruction tag_string_246} {:close 1, :instruction integer_yank} {:close 0, :instruction char_iswhitespace} {:close 0, :instruction string_occurrencesofchar} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_max} {:close 0, :instruction string_dup} {:close 1, :instruction integer_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_fromstring} {:close 0, :instruction char_swap} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction integer_dup} {:close 0, :instruction string_empty} {:close 2, :instruction string_swap} {:close 1, :instruction string_stackdepth} {:close 0, :instruction string_reverse} {:close 0, :instruction string_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_rest} {:close 0, :instruction exec_flush} {:close 2, :instruction string_pop} {:close 0, :instruction string_take} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_shove} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_lt} {:close 0, :instruction char_stackdepth} {:close 0, :instruction char_rot} {:close 0, :instruction \l} {:close 0, :instruction string_frominteger} {:close 0, :instruction exec_do*while} {:close 0, :instruction char_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction string_dup} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction "aeiouy"} {:close 0, :instruction exec_k_when_autoconstructing} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_y} {:close 0, :instruction tagged_176} {:close 2, :instruction tag_exec_221} {:close 0, :instruction exec_y} {:close 0, :instruction string_stackdepth} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction exec_eq})
Best program: (integer_inc string_pop string_indexofchar integer_mod string_empty exec_do*while (boolean_invert_first_then_and char_dup_times) string_indexofchar boolean_yank string_stackdepth boolean_and string_replace string_replacechar boolean_xor string_empty string_frominteger integer_swap exec_eq integer_flush string_concat \e string_substring boolean_flush exec_do*range (\u integer_flush exec_noop) string_fromboolean integer_stackdepth integer_shove \e char_allfromstring boolean_pop char_shove string_replacefirstchar boolean_yankdup exec_do*while (char_allfromstring string_dup_items) integer_shove boolean_not integer_empty string_parse_to_chars string_swap integer_lt boolean_frominteger boolean_not boolean_stackdepth "bmojca" in1 integer_add string_last char_shove char_rot exec_do*count () char_iswhitespace char_iswhitespace boolean_swap integer_gt boolean_frominteger "aeiouy" string_containschar string_parse_to_chars string_stackdepth char_pop exec_if (exec_swap (boolean_empty exec_rot (boolean_yankdup) (integer_fromchar) () char_flush) (string_dup_items char_iswhitespace string_emptystring) integer_fromboolean boolean_stackdepth string_replacefirstchar exec_do*while () integer_lte exec_pop (integer_yankdup) "caushp") (char_pop boolean_stackdepth boolean_invert_first_then_and) string_stackdepth exec_string_iterate (integer_div) char_shove \y string_nth \e char_shove integer_max exec_yankdup integer_mult string_concat integer_flush exec_shove () exec_swap (string_yankdup exec_do*count () exec_flush string_split char_pop string_fromchar boolean_eq) (string_length) string_fromboolean string_dup_times boolean_dup string_rest string_fromchar exec_if (in1) (string_flush boolean_flush char_yank string_rot tagged_907 exec_if (boolean_yank char_flush exec_k_when_autoconstructing () (string_concat boolean_flush string_eq exec_dup_times () char_shove boolean_and boolean_and string_replace string_stackdepth boolean_stackdepth boolean_not string_indexofchar string_flush) string_conjchar integer_stackdepth) (integer_gte \y) integer_dup_items string_split char_yankdup char_empty) boolean_frominteger boolean_or string_take string_shove string_removechar boolean_dup_times \a string_eq string_dup boolean_invert_first_then_and exec_rot (string_frominteger boolean_dup_items boolean_and exec_empty) (string_take string_eq string_yank) () exec_do*while (boolean_swap char_dup char_yankdup) boolean_rot boolean_frominteger boolean_shove string_emptystring string_fromboolean string_yank tagged_110 boolean_invert_first_then_and integer_yank string_replacefirstchar boolean_yank in1 integer_rot string_parse_to_chars string_fromboolean exec_string_iterate (string_rot exec_dup_items string_nth exec_eq integer_pop char_yank) integer_dup_times integer_swap string_butlast tagged_977 exec_k ("achuiyqknsl" integer_yankdup tagged_824 tagged_147 string_shove boolean_invert_first_then_and) ("knueyvwly" boolean_yank) string_yank integer_dup integer_fromboolean char_frominteger string_last string_removechar string_empty char_stackdepth \u exec_s_when_autoconstructing (exec_stackdepth) (boolean_dup integer_swap string_yank) (string_rot \o) exec_s (integer_gte integer_swap string_shove string_dup_items integer_empty) (boolean_stackdepth exec_while (integer_max \y integer_dec char_pop string_substring exec_do*range (boolean_or char_isdigit)) exec_pop (exec_do*range (integer_gt) exec_stackdepth) boolean_dup_items string_stackdepth) (string_flush) integer_fromstring \e string_fromchar exec_string_iterate () string_empty boolean_dup_times string_rest boolean_not string_fromboolean integer_shove boolean_dup_items boolean_not char_stackdepth string_emptystring string_fromboolean exec_do*range (exec_pop (string_setchar char_swap) boolean_pop) integer_yankdup boolean_shove boolean_yankdup string_occurrencesofchar char_allfromstring char_isdigit integer_eq string_last boolean_dup_items string_containschar string_concat exec_k_when_autoconstructing (exec_dup (integer_fromboolean string_conjchar string_yank) exec_if (string_swap) (exec_shove (boolean_dup_items boolean_dup_times boolean_xor \t exec_swap (boolean_pop string_replace boolean_yank boolean_xor exec_do*count (char_yankdup exec_dup_items \y) integer_fromboolean integer_mod integer_min char_rot boolean_dup integer_mod) () tag_string_246 integer_yank) char_iswhitespace string_occurrencesofchar boolean_yank) integer_max string_dup integer_dup_items) (boolean_and integer_fromstring char_swap integer_fromboolean boolean_dup_times exec_string_iterate (integer_dup string_empty string_swap)) string_stackdepth string_reverse string_shove integer_dup_items string_rest exec_flush string_pop string_take integer_eq boolean_shove string_replacefirstchar exec_shove (integer_dup_items integer_lt char_stackdepth char_rot \l string_frominteger exec_do*while (char_dup integer_fromboolean string_dup boolean_dup_items integer_min "aeiouy" exec_k_when_autoconstructing (integer_rot) () exec_y (tagged_176 tag_exec_221 ()) exec_y (string_stackdepth integer_stackdepth) string_occurrencesofchar exec_eq)))
Errors: [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Total: 1
Mean: 0.01
Genome size: 353
Size: 416
Percent parens: 0.151
--- Population Statistics ---
Average total errors in population: 71.575
Median total errors in population: 56
Error averages by case: (0.763 0.771 0.673 0.773 0.77 0.772 0.673 0.769 0.674 0.674 0.672 0.77 0.673 0.771 0.772 0.773 0.772 0.674 0.771 0.772 0.672 0.77 0.771 0.672 0.672 0.669 0.772 0.672 0.672 0.772 0.672 0.769 0.773 0.673 0.672 0.768 0.672 0.674 0.769 0.675 0.768 0.672 0.672 0.673 0.672 0.768 0.769 0.771 0.673 0.77 0.672 0.77 0.672 0.671 0.672 0.771 0.674 0.77 0.771 0.673 0.674 0.673 0.77 0.673 0.673 0.77 0.674 0.673 0.77 0.675 0.673 0.674 0.772 0.673 0.673 0.673 0.769 0.674 0.674 0.77 0.771 0.772 0.675 0.77 0.771 0.676 0.773 0.673 0.672 0.674 0.673 0.771 0.671 0.771 0.674 0.669 0.77 0.671 0.671 0.67)
Error minima by case: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 203.281
Average program size in population (points): 245.558
Average percent parens in population: 0.178
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.022
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 41941245
--- Timings ---
Current time: 1559223632828 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Last Letter Vowel problem report - generation 1
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction string_pop} {:close 1, :instruction string_indexofchar} {:close 1, :instruction integer_mod} {:close 1, :instruction string_empty} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 2, :instruction char_dup_times} {:close 0, :instruction string_indexofchar} {:close 0, :instruction boolean_yank} {:close 0, :instruction string_stackdepth} {:close 1, :instruction boolean_and} {:close 1, :instruction string_replace} {:close 0, :instruction string_replacechar} {:close 1, :instruction boolean_xor} {:close 0, :instruction string_empty} {:close 0, :instruction string_frominteger} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_flush} {:close 0, :instruction string_concat} {:close 0, :instruction \e} {:close 0, :instruction string_substring} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction \u} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_noop} {:close 0, :instruction string_fromboolean} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_shove} {:close 0, :instruction \e} {:close 0, :instruction char_allfromstring} {:close 1, :instruction boolean_pop} {:close 0, :instruction char_shove} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction string_fromchar} {:close 1, :instruction string_dup_items} {:close 1, :instruction integer_shove} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_empty} {:close 0, :instruction string_parse_to_chars} {:close 1, :instruction string_swap} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction "bmojca"} {:close 0, :instruction in1} {:close 0, :instruction integer_add} {:close 0, :instruction string_last} {:close 0, :instruction char_shove} {:close 0, :instruction char_rot} {:close 2, :instruction exec_do*count} {:close 1, :instruction char_iswhitespace} {:close 0, :instruction char_iswhitespace} {:close 3, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction "aeiouy"} {:close 0, :instruction string_containschar} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_stackdepth} {:close 0, :instruction char_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 2, :instruction integer_fromchar} {:close 1, :instruction char_flush} {:close 0, :instruction string_dup_items} {:close 0, :instruction char_iswhitespace} {:close 1, :instruction string_emptystring} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction string_replacefirstchar} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_yankdup} {:close 1, :instruction "caushp"} {:close 0, :instruction char_pop} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction string_stackdepth} {:close 0, :instruction exec_string_iterate} {:close 1, :instruction integer_div} {:close 0, :instruction char_shove} {:close 0, :instruction \y} {:close 1, :instruction string_nth} {:close 0, :instruction \e} {:close 0, :instruction char_shove} {:close 0, :instruction integer_max} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_mult} {:close 0, :instruction string_concat} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_shove} {:close 0, :instruction exec_swap} {:close 0, :instruction string_yankdup} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction string_split} {:close 0, :instruction char_pop} {:close 0, :instruction string_fromchar} {:close 1, :instruction boolean_eq} {:close 1, :instruction string_length} {:close 0, :instruction string_fromboolean} {:close 0, :instruction string_dup_times} {:close 1, :instruction boolean_dup} {:close 0, :instruction string_rest} {:close 1, :instruction string_fromchar} {:close 0, :instruction exec_if} {:close 1, :instruction in1} {:close 0, :instruction string_flush} {:close 0, :instruction boolean_flush} {:close 0, :instruction char_yank} {:close 0, :instruction string_rot} {:close 0, :instruction tagged_907} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_yank} {:close 0, :instruction char_flush} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction string_concat} {:close 0, :instruction boolean_flush} {:close 0, :instruction string_eq} {:close 1, :instruction exec_dup_times} {:close 0, :instruction char_shove} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_and} {:close 0, :instruction string_replace} {:close 0, :instruction string_stackdepth} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_not} {:close 0, :instruction string_indexofchar} {:close 1, :instruction string_flush} {:close 0, :instruction string_conjchar} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_gte} {:close 1, :instruction \y} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_split} {:close 0, :instruction char_yankdup} {:close 1, :instruction char_empty} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction boolean_or} {:close 0, :instruction string_take} {:close 0, :instruction string_shove} {:close 1, :instruction string_removechar} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction \a} {:close 0, :instruction string_eq} {:close 1, :instruction string_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_rot} {:close 0, :instruction string_frominteger} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_empty} {:close 0, :instruction string_take} {:close 0, :instruction string_eq} {:close 2, :instruction string_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction char_dup} {:close 1, :instruction char_yankdup} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_shove} {:close 0, :instruction string_emptystring} {:close 1, :instruction string_fromboolean} {:close 0, :instruction string_yank} {:close 0, :instruction tagged_110} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_yank} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yank} {:close 1, :instruction in1} {:close 1, :instruction integer_rot} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction string_rot} {:close 0, :instruction exec_dup_items} {:close 0, :instruction string_nth} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_pop} {:close 1, :instruction char_yank} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_swap} {:close 1, :instruction string_butlast} {:close 1, :instruction tagged_977} {:close 0, :instruction exec_k} {:close 0, :instruction "achuiyqknsl"} {:close 0, :instruction integer_yankdup} {:close 0, :instruction tagged_824} {:close 0, :instruction tagged_147} {:close 0, :instruction string_shove} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction "knueyvwly"} {:close 1, :instruction boolean_yank} {:close 0, :instruction string_yank} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction char_frominteger} {:close 0, :instruction string_last} {:close 0, :instruction string_removechar} {:close 0, :instruction string_empty} {:close 1, :instruction char_stackdepth} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_swap} {:close 1, :instruction string_yank} {:close 0, :instruction string_rot} {:close 1, :instruction \o} {:close 0, :instruction exec_s} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_swap} {:close 0, :instruction string_shove} {:close 0, :instruction string_dup_items} {:close 1, :instruction integer_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_while} {:close 0, :instruction integer_max} {:close 0, :instruction \y} {:close 0, :instruction integer_dec} {:close 0, :instruction char_pop} {:close 0, :instruction string_substring} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_or} {:close 2, :instruction char_isdigit} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_do*range} {:close 1, :instruction integer_gt} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction string_stackdepth} {:close 1, :instruction string_flush} {:close 0, :instruction integer_fromstring} {:close 0, :instruction char_yank} {:close 0, :instruction string_fromchar} {:close 1, :instruction exec_string_iterate} {:close 0, :instruction string_empty} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction string_rest} {:close 0, :instruction boolean_not} {:close 0, :instruction string_fromboolean} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_not} {:close 0, :instruction char_stackdepth} {:close 0, :instruction string_emptystring} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_pop} {:close 0, :instruction string_setchar} {:close 1, :instruction char_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction string_occurrencesofchar} {:close 0, :instruction char_allfromstring} {:close 0, :instruction char_isdigit} {:close 0, :instruction integer_eq} {:close 0, :instruction string_yank} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction string_containschar} {:close 0, :instruction string_concat} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction string_conjchar} {:close 1, :instruction string_yank} {:close 0, :instruction exec_if} {:close 1, :instruction string_swap} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction \t} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction string_replace} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_do*count} {:close 0, :instruction char_yankdup} {:close 0, :instruction exec_dup_items} {:close 1, :instruction \y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_min} {:close 0, :instruction char_rot} {:close 0, :instruction boolean_dup} {:close 2, :instruction integer_mod} {:close 0, :instruction tag_string_246} {:close 1, :instruction integer_yank} {:close 0, :instruction char_iswhitespace} {:close 0, :instruction string_occurrencesofchar} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_max} {:close 0, :instruction string_dup} {:close 1, :instruction integer_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_fromstring} {:close 0, :instruction char_swap} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction integer_dup} {:close 0, :instruction string_empty} {:close 2, :instruction string_swap} {:close 1, :instruction string_stackdepth} {:close 0, :instruction string_reverse} {:close 0, :instruction string_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_rest} {:close 0, :instruction exec_flush} {:close 2, :instruction string_pop} {:close 0, :instruction string_take} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_shove} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_lt} {:close 0, :instruction char_stackdepth} {:close 0, :instruction char_rot} {:close 0, :instruction \l} {:close 0, :instruction string_frominteger} {:close 0, :instruction exec_do*while} {:close 0, :instruction char_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction string_dup} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction "aeiouy"} {:close 0, :instruction exec_k_when_autoconstructing} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_y} {:close 0, :instruction tagged_176} {:close 2, :instruction tag_exec_221} {:close 0, :instruction exec_y} {:close 0, :instruction string_stackdepth} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction exec_eq})
Lexicase best program: (integer_inc string_pop string_indexofchar integer_mod string_empty exec_do*while (boolean_invert_first_then_and char_dup_times) string_indexofchar boolean_yank string_stackdepth boolean_and string_replace string_replacechar boolean_xor string_empty string_frominteger integer_swap exec_eq integer_flush string_concat \e string_substring boolean_flush exec_do*range (\u integer_flush exec_noop) string_fromboolean integer_stackdepth integer_shove \e char_allfromstring boolean_pop char_shove string_replacefirstchar boolean_yankdup exec_do*while (string_fromchar string_dup_items) integer_shove boolean_not integer_empty string_parse_to_chars string_swap integer_lt boolean_frominteger boolean_not boolean_stackdepth "bmojca" in1 integer_add string_last char_shove char_rot exec_do*count () char_iswhitespace char_iswhitespace boolean_swap integer_gt boolean_frominteger "aeiouy" string_containschar string_parse_to_chars string_stackdepth char_pop exec_if (exec_swap (boolean_empty exec_rot (boolean_yankdup) (integer_fromchar) () char_flush) (string_dup_items char_iswhitespace string_emptystring) integer_fromboolean boolean_stackdepth string_replacefirstchar exec_do*while () integer_lte exec_pop (integer_yankdup) "caushp") (char_pop boolean_stackdepth boolean_invert_first_then_and) string_stackdepth exec_string_iterate (integer_div) char_shove \y string_nth \e char_shove integer_max exec_yankdup integer_mult string_concat integer_flush exec_shove () exec_swap (string_yankdup exec_do*count () exec_flush string_split char_pop string_fromchar boolean_eq) (string_length) string_fromboolean string_dup_times boolean_dup string_rest string_fromchar exec_if (in1) (string_flush boolean_flush char_yank string_rot tagged_907 exec_if (boolean_yank char_flush exec_k_when_autoconstructing () (string_concat boolean_flush string_eq exec_dup_times () char_shove boolean_and boolean_and string_replace string_stackdepth boolean_stackdepth boolean_not string_indexofchar string_flush) string_conjchar integer_stackdepth) (integer_gte \y) integer_dup_items string_split char_yankdup char_empty) boolean_frominteger boolean_or string_take string_shove string_removechar boolean_dup_times \a string_eq string_dup boolean_invert_first_then_and exec_rot (string_frominteger boolean_dup_items boolean_and exec_empty) (string_take string_eq string_yank) () exec_do*while (boolean_swap char_dup char_yankdup) boolean_rot boolean_frominteger boolean_shove string_emptystring string_fromboolean string_yank tagged_110 boolean_invert_first_then_and integer_yank string_replacefirstchar boolean_yank in1 integer_rot string_parse_to_chars string_fromboolean exec_string_iterate (string_rot exec_dup_items string_nth exec_eq integer_pop char_yank) integer_dup_times integer_swap string_butlast tagged_977 exec_k ("achuiyqknsl" integer_yankdup tagged_824 tagged_147 string_shove boolean_invert_first_then_and) ("knueyvwly" boolean_yank) string_yank integer_dup integer_fromboolean char_frominteger string_last string_removechar string_empty char_stackdepth boolean_eq exec_s_when_autoconstructing (exec_stackdepth) (boolean_dup integer_swap string_yank) (string_rot \o) exec_s (integer_gte integer_swap string_shove string_dup_items integer_empty) (boolean_stackdepth exec_while (integer_max \y integer_dec char_pop string_substring exec_do*range (boolean_or char_isdigit)) exec_pop (exec_do*range (integer_gt) exec_stackdepth) boolean_dup_items string_stackdepth) (string_flush) integer_fromstring char_yank string_fromchar exec_string_iterate () string_empty boolean_dup_times string_rest boolean_not string_fromboolean integer_shove boolean_dup_items boolean_not char_stackdepth string_emptystring string_fromboolean exec_do*range (exec_pop (string_setchar char_swap) boolean_pop) integer_yankdup boolean_shove boolean_yankdup string_occurrencesofchar char_allfromstring char_isdigit integer_eq string_yank boolean_dup_items string_containschar string_concat exec_k_when_autoconstructing (exec_dup (integer_fromboolean string_conjchar string_yank) exec_if (string_swap) (exec_shove (boolean_dup_items boolean_dup_times boolean_xor \t exec_swap (boolean_pop string_replace boolean_yank boolean_xor exec_do*count (char_yankdup exec_dup_items \y) integer_fromboolean integer_mod integer_min char_rot boolean_dup integer_mod) () tag_string_246 integer_yank) char_iswhitespace string_occurrencesofchar boolean_yank) integer_max string_dup integer_dup_items) (boolean_and integer_fromstring char_swap boolean_or boolean_dup_times exec_string_iterate (integer_dup string_empty string_swap)) string_stackdepth string_reverse string_shove integer_dup_items string_rest exec_flush string_pop string_take integer_eq boolean_shove string_replacefirstchar exec_shove (integer_dup_items integer_lt char_stackdepth char_rot \l string_frominteger exec_do*while (char_dup integer_fromboolean string_dup boolean_dup_items integer_min "aeiouy" exec_k_when_autoconstructing (integer_rot) () exec_y (tagged_176 tag_exec_221 ()) exec_y (string_stackdepth integer_stackdepth) string_occurrencesofchar exec_eq)))
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 100
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 416
Percent parens: 0.151
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction string_pop} {:close 1, :instruction string_indexofchar} {:close 1, :instruction integer_mod} {:close 1, :instruction string_empty} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 2, :instruction char_dup_times} {:close 0, :instruction string_indexofchar} {:close 0, :instruction boolean_yank} {:close 0, :instruction string_stackdepth} {:close 1, :instruction boolean_and} {:close 1, :instruction string_replace} {:close 0, :instruction string_replacechar} {:close 1, :instruction boolean_xor} {:close 0, :instruction string_empty} {:close 0, :instruction string_frominteger} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_flush} {:close 0, :instruction string_concat} {:close 0, :instruction \e} {:close 0, :instruction string_substring} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction \u} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_noop} {:close 0, :instruction string_fromboolean} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_shove} {:close 0, :instruction \e} {:close 0, :instruction char_allfromstring} {:close 1, :instruction boolean_pop} {:close 0, :instruction char_shove} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction string_fromchar} {:close 1, :instruction string_dup_items} {:close 1, :instruction integer_shove} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_empty} {:close 0, :instruction string_parse_to_chars} {:close 1, :instruction string_swap} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction "bmojca"} {:close 0, :instruction in1} {:close 0, :instruction integer_add} {:close 0, :instruction string_last} {:close 0, :instruction char_shove} {:close 0, :instruction char_rot} {:close 2, :instruction exec_do*count} {:close 1, :instruction char_iswhitespace} {:close 0, :instruction char_iswhitespace} {:close 3, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction "aeiouy"} {:close 0, :instruction string_containschar} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_stackdepth} {:close 0, :instruction char_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 2, :instruction integer_fromchar} {:close 1, :instruction char_flush} {:close 0, :instruction string_dup_items} {:close 0, :instruction char_iswhitespace} {:close 1, :instruction string_emptystring} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction string_replacefirstchar} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_yankdup} {:close 1, :instruction "caushp"} {:close 0, :instruction char_pop} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction string_stackdepth} {:close 0, :instruction exec_string_iterate} {:close 1, :instruction integer_div} {:close 0, :instruction char_shove} {:close 0, :instruction \y} {:close 1, :instruction string_nth} {:close 0, :instruction \e} {:close 0, :instruction char_shove} {:close 0, :instruction integer_max} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_mult} {:close 0, :instruction string_concat} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_shove} {:close 0, :instruction exec_swap} {:close 0, :instruction string_yankdup} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction string_split} {:close 0, :instruction char_pop} {:close 0, :instruction string_fromchar} {:close 1, :instruction boolean_eq} {:close 1, :instruction string_length} {:close 0, :instruction string_fromboolean} {:close 0, :instruction string_dup_times} {:close 1, :instruction boolean_dup} {:close 0, :instruction string_rest} {:close 1, :instruction string_fromchar} {:close 0, :instruction exec_if} {:close 1, :instruction in1} {:close 0, :instruction string_flush} {:close 0, :instruction boolean_flush} {:close 0, :instruction char_yank} {:close 0, :instruction string_rot} {:close 0, :instruction tagged_907} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_yank} {:close 0, :instruction char_flush} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction string_concat} {:close 0, :instruction boolean_flush} {:close 0, :instruction string_eq} {:close 1, :instruction exec_dup_times} {:close 0, :instruction char_shove} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_and} {:close 0, :instruction string_replace} {:close 0, :instruction string_stackdepth} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_not} {:close 0, :instruction string_indexofchar} {:close 1, :instruction string_flush} {:close 0, :instruction string_conjchar} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_gte} {:close 1, :instruction \y} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_split} {:close 0, :instruction char_yankdup} {:close 1, :instruction char_empty} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction boolean_or} {:close 0, :instruction string_take} {:close 0, :instruction string_shove} {:close 1, :instruction string_removechar} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction \a} {:close 0, :instruction string_eq} {:close 1, :instruction string_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_rot} {:close 0, :instruction string_frominteger} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_empty} {:close 0, :instruction string_take} {:close 0, :instruction string_eq} {:close 2, :instruction string_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction char_dup} {:close 1, :instruction char_yankdup} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_shove} {:close 0, :instruction string_emptystring} {:close 1, :instruction string_fromboolean} {:close 0, :instruction string_yank} {:close 0, :instruction tagged_110} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_yank} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yank} {:close 1, :instruction in1} {:close 1, :instruction integer_rot} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction string_rot} {:close 0, :instruction exec_dup_items} {:close 0, :instruction string_nth} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_pop} {:close 1, :instruction char_yank} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_swap} {:close 1, :instruction string_butlast} {:close 1, :instruction tagged_977} {:close 0, :instruction exec_k} {:close 0, :instruction "achuiyqknsl"} {:close 0, :instruction integer_yankdup} {:close 0, :instruction tagged_824} {:close 0, :instruction tagged_147} {:close 0, :instruction string_shove} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction "knueyvwly"} {:close 1, :instruction boolean_yank} {:close 0, :instruction string_yank} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction char_frominteger} {:close 0, :instruction string_last} {:close 0, :instruction string_removechar} {:close 0, :instruction string_empty} {:close 1, :instruction char_stackdepth} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_swap} {:close 1, :instruction string_yank} {:close 0, :instruction string_rot} {:close 1, :instruction \o} {:close 0, :instruction exec_s} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_swap} {:close 0, :instruction string_shove} {:close 0, :instruction string_dup_items} {:close 1, :instruction integer_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_while} {:close 0, :instruction integer_max} {:close 0, :instruction \y} {:close 0, :instruction integer_dec} {:close 0, :instruction char_pop} {:close 0, :instruction string_substring} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_or} {:close 2, :instruction char_isdigit} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_do*range} {:close 1, :instruction integer_gt} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction string_stackdepth} {:close 1, :instruction string_flush} {:close 0, :instruction integer_fromstring} {:close 0, :instruction char_yank} {:close 0, :instruction string_fromchar} {:close 1, :instruction exec_string_iterate} {:close 0, :instruction string_empty} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction string_rest} {:close 0, :instruction boolean_not} {:close 0, :instruction string_fromboolean} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_not} {:close 0, :instruction char_stackdepth} {:close 0, :instruction string_emptystring} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_pop} {:close 0, :instruction string_setchar} {:close 1, :instruction char_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction string_occurrencesofchar} {:close 0, :instruction char_allfromstring} {:close 0, :instruction char_isdigit} {:close 0, :instruction integer_eq} {:close 0, :instruction string_yank} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction string_containschar} {:close 0, :instruction string_concat} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction string_conjchar} {:close 1, :instruction string_yank} {:close 0, :instruction exec_if} {:close 1, :instruction string_swap} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction \t} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction string_replace} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_do*count} {:close 0, :instruction char_yankdup} {:close 0, :instruction exec_dup_items} {:close 1, :instruction \y} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_min} {:close 0, :instruction char_rot} {:close 0, :instruction boolean_dup} {:close 2, :instruction integer_mod} {:close 0, :instruction tag_string_246} {:close 1, :instruction integer_yank} {:close 0, :instruction char_iswhitespace} {:close 0, :instruction string_occurrencesofchar} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_max} {:close 0, :instruction string_dup} {:close 1, :instruction integer_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_fromstring} {:close 0, :instruction char_swap} {:close 0, :instruction boolean_or} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction integer_dup} {:close 0, :instruction string_empty} {:close 2, :instruction string_swap} {:close 1, :instruction string_stackdepth} {:close 0, :instruction string_reverse} {:close 0, :instruction string_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_rest} {:close 0, :instruction exec_flush} {:close 2, :instruction string_pop} {:close 0, :instruction string_take} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_shove} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_lt} {:close 0, :instruction char_stackdepth} {:close 0, :instruction char_rot} {:close 0, :instruction \l} {:close 0, :instruction string_frominteger} {:close 0, :instruction exec_do*while} {:close 0, :instruction char_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction string_dup} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction "aeiouy"} {:close 0, :instruction exec_k_when_autoconstructing} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_y} {:close 0, :instruction tagged_176} {:close 2, :instruction tag_exec_221} {:close 0, :instruction exec_y} {:close 0, :instruction string_stackdepth} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction exec_eq})
Zero cases best program: (integer_inc string_pop string_indexofchar integer_mod string_empty exec_do*while (boolean_invert_first_then_and char_dup_times) string_indexofchar boolean_yank string_stackdepth boolean_and string_replace string_replacechar boolean_xor string_empty string_frominteger integer_swap exec_eq integer_flush string_concat \e string_substring boolean_flush exec_do*range (\u integer_flush exec_noop) string_fromboolean integer_stackdepth integer_shove \e char_allfromstring boolean_pop char_shove string_replacefirstchar boolean_yankdup exec_do*while (string_fromchar string_dup_items) integer_shove boolean_not integer_empty string_parse_to_chars string_swap integer_lt boolean_frominteger boolean_not boolean_stackdepth "bmojca" in1 integer_add string_last char_shove char_rot exec_do*count () char_iswhitespace char_iswhitespace boolean_swap integer_gt boolean_frominteger "aeiouy" string_containschar string_parse_to_chars string_stackdepth char_pop exec_if (exec_swap (boolean_empty exec_rot (boolean_yankdup) (integer_fromchar) () char_flush) (string_dup_items char_iswhitespace string_emptystring) integer_fromboolean boolean_stackdepth string_replacefirstchar exec_do*while () integer_lte exec_pop (integer_yankdup) "caushp") (char_pop boolean_stackdepth boolean_invert_first_then_and) string_stackdepth exec_string_iterate (integer_div) char_shove \y string_nth \e char_shove integer_max exec_yankdup integer_mult string_concat integer_flush exec_shove () exec_swap (string_yankdup exec_do*count () exec_flush string_split char_pop string_fromchar boolean_eq) (string_length) string_fromboolean string_dup_times boolean_dup string_rest string_fromchar exec_if (in1) (string_flush boolean_flush char_yank string_rot tagged_907 exec_if (boolean_yank char_flush exec_k_when_autoconstructing () (string_concat boolean_flush string_eq exec_dup_times () char_shove boolean_and boolean_and string_replace string_stackdepth boolean_stackdepth boolean_not string_indexofchar string_flush) string_conjchar integer_stackdepth) (integer_gte \y) integer_dup_items string_split char_yankdup char_empty) boolean_frominteger boolean_or string_take string_shove string_removechar boolean_dup_times \a string_eq string_dup boolean_invert_first_then_and exec_rot (string_frominteger boolean_dup_items boolean_and exec_empty) (string_take string_eq string_yank) () exec_do*while (boolean_swap char_dup char_yankdup) boolean_rot boolean_frominteger boolean_shove string_emptystring string_fromboolean string_yank tagged_110 boolean_invert_first_then_and integer_yank string_replacefirstchar boolean_yank in1 integer_rot string_parse_to_chars string_fromboolean exec_string_iterate (string_rot exec_dup_items string_nth exec_eq integer_pop char_yank) integer_dup_times integer_swap string_butlast tagged_977 exec_k ("achuiyqknsl" integer_yankdup tagged_824 tagged_147 string_shove boolean_invert_first_then_and) ("knueyvwly" boolean_yank) string_yank integer_dup integer_fromboolean char_frominteger string_last string_removechar string_empty char_stackdepth boolean_eq exec_s_when_autoconstructing (exec_stackdepth) (boolean_dup integer_swap string_yank) (string_rot \o) exec_s (integer_gte integer_swap string_shove string_dup_items integer_empty) (boolean_stackdepth exec_while (integer_max \y integer_dec char_pop string_substring exec_do*range (boolean_or char_isdigit)) exec_pop (exec_do*range (integer_gt) exec_stackdepth) boolean_dup_items string_stackdepth) (string_flush) integer_fromstring char_yank string_fromchar exec_string_iterate () string_empty boolean_dup_times string_rest boolean_not string_fromboolean integer_shove boolean_dup_items boolean_not char_stackdepth string_emptystring string_fromboolean exec_do*range (exec_pop (string_setchar char_swap) boolean_pop) integer_yankdup boolean_shove boolean_yankdup string_occurrencesofchar char_allfromstring char_isdigit integer_eq string_yank boolean_dup_items string_containschar string_concat exec_k_when_autoconstructing (exec_dup (integer_fromboolean string_conjchar string_yank) exec_if (string_swap) (exec_shove (boolean_dup_items boolean_dup_times boolean_xor \t exec_swap (boolean_pop string_replace boolean_yank boolean_xor exec_do*count (char_yankdup exec_dup_items \y) integer_fromboolean integer_mod integer_min char_rot boolean_dup integer_mod) () tag_string_246 integer_yank) char_iswhitespace string_occurrencesofchar boolean_yank) integer_max string_dup integer_dup_items) (boolean_and integer_fromstring char_swap boolean_or boolean_dup_times exec_string_iterate (integer_dup string_empty string_swap)) string_stackdepth string_reverse string_shove integer_dup_items string_rest exec_flush string_pop string_take integer_eq boolean_shove string_replacefirstchar exec_shove (integer_dup_items integer_lt char_stackdepth char_rot \l string_frominteger exec_do*while (char_dup integer_fromboolean string_dup boolean_dup_items integer_min "aeiouy" exec_k_when_autoconstructing (integer_rot) () exec_y (tagged_176 tag_exec_221 ()) exec_y (string_stackdepth integer_stackdepth) string_occurrencesofchar exec_eq)))
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 100
Zero cases best number of zero cases: 100
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 416
Percent parens: 0.151
--- Lexicase Population Statistics ---
Count of elite individuals by case: (231 664 822 664 661 659 829 666 818 825 825 671 825 668 662 662 664 831 660 663 824 668 666 825 821 826 663 831 825 663 820 666 660 821 825 662 827 824 660 825 661 828 824 822 831 666 664 660 830 656 825 667 822 830 824 657 824 662 664 827 817 826 660 825 828 669 822 823 663 822 822 820 662 820 820 821 665 830 822 662 661 660 817 670 665 819 660 822 825 826 823 665 827 665 821 833 655 826 829 832)
Population mean number of elite cases: 74.92
Count of perfect (error zero) individuals by case: (231 664 822 664 661 659 829 666 818 825 825 671 825 668 662 662 664 831 660 663 824 668 666 825 821 826 663 831 825 663 820 666 660 821 825 662 827 824 660 825 661 828 824 822 831 666 664 660 830 656 825 667 822 830 824 657 824 662 664 827 817 826 660 825 828 669 822 823 663 822 822 820 662 820 820 821 665 830 822 662 661 660 817 670 665 819 660 822 825 826 823 665 827 665 821 833 655 826 829 832)
Population mean number of perfect (error zero) cases: 74.92
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_inc} {:close 1, :instruction string_pop} {:close 1, :instruction string_indexofchar} {:close 1, :instruction integer_mod} {:close 1, :instruction string_empty} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_invert_first_then_and} {:close 2, :instruction char_dup_times} {:close 0, :instruction boolean_yank} {:close 0, :instruction string_stackdepth} {:close 1, :instruction boolean_and} {:close 1, :instruction string_replace} {:close 0, :instruction string_replacechar} {:close 1, :instruction boolean_xor} {:close 0, :instruction string_empty} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_flush} {:close 0, :instruction string_concat} {:close 0, :instruction \e} {:close 0, :instruction string_substring} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_do*range} {:close 0, :instruction \u} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_noop} {:close 0, :instruction string_fromboolean} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_shove} {:close 0, :instruction \e} {:close 0, :instruction char_allfromstring} {:close 1, :instruction boolean_pop} {:close 0, :instruction char_shove} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction char_allfromstring} {:close 1, :instruction string_dup_items} {:close 1, :instruction integer_shove} {:close 0, :instruction boolean_not} {:close 0, :instruction integer_empty} {:close 0, :instruction string_parse_to_chars} {:close 1, :instruction string_swap} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction "bmojca"} {:close 0, :instruction in1} {:close 0, :instruction integer_add} {:close 0, :instruction string_last} {:close 0, :instruction char_shove} {:close 0, :instruction char_rot} {:close 2, :instruction exec_do*count} {:close 1, :instruction char_iswhitespace} {:close 0, :instruction char_iswhitespace} {:close 3, :instruction boolean_swap} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction "aeiouy"} {:close 0, :instruction string_containschar} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_stackdepth} {:close 0, :instruction char_pop} {:close 0, :instruction exec_if} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_empty} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_yankdup} {:close 2, :instruction integer_fromchar} {:close 1, :instruction char_flush} {:close 0, :instruction string_dup_items} {:close 0, :instruction char_iswhitespace} {:close 1, :instruction string_emptystring} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction string_replacefirstchar} {:close 1, :instruction exec_do*while} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_yankdup} {:close 1, :instruction "caushp"} {:close 0, :instruction char_pop} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction string_stackdepth} {:close 0, :instruction exec_string_iterate} {:close 1, :instruction integer_div} {:close 0, :instruction char_shove} {:close 0, :instruction \y} {:close 1, :instruction string_nth} {:close 0, :instruction \e} {:close 0, :instruction char_shove} {:close 0, :instruction integer_max} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_mult} {:close 0, :instruction string_concat} {:close 0, :instruction integer_flush} {:close 1, :instruction exec_shove} {:close 0, :instruction exec_swap} {:close 0, :instruction string_yankdup} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction string_split} {:close 0, :instruction char_pop} {:close 0, :instruction string_fromchar} {:close 1, :instruction boolean_eq} {:close 1, :instruction string_length} {:close 0, :instruction string_fromboolean} {:close 0, :instruction string_dup_times} {:close 1, :instruction boolean_dup} {:close 0, :instruction string_rest} {:close 1, :instruction string_fromchar} {:close 0, :instruction exec_if} {:close 1, :instruction in1} {:close 0, :instruction string_flush} {:close 0, :instruction boolean_flush} {:close 0, :instruction char_yank} {:close 0, :instruction string_rot} {:close 0, :instruction tagged_907} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_yank} {:close 0, :instruction char_flush} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction string_concat} {:close 0, :instruction boolean_flush} {:close 0, :instruction string_eq} {:close 1, :instruction exec_dup_times} {:close 0, :instruction char_shove} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_and} {:close 0, :instruction string_replace} {:close 0, :instruction string_stackdepth} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_not} {:close 0, :instruction string_indexofchar} {:close 1, :instruction string_flush} {:close 0, :instruction string_conjchar} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction integer_gte} {:close 1, :instruction \y} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_split} {:close 0, :instruction char_yankdup} {:close 1, :instruction char_empty} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction boolean_or} {:close 0, :instruction string_take} {:close 0, :instruction string_shove} {:close 1, :instruction string_removechar} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction \a} {:close 0, :instruction string_eq} {:close 1, :instruction string_dup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction exec_rot} {:close 0, :instruction string_frominteger} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_empty} {:close 0, :instruction string_take} {:close 0, :instruction string_eq} {:close 2, :instruction string_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction char_dup} {:close 1, :instruction char_yankdup} {:close 1, :instruction boolean_rot} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_shove} {:close 0, :instruction string_emptystring} {:close 1, :instruction string_fromboolean} {:close 0, :instruction string_yank} {:close 0, :instruction tagged_110} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction integer_gte} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yank} {:close 1, :instruction in1} {:close 1, :instruction integer_rot} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction string_rot} {:close 0, :instruction exec_dup_items} {:close 0, :instruction string_nth} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_pop} {:close 1, :instruction char_yank} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_swap} {:close 1, :instruction string_butlast} {:close 1, :instruction tagged_977} {:close 0, :instruction exec_k} {:close 0, :instruction "achuiyqknsl"} {:close 0, :instruction integer_yankdup} {:close 0, :instruction tagged_824} {:close 0, :instruction tagged_147} {:close 0, :instruction string_shove} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction "knueyvwly"} {:close 1, :instruction boolean_yank} {:close 0, :instruction string_yank} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction char_frominteger} {:close 0, :instruction string_last} {:close 0, :instruction string_removechar} {:close 0, :instruction string_empty} {:close 1, :instruction char_stackdepth} {:close 0, :instruction \u} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_stackdepth} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_swap} {:close 1, :instruction string_yank} {:close 0, :instruction string_rot} {:close 1, :instruction \o} {:close 0, :instruction exec_s} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_swap} {:close 0, :instruction string_shove} {:close 0, :instruction string_dup_items} {:close 1, :instruction integer_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_while} {:close 0, :instruction integer_max} {:close 0, :instruction \y} {:close 0, :instruction integer_dec} {:close 0, :instruction char_pop} {:close 0, :instruction string_substring} {:close 0, :instruction exec_do*range} {:close 0, :instruction boolean_or} {:close 0, :instruction string_fromchar} {:close 1, :instruction exec_string_iterate} {:close 0, :instruction string_empty} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction string_rest} {:close 0, :instruction boolean_not} {:close 0, :instruction string_fromboolean} {:close 0, :instruction integer_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_not} {:close 0, :instruction char_stackdepth} {:close 0, :instruction string_emptystring} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_pop} {:close 0, :instruction string_setchar} {:close 1, :instruction char_swap} {:close 1, :instruction boolean_pop} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction string_occurrencesofchar} {:close 0, :instruction char_allfromstring} {:close 0, :instruction char_isdigit} {:close 0, :instruction integer_eq} {:close 0, :instruction string_last} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction string_containschar} {:close 0, :instruction string_concat} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction string_occurrencesofchar} {:close 0, :instruction char_allfromstring} {:close 0, :instruction char_isdigit} {:close 0, :instruction integer_eq} {:close 0, :instruction string_last} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction string_containschar} {:close 0, :instruction string_concat} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction string_conjchar} {:close 1, :instruction string_yank} {:close 0, :instruction exec_if} {:close 1, :instruction string_swap} {:close 0, :instruction exec_shove} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction \t} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_pop} {:close 0, :instruction string_replace} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_do*count} {:close 0, :instruction char_yankdup} {:close 0, :instruction exec_dup_items} {:close 1, :instruction exec_shove} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_mod} {:close 0, :instruction integer_min} {:close 0, :instruction char_rot} {:close 0, :instruction boolean_dup} {:close 2, :instruction integer_mod} {:close 0, :instruction tag_string_246} {:close 1, :instruction integer_yank} {:close 0, :instruction char_iswhitespace} {:close 0, :instruction string_occurrencesofchar} {:close 1, :instruction boolean_yank} {:close 0, :instruction integer_max} {:close 0, :instruction string_dup} {:close 1, :instruction integer_dup_items} {:close 0, :instruction boolean_and} {:close 0, :instruction integer_fromstring} {:close 0, :instruction char_swap} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_yank} {:close 2, :instruction string_swap} {:close 1, :instruction string_stackdepth} {:close 0, :instruction string_reverse} {:close 0, :instruction string_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_rest} {:close 0, :instruction exec_flush} {:close 2, :instruction string_pop} {:close 0, :instruction string_take} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_shove} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_lt} {:close 0, :instruction char_stackdepth} {:close 0, :instruction char_rot} {:close 0, :instruction \l} {:close 0, :instruction string_frominteger} {:close 0, :instruction exec_do*while} {:close 0, :instruction char_dup} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction string_dup} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_min} {:close 0, :instruction "aeiouy"} {:close 0, :instruction exec_k_when_autoconstructing} {:close 2, :instruction integer_rot} {:close 0, :instruction exec_y} {:close 0, :instruction tagged_176} {:close 2, :instruction tag_exec_221} {:close 0, :instruction exec_y} {:close 0, :instruction string_stackdepth} {:close 1, :instruction integer_stackdepth} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction exec_eq})
Best program: (integer_inc string_pop string_indexofchar integer_mod string_empty exec_do*while (boolean_invert_first_then_and char_dup_times) boolean_yank string_stackdepth boolean_and string_replace string_replacechar boolean_xor string_empty boolean_shove integer_swap exec_eq integer_flush string_concat \e string_substring boolean_flush exec_do*range (\u integer_flush exec_noop) string_fromboolean integer_stackdepth integer_shove \e char_allfromstring boolean_pop char_shove string_replacefirstchar boolean_yankdup exec_do*while (char_allfromstring string_dup_items) integer_shove boolean_not integer_empty string_parse_to_chars string_swap integer_lt boolean_frominteger boolean_not boolean_stackdepth "bmojca" in1 integer_add string_last char_shove char_rot exec_do*count () char_iswhitespace char_iswhitespace boolean_swap integer_gt boolean_frominteger "aeiouy" string_containschar string_parse_to_chars string_stackdepth char_pop exec_if (exec_swap (boolean_empty exec_rot (boolean_yankdup) (integer_fromchar) () char_flush) (string_dup_items char_iswhitespace string_emptystring) integer_fromboolean boolean_stackdepth string_replacefirstchar exec_do*while () integer_lte exec_pop (integer_yankdup) "caushp") (char_pop boolean_stackdepth boolean_invert_first_then_and) string_stackdepth exec_string_iterate (integer_div) char_shove \y string_nth \e char_shove integer_max exec_yankdup integer_mult string_concat integer_flush exec_shove () exec_swap (string_yankdup exec_do*count () exec_flush string_split char_pop string_fromchar boolean_eq) (string_length) string_fromboolean string_dup_times boolean_dup string_rest string_fromchar exec_if (in1) (string_flush boolean_flush char_yank string_rot tagged_907 exec_if (boolean_yank char_flush exec_k_when_autoconstructing () (string_concat boolean_flush string_eq exec_dup_times () char_shove boolean_and boolean_and string_replace string_stackdepth boolean_stackdepth boolean_not string_indexofchar string_flush) string_conjchar integer_stackdepth) (integer_gte \y) integer_dup_items string_split char_yankdup char_empty) boolean_frominteger boolean_or string_take string_shove string_removechar boolean_dup_times \a string_eq string_dup boolean_invert_first_then_and exec_rot (string_frominteger boolean_dup_items boolean_and exec_empty) (string_take string_eq string_yank) () exec_do*while (boolean_swap char_dup char_yankdup) boolean_rot boolean_frominteger boolean_shove string_emptystring string_fromboolean string_yank tagged_110 boolean_invert_first_then_and integer_gte string_replacefirstchar boolean_yank in1 integer_rot string_parse_to_chars string_fromboolean exec_string_iterate (string_rot exec_dup_items string_nth exec_eq integer_pop char_yank) integer_dup_times integer_swap string_butlast tagged_977 exec_k ("achuiyqknsl" integer_yankdup tagged_824 tagged_147 string_shove boolean_invert_first_then_and) ("knueyvwly" boolean_yank) string_yank integer_dup integer_fromboolean char_frominteger string_last string_removechar string_empty char_stackdepth \u exec_s_when_autoconstructing (exec_stackdepth) (boolean_dup integer_swap string_yank) (string_rot \o) exec_s (integer_gte integer_swap string_shove string_dup_items integer_empty) (boolean_stackdepth exec_while (integer_max \y integer_dec char_pop string_substring exec_do*range (boolean_or string_fromchar exec_string_iterate () string_empty boolean_dup_times string_rest boolean_not string_fromboolean integer_shove boolean_dup_items boolean_not char_stackdepth string_emptystring string_fromboolean exec_do*range (exec_pop (string_setchar char_swap) boolean_pop) integer_yankdup boolean_shove boolean_yankdup string_occurrencesofchar) char_allfromstring char_isdigit integer_eq string_last boolean_dup_items string_containschar string_concat boolean_shove boolean_yankdup string_occurrencesofchar) char_allfromstring char_isdigit integer_eq string_last boolean_dup_items string_containschar string_concat exec_k_when_autoconstructing (exec_dup (integer_fromboolean string_conjchar string_yank) exec_if (string_swap) (exec_shove (boolean_dup_items boolean_dup_times boolean_xor \t exec_swap (boolean_pop string_replace boolean_yank boolean_xor exec_do*count (char_yankdup exec_dup_items exec_shove () integer_fromboolean integer_mod integer_min char_rot boolean_dup integer_mod)) (tag_string_246 integer_yank) char_iswhitespace string_occurrencesofchar boolean_yank) integer_max string_dup integer_dup_items) boolean_and integer_fromstring char_swap integer_fromboolean boolean_dup_times exec_string_iterate (integer_dup boolean_yank string_swap)) (string_stackdepth) string_reverse string_shove integer_dup_items string_rest exec_flush string_pop) () string_take integer_eq boolean_shove string_replacefirstchar exec_shove (integer_dup_items integer_lt char_stackdepth char_rot \l string_frominteger exec_do*while (char_dup integer_fromboolean string_dup boolean_dup_items integer_min "aeiouy" exec_k_when_autoconstructing (integer_rot) () exec_y (tagged_176 tag_exec_221 ()) exec_y (string_stackdepth integer_stackdepth) string_occurrencesofchar exec_eq)))
Errors: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 352
Size: 414
Percent parens: 0.150
--- Population Statistics ---
Average total errors in population: 25.084
Median total errors in population: 1
Error averages by case: (0.769 0.336 0.178 0.336 0.339 0.341 0.171 0.334 0.182 0.175 0.175 0.329 0.175 0.332 0.338 0.338 0.336 0.169 0.34 0.337 0.176 0.332 0.334 0.175 0.179 0.174 0.337 0.169 0.175 0.337 0.18 0.334 0.34 0.179 0.175 0.338 0.173 0.176 0.34 0.175 0.339 0.172 0.176 0.178 0.169 0.334 0.336 0.34 0.17 0.344 0.175 0.333 0.178 0.17 0.176 0.343 0.176 0.338 0.336 0.173 0.183 0.174 0.34 0.175 0.172 0.331 0.178 0.177 0.337 0.178 0.178 0.18 0.338 0.18 0.18 0.179 0.335 0.17 0.178 0.338 0.339 0.34 0.183 0.33 0.335 0.181 0.34 0.178 0.175 0.174 0.177 0.335 0.173 0.335 0.179 0.167 0.345 0.174 0.171 0.168)
Error minima by case: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 348.763
Average program size in population (points): 411.482
Average percent parens in population: 0.152
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.486
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 10
Genome diversity (% unique genomes):	 0.991
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.991
Total error diversity:				 0.025
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.042
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 58642332
--- Timings ---
Current time: 1559223649373 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 1
Successful program: (integer_inc string_pop string_indexofchar integer_mod string_empty exec_do*while (boolean_invert_first_then_and char_dup_times) boolean_yank string_stackdepth boolean_and string_replace string_replacechar boolean_xor string_empty boolean_shove integer_swap exec_eq integer_flush string_concat \e string_substring boolean_flush exec_do*range (\u integer_flush exec_noop) string_fromboolean integer_stackdepth integer_shove \e char_allfromstring boolean_pop char_shove string_replacefirstchar boolean_yankdup exec_do*while (char_allfromstring string_dup_items) integer_shove boolean_not integer_empty string_parse_to_chars string_swap integer_lt boolean_frominteger boolean_not boolean_stackdepth "bmojca" in1 integer_add string_last char_shove char_rot exec_do*count () char_iswhitespace char_iswhitespace boolean_swap integer_gt boolean_frominteger "aeiouy" string_containschar string_parse_to_chars string_stackdepth char_pop exec_if (exec_swap (boolean_empty exec_rot (boolean_yankdup) (integer_fromchar) () char_flush) (string_dup_items char_iswhitespace string_emptystring) integer_fromboolean boolean_stackdepth string_replacefirstchar exec_do*while () integer_lte exec_pop (integer_yankdup) "caushp") (char_pop boolean_stackdepth boolean_invert_first_then_and) string_stackdepth exec_string_iterate (integer_div) char_shove \y string_nth \e char_shove integer_max exec_yankdup integer_mult string_concat integer_flush exec_shove () exec_swap (string_yankdup exec_do*count () exec_flush string_split char_pop string_fromchar boolean_eq) (string_length) string_fromboolean string_dup_times boolean_dup string_rest string_fromchar exec_if (in1) (string_flush boolean_flush char_yank string_rot tagged_907 exec_if (boolean_yank char_flush exec_k_when_autoconstructing () (string_concat boolean_flush string_eq exec_dup_times () char_shove boolean_and boolean_and string_replace string_stackdepth boolean_stackdepth boolean_not string_indexofchar string_flush) string_conjchar integer_stackdepth) (integer_gte \y) integer_dup_items string_split char_yankdup char_empty) boolean_frominteger boolean_or string_take string_shove string_removechar boolean_dup_times \a string_eq string_dup boolean_invert_first_then_and exec_rot (string_frominteger boolean_dup_items boolean_and exec_empty) (string_take string_eq string_yank) () exec_do*while (boolean_swap char_dup char_yankdup) boolean_rot boolean_frominteger boolean_shove string_emptystring string_fromboolean string_yank tagged_110 boolean_invert_first_then_and integer_gte string_replacefirstchar boolean_yank in1 integer_rot string_parse_to_chars string_fromboolean exec_string_iterate (string_rot exec_dup_items string_nth exec_eq integer_pop char_yank) integer_dup_times integer_swap string_butlast tagged_977 exec_k ("achuiyqknsl" integer_yankdup tagged_824 tagged_147 string_shove boolean_invert_first_then_and) ("knueyvwly" boolean_yank) string_yank integer_dup integer_fromboolean char_frominteger string_last string_removechar string_empty char_stackdepth \u exec_s_when_autoconstructing (exec_stackdepth) (boolean_dup integer_swap string_yank) (string_rot \o) exec_s (integer_gte integer_swap string_shove string_dup_items integer_empty) (boolean_stackdepth exec_while (integer_max \y integer_dec char_pop string_substring exec_do*range (boolean_or string_fromchar exec_string_iterate () string_empty boolean_dup_times string_rest boolean_not string_fromboolean integer_shove boolean_dup_items boolean_not char_stackdepth string_emptystring string_fromboolean exec_do*range (exec_pop (string_setchar char_swap) boolean_pop) integer_yankdup boolean_shove boolean_yankdup string_occurrencesofchar) char_allfromstring char_isdigit integer_eq string_last boolean_dup_items string_containschar string_concat boolean_shove boolean_yankdup string_occurrencesofchar) char_allfromstring char_isdigit integer_eq string_last boolean_dup_items string_containschar string_concat exec_k_when_autoconstructing (exec_dup (integer_fromboolean string_conjchar string_yank) exec_if (string_swap) (exec_shove (boolean_dup_items boolean_dup_times boolean_xor \t exec_swap (boolean_pop string_replace boolean_yank boolean_xor exec_do*count (char_yankdup exec_dup_items exec_shove () integer_fromboolean integer_mod integer_min char_rot boolean_dup integer_mod)) (tag_string_246 integer_yank) char_iswhitespace string_occurrencesofchar boolean_yank) integer_max string_dup integer_dup_items) boolean_and integer_fromstring char_swap integer_fromboolean boolean_dup_times exec_string_iterate (integer_dup boolean_yank string_swap)) (string_stackdepth) string_reverse string_shove integer_dup_items string_rest exec_flush string_pop) () string_take integer_eq boolean_shove string_replacefirstchar exec_shove (integer_dup_items integer_lt char_stackdepth char_rot \l string_frominteger exec_do*while (char_dup integer_fromboolean string_dup boolean_dup_items integer_min "aeiouy" exec_k_when_autoconstructing (integer_rot) () exec_y (tagged_176 tag_exec_221 ()) exec_y (string_stackdepth integer_stackdepth) string_occurrencesofchar exec_eq)))
Errors: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 414


Auto-simplifying with starting size: 414
step: 0
program: (integer_inc string_pop string_indexofchar integer_mod string_empty exec_do*while (boolean_invert_first_then_and char_dup_times) boolean_yank string_stackdepth boolean_and string_replace string_replacechar boolean_xor string_empty boolean_shove integer_swap exec_eq integer_flush string_concat \e string_substring boolean_flush exec_do*range (\u integer_flush exec_noop) string_fromboolean integer_stackdepth integer_shove \e char_allfromstring boolean_pop char_shove string_replacefirstchar boolean_yankdup exec_do*while (char_allfromstring string_dup_items) integer_shove boolean_not integer_empty string_parse_to_chars string_swap integer_lt boolean_frominteger boolean_not boolean_stackdepth "bmojca" in1 integer_add string_last char_shove char_rot exec_do*count () char_iswhitespace char_iswhitespace boolean_swap integer_gt boolean_frominteger "aeiouy" string_containschar string_parse_to_chars string_stackdepth char_pop exec_if (exec_swap (boolean_empty exec_rot (boolean_yankdup) (integer_fromchar) () char_flush) (string_dup_items char_iswhitespace string_emptystring) integer_fromboolean boolean_stackdepth string_replacefirstchar exec_do*while () integer_lte exec_pop (integer_yankdup) "caushp") (char_pop boolean_stackdepth boolean_invert_first_then_and) string_stackdepth exec_string_iterate (integer_div) char_shove \y string_nth \e char_shove integer_max exec_yankdup integer_mult string_concat integer_flush exec_shove () exec_swap (string_yankdup exec_do*count () exec_flush string_split char_pop string_fromchar boolean_eq) (string_length) string_fromboolean string_dup_times boolean_dup string_rest string_fromchar exec_if (in1) (string_flush boolean_flush char_yank string_rot tagged_907 exec_if (boolean_yank char_flush exec_k_when_autoconstructing () (string_concat boolean_flush string_eq exec_dup_times () char_shove boolean_and boolean_and string_replace string_stackdepth boolean_stackdepth boolean_not string_indexofchar string_flush) string_conjchar integer_stackdepth) (integer_gte \y) integer_dup_items string_split char_yankdup char_empty) boolean_frominteger boolean_or string_take string_shove string_removechar boolean_dup_times \a string_eq string_dup boolean_invert_first_then_and exec_rot (string_frominteger boolean_dup_items boolean_and exec_empty) (string_take string_eq string_yank) () exec_do*while (boolean_swap char_dup char_yankdup) boolean_rot boolean_frominteger boolean_shove string_emptystring string_fromboolean string_yank tagged_110 boolean_invert_first_then_and integer_gte string_replacefirstchar boolean_yank in1 integer_rot string_parse_to_chars string_fromboolean exec_string_iterate (string_rot exec_dup_items string_nth exec_eq integer_pop char_yank) integer_dup_times integer_swap string_butlast tagged_977 exec_k ("achuiyqknsl" integer_yankdup tagged_824 tagged_147 string_shove boolean_invert_first_then_and) ("knueyvwly" boolean_yank) string_yank integer_dup integer_fromboolean char_frominteger string_last string_removechar string_empty char_stackdepth \u exec_s_when_autoconstructing (exec_stackdepth) (boolean_dup integer_swap string_yank) (string_rot \o) exec_s (integer_gte integer_swap string_shove string_dup_items integer_empty) (boolean_stackdepth exec_while (integer_max \y integer_dec char_pop string_substring exec_do*range (boolean_or string_fromchar exec_string_iterate () string_empty boolean_dup_times string_rest boolean_not string_fromboolean integer_shove boolean_dup_items boolean_not char_stackdepth string_emptystring string_fromboolean exec_do*range (exec_pop (string_setchar char_swap) boolean_pop) integer_yankdup boolean_shove boolean_yankdup string_occurrencesofchar) char_allfromstring char_isdigit integer_eq string_last boolean_dup_items string_containschar string_concat boolean_shove boolean_yankdup string_occurrencesofchar) char_allfromstring char_isdigit integer_eq string_last boolean_dup_items string_containschar string_concat exec_k_when_autoconstructing (exec_dup (integer_fromboolean string_conjchar string_yank) exec_if (string_swap) (exec_shove (boolean_dup_items boolean_dup_times boolean_xor \t exec_swap (boolean_pop string_replace boolean_yank boolean_xor exec_do*count (char_yankdup exec_dup_items exec_shove () integer_fromboolean integer_mod integer_min char_rot boolean_dup integer_mod)) (tag_string_246 integer_yank) char_iswhitespace string_occurrencesofchar boolean_yank) integer_max string_dup integer_dup_items) boolean_and integer_fromstring char_swap integer_fromboolean boolean_dup_times exec_string_iterate (integer_dup boolean_yank string_swap)) (string_stackdepth) string_reverse string_shove integer_dup_items string_rest exec_flush string_pop) () string_take integer_eq boolean_shove string_replacefirstchar exec_shove (integer_dup_items integer_lt char_stackdepth char_rot \l string_frominteger exec_do*while (char_dup integer_fromboolean string_dup boolean_dup_items integer_min "aeiouy" exec_k_when_autoconstructing (integer_rot) () exec_y (tagged_176 tag_exec_221 ()) exec_y (string_stackdepth integer_stackdepth) string_occurrencesofchar exec_eq)))
errors: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
total: 0
size: 414

step: 500
program: (string_stackdepth \e \u integer_empty boolean_stackdepth in1 string_last char_shove char_rot char_iswhitespace char_iswhitespace boolean_frominteger "aeiouy" string_containschar string_stackdepth exec_if (integer_fromboolean boolean_stackdepth) integer_max exec_yankdup boolean_eq boolean_and)
errors: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
total: 0
size: 24

step: 1000
program: (string_stackdepth \e \u integer_empty boolean_stackdepth in1 string_last char_shove char_rot char_iswhitespace char_iswhitespace boolean_frominteger "aeiouy" string_containschar string_stackdepth exec_if (integer_fromboolean boolean_stackdepth) integer_max exec_yankdup boolean_eq boolean_and)
errors: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
total: 0
size: 24

step: 1500
program: (string_stackdepth \e \u integer_empty boolean_stackdepth in1 string_last char_shove char_rot char_iswhitespace char_iswhitespace "aeiouy" string_containschar exec_if integer_max exec_yankdup boolean_eq)
errors: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
total: 0
size: 18

step: 2000
program: (string_stackdepth \e \u integer_empty boolean_stackdepth in1 string_last char_shove char_rot char_iswhitespace char_iswhitespace "aeiouy" string_containschar exec_if integer_max exec_yankdup boolean_eq)
errors: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
total: 0
size: 18

step: 2500
program: (string_stackdepth \e \u integer_empty boolean_stackdepth in1 string_last char_shove char_rot char_iswhitespace char_iswhitespace "aeiouy" string_containschar exec_if integer_max exec_yankdup boolean_eq)
errors: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
total: 0
size: 18

step: 3000
program: (string_stackdepth \e \u integer_empty boolean_stackdepth in1 string_last char_shove char_rot char_iswhitespace char_iswhitespace "aeiouy" string_containschar exec_if integer_max exec_yankdup boolean_eq)
errors: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
total: 0
size: 18

step: 3500
program: (string_stackdepth \e \u integer_empty boolean_stackdepth in1 string_last char_shove char_rot char_iswhitespace char_iswhitespace "aeiouy" string_containschar exec_if integer_max exec_yankdup boolean_eq)
errors: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
total: 0
size: 18

step: 4000
program: (string_stackdepth \e \u integer_empty boolean_stackdepth in1 string_last char_shove char_rot char_iswhitespace char_iswhitespace "aeiouy" string_containschar exec_if integer_max exec_yankdup boolean_eq)
errors: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
total: 0
size: 18

step: 4500
program: (string_stackdepth \e \u integer_empty boolean_stackdepth in1 string_last char_shove char_rot char_iswhitespace char_iswhitespace "aeiouy" string_containschar exec_if integer_max exec_yankdup boolean_eq)
errors: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
total: 0
size: 18

step: 5000
program: (string_stackdepth \e \u integer_empty boolean_stackdepth in1 string_last char_shove char_rot char_iswhitespace char_iswhitespace "aeiouy" string_containschar exec_if integer_max exec_yankdup boolean_eq)
errors: (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
total: 0
size: 18

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Last Letter Vowel problem report - generation 1
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: true
| Program output: true

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false

| Correct output: false
| Program output: false
;;******************************
