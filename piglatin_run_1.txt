Command line args: clojush.problems.software.pig-latin
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 10
alternation-rate = 0.01
atom-generators = (ay   a e i o u aeiou #object[clojush.problems.software.pig_latin$fn__7462 0x4153a832 clojush.problems.software.pig_latin$fn__7462@4153a832] #object[clojush.problems.software.pig_latin$fn__7464 0x7b8d6c66 clojush.problems.software.pig_latin$fn__7464@7b8d6c66] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x30ed4034 clojush.instructions.tag$tag_instruction_erc$fn__2160@30ed4034] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x77e6053 clojush.instructions.tag$tagged_instruction_erc$fn__2166@77e6053] in1 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop string_fromchar exec_yankdup integer_yankdup string_flush boolean_swap exec_shove exec_y boolean_yank integer_eq string_butlast string_conjchar string_substring integer_mult boolean_or boolean_empty exec_s_when_autoconstructing char_dup_items char_iswhitespace string_first exec_do*while exec_string_iterate string_indexofchar integer_fromstring char_frominteger exec_dup_items boolean_dup_items exec_empty string_shove exec_rot char_pop exec_dup boolean_flush char_isdigit string_reverse exec_k char_rot print_char boolean_xor integer_gte boolean_dup_times string_replacefirst boolean_shove string_last print_boolean boolean_rot integer_div integer_lte integer_mod string_concat exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove string_dup_times char_swap integer_max char_dup_times string_eq integer_stackdepth string_take char_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq string_emptystring string_swap integer_yank exec_while integer_min exec_swap integer_fromchar string_stackdepth string_replacechar char_allfromstring char_yank string_pop integer_dup_items string_nth exec_do*range exec_if char_shove boolean_invert_first_then_and print_string integer_fromboolean char_yankdup boolean_frominteger string_setchar char_isletter print_integer boolean_eq string_occurrencesofchar string_replacefirstchar integer_flush string_replace char_dup exec_y_when_autoconstructing char_eq integer_gt boolean_not exec_do*times string_empty char_empty exec_pop string_yankdup string_removechar char_flush exec_s integer_lt string_containschar string_yank exec_noop integer_swap string_split string_fromboolean integer_dup string_rest string_rot exec_yank string_parse_to_chars integer_pop integer_empty print_exec integer_dec string_contains string_dup_items exec_stackdepth boolean_and string_length string_frominteger exec_flush exec_when boolean_invert_second_then_and string_dup boolean_yankdup)
error-function = #object[clojush.problems.software.pig_latin$make_pig_latin_error_function_from_cases$the_actual_pig_latin_error_function__7474 0x4fbc516f clojush.problems.software.pig_latin$make_pig_latin_error_function_from_cases$the_actual_pig_latin_error_function__7474@4fbc516f]
evalpush-limit = 2000
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 300
max-genome-size-in-initial-program = 500
max-points = 4000
parent-selection = :lexicase
population-size = 1000
problem-specific-initial-report = #object[clojush.problems.software.pig_latin$pig_latin_initial_report 0x72a0a60d clojush.problems.software.pig_latin$pig_latin_initial_report@72a0a60d]
problem-specific-report = #object[clojush.problems.software.pig_latin$pig_latin_report 0x85c3522 clojush.problems.software.pig_latin$pig_latin_report@85c3522]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: ["" ""]
Train Case:   1 | Input/Output: ["a" "aay"]
Train Case:   2 | Input/Output: ["b" "bay"]
Train Case:   3 | Input/Output: ["c" "cay"]
Train Case:   4 | Input/Output: ["d" "day"]
Train Case:   5 | Input/Output: ["e" "eay"]
Train Case:   6 | Input/Output: ["i" "iay"]
Train Case:   7 | Input/Output: ["m" "may"]
Train Case:   8 | Input/Output: ["o" "oay"]
Train Case:   9 | Input/Output: ["u" "uay"]
Train Case:  10 | Input/Output: ["y" "yay"]
Train Case:  11 | Input/Output: ["z" "zay"]
Train Case:  12 | Input/Output: ["in" "inay"]
Train Case:  13 | Input/Output: ["mg" "gmay"]
Train Case:  14 | Input/Output: ["nj" "jnay"]
Train Case:  15 | Input/Output: ["eat" "eatay"]
Train Case:  16 | Input/Output: ["lyk" "yklay"]
Train Case:  17 | Input/Output: ["ouch" "ouchay"]
Train Case:  18 | Input/Output: ["fhrz" "hrzfay"]
Train Case:  19 | Input/Output: ["hwvb" "wvbhay"]
Train Case:  20 | Input/Output: ["kvoq" "voqkay"]
Train Case:  21 | Input/Output: ["hello" "ellohay"]
Train Case:  22 | Input/Output: ["there" "heretay"]
Train Case:  23 | Input/Output: ["world" "orldway"]
Train Case:  24 | Input/Output: ["apple" "appleay"]
Train Case:  25 | Input/Output: ["nkpmc" "kpmcnay"]
Train Case:  26 | Input/Output: ["iekpb" "iekpbay"]
Train Case:  27 | Input/Output: ["uub l" "uubay lay"]
Train Case:  28 | Input/Output: ["yva y" "vayay yay"]
Train Case:  29 | Input/Output: ["d u e" "day uay eay"]
Train Case:  30 | Input/Output: ["yellow" "ellowyay"]
Train Case:  31 | Input/Output: ["orange" "orangeay"]
Train Case:  32 | Input/Output: ["jgxd j" "gxdjay jay"]
Train Case:  33 | Input/Output: ["uzbnnp" "uzbnnpay"]
Train Case:  34 | Input/Output: ["iwz jt" "iwzay tjay"]
Train Case:  35 | Input/Output: ["c a kh" "cay aay hkay"]
Train Case:  36 | Input/Output: ["ifbl cb" "ifblay bcay"]
Train Case:  37 | Input/Output: ["ycvrtgv" "cvrtgvyay"]
Train Case:  38 | Input/Output: ["umbrella" "umbrellaay"]
Train Case:  39 | Input/Output: ["rniujt p" "niujtray pay"]
Train Case:  40 | Input/Output: ["ku o zyy" "ukay oay yyzay"]
Train Case:  41 | Input/Output: ["ikcmeksl" "ikcmekslay"]
Train Case:  42 | Input/Output: ["bcs q zg" "csbay qay gzay"]
Train Case:  43 | Input/Output: ["h gxfbnpc" "hay xfbnpcgay"]
Train Case:  44 | Input/Output: ["cwzl b rg" "wzlcay bay gray"]
Train Case:  45 | Input/Output: ["ndbpxhxxd" "dbpxhxxdnay"]
Train Case:  46 | Input/Output: ["xw cy zku" "wxay ycay kuzay"]
Train Case:  47 | Input/Output: ["p ysvsrjg" "pay svsrjgyay"]
Train Case:  48 | Input/Output: ["ttygieuokb" "tygieuokbtay"]
Train Case:  49 | Input/Output: ["b eqd llas" "bay eqday laslay"]
Train Case:  50 | Input/Output: ["ctlcd avyk" "tlcdcay avykay"]
Train Case:  51 | Input/Output: ["zaiyabx ie" "aiyabxzay ieay"]
Train Case:  52 | Input/Output: ["ljsk kjexma" "jsklay jexmakay"]
Train Case:  53 | Input/Output: ["floy y o ir" "loyfay yay oay iray"]
Train Case:  54 | Input/Output: ["kfz oxn q y" "fzkay oxnay qay yay"]
Train Case:  55 | Input/Output: ["xlptbx xjlua" "lptbxxay jluaxay"]
Train Case:  56 | Input/Output: ["zezm qk egdc" "ezmzay kqay egdcay"]
Train Case:  57 | Input/Output: ["hbwgurtqmjvz" "bwgurtqmjvzhay"]
Train Case:  58 | Input/Output: ["g o crcosjdq" "gay oay rcosjdqcay"]
Train Case:  59 | Input/Output: ["frc yzbzjmtl" "rcfay zbzjmtlyay"]
Train Case:  60 | Input/Output: ["tvbeq b pvlc" "vbeqtay bay vlcpay"]
Train Case:  61 | Input/Output: ["nzff notekgvs" "zffnay otekgvsnay"]
Train Case:  62 | Input/Output: ["dvb phqsqwz x" "vbday hqsqwzpay xay"]
Train Case:  63 | Input/Output: ["k mqwlkima uz" "kay qwlkimamay uzay"]
Train Case:  64 | Input/Output: ["expialidocious" "expialidociousay"]
Train Case:  65 | Input/Output: ["gdwlusdaacltbp" "dwlusdaacltbpgay"]
Train Case:  66 | Input/Output: ["oeypbed fxscry" "oeypbeday xscryfay"]
Train Case:  67 | Input/Output: ["gfizasscxqqsqk" "fizasscxqqsqkgay"]
Train Case:  68 | Input/Output: ["tyu envqdeml oj" "yutay envqdemlay ojay"]
Train Case:  69 | Input/Output: ["dqgvn g raq evg" "qgvnday gay aqray evgay"]
Train Case:  70 | Input/Output: ["estzbzcsgpoj pp" "estzbzcsgpojay ppay"]
Train Case:  71 | Input/Output: ["j a cmkgxg r da" "jay aay mkgxgcay ray aday"]
Train Case:  72 | Input/Output: ["out at the plate" "outay atay hetay latepay"]
Train Case:  73 | Input/Output: ["ka bio xs xuh ew" "akay iobay sxay uhxay eway"]
Train Case:  74 | Input/Output: ["hello there world" "ellohay heretay orldway"]
Train Case:  75 | Input/Output: ["anq t s uwvjm b f" "anqay tay say uwvjmay bay fay"]
Train Case:  76 | Input/Output: ["x flxwkjig fxymzj" "xay lxwkjigfay xymzjfay"]
Train Case:  77 | Input/Output: ["qvxxcvasqasqz eqo" "vxxcvasqasqzqay eqoay"]
Train Case:  78 | Input/Output: ["yom tkf njmgoln k" "omyay kftay jmgolnnay kay"]
Train Case:  79 | Input/Output: ["lpc pbmk jw vo ik" "pclay bmkpay wjay ovay ikay"]
Train Case:  80 | Input/Output: ["w fkbn tb jchcq g" "way kbnfay btay chcqjay gay"]
Train Case:  81 | Input/Output: ["nkc f jgi kxbko h" "kcnay fay gijay xbkokay hay"]
Train Case:  82 | Input/Output: ["hiedm q gh lulpafm" "iedmhay qay hgay ulpafmlay"]
Train Case:  83 | Input/Output: ["m gbpfaepbygm ubyg" "may bpfaepbygmgay ubygay"]
Train Case:  84 | Input/Output: ["chi np d gif cbp u" "hicay pnay day ifgay bpcay uay"]
Train Case:  85 | Input/Output: ["nap time on planets" "apnay imetay onay lanetspay"]
Train Case:  86 | Input/Output: ["mwexzjbkaxw nnwq lm" "wexzjbkaxwmay nwqnay mlay"]
Train Case:  87 | Input/Output: ["le xlltf hs qlksqyt" "elay lltfxay shay lksqytqay"]
Train Case:  88 | Input/Output: ["wj q rikarj apy f t" "jway qay ikarjray apyay fay tay"]
Train Case:  89 | Input/Output: ["lortxvkcozse ltfjhj" "ortxvkcozselay tfjhjlay"]
Train Case:  90 | Input/Output: ["supercalifragilistic" "upercalifragilisticsay"]
Train Case:  91 | Input/Output: ["zy isalnafrm zxnnoov" "yzay isalnafrmay xnnoovzay"]
Train Case:  92 | Input/Output: ["ne yviwbnu ey v ketm" "enay viwbnuyay eyay vay etmkay"]
Train Case:  93 | Input/Output: ["d hoobb rded eorxa k" "day oobbhay dedray eorxaay kay"]
Train Case:  94 | Input/Output: ["ybapyx usoibdrhv cfb" "bapyxyay usoibdrhvay fbcay"]
Train Case:  95 | Input/Output: ["cpgzadsgmuktyhwprz h" "pgzadsgmuktyhwprzcay hay"]
Train Case:  96 | Input/Output: ["pnqubtq s zshcy kywn" "nqubtqpay say shcyzay ywnkay"]
Train Case:  97 | Input/Output: ["ovrxnkzqtw uwoxevzawn" "ovrxnkzqtway uwoxevzawnay"]
Train Case:  98 | Input/Output: ["ypdlksbslmf kyl lv ct" "pdlksbslmfyay ylkay vlay tcay"]
Train Case:  99 | Input/Output: ["agmccoto clufmbksw oe" "agmccotoay lufmbkswcay oeay"]
Train Case: 100 | Input/Output: ["v vu o rc hfuawsfc z j" "vay uvay oay cray fuawsfchay zay jay"]
Train Case: 101 | Input/Output: ["eeqbt fy zqqgqdpdnexdl" "eeqbtay yfay qqgqdpdnexdlzay"]
Train Case: 102 | Input/Output: ["usxgbq sm cjm kt p xad" "usxgbqay msay jmcay tkay pay adxay"]
Train Case: 103 | Input/Output: ["w wkhbra dhmechepfgray" "way khbraway hmechepfgrayday"]
Train Case: 104 | Input/Output: ["to by ej pcalbhvcyp hp" "otay ybay ejay calbhvcyppay phay"]
Train Case: 105 | Input/Output: ["q km ce x p az j ptvmwl" "qay mkay ecay xay pay azay jay tvmwlpay"]
Train Case: 106 | Input/Output: ["myb ziq jx xseklxthv mr" "ybmay iqzay xjay seklxthvxay rmay"]
Train Case: 107 | Input/Output: ["ndg pymnkwhvba bua dson" "dgnay ymnkwhvbapay uabay sonday"]
Train Case: 108 | Input/Output: ["bsxybwr p k bzdx hnprre" "sxybwrbay pay kay zdxbay nprrehay"]
Train Case: 109 | Input/Output: ["jk blj cb qdplnlru yo m" "kjay ljbay bcay dplnlruqay oyay may"]
Train Case: 110 | Input/Output: ["yvsfji jlltd vfcee sa m" "vsfjiyay lltdjay fceevay asay may"]
Train Case: 111 | Input/Output: ["vita r b hvycqmq wi zxxc" "itavay ray bay vycqmqhay iway xxczay"]
Train Case: 112 | Input/Output: ["w f ebhfi ny puwhwnakr t" "way fay ebhfiay ynay uwhwnakrpay tay"]
Train Case: 113 | Input/Output: ["fu xxi czzz zj wyaflk ds" "ufay xixay zzzcay jzay yaflkway sday"]
Train Case: 114 | Input/Output: ["ylyb rnorj i us togeg tn" "lybyay norjray iay usay ogegtay ntay"]
Train Case: 115 | Input/Output: ["v t mwfljpr hrxhlmraxny c" "vay tay wfljprmay rxhlmraxnyhay cay"]
Train Case: 116 | Input/Output: ["vkqhn zkh va up agg m w w" "kqhnvay khzay avay upay aggay may way way"]
Train Case: 117 | Input/Output: ["txgkyi k fj ld zi hrk gpc" "xgkyitay kay jfay dlay izay rkhay pcgay"]
Train Case: 118 | Input/Output: ["jt aibvzcnma cnapwxnkt rpx" "tjay aibvzcnmaay napwxnktcay pxray"]
Train Case: 119 | Input/Output: ["wgq v qrja xnw yhu w y n v" "gqway vay rjaqay nwxay huyay way yay nay vay"]
Train Case: 120 | Input/Output: ["jdnxbkuufpvhedl yoijpg oul" "dnxbkuufpvhedljay oijpgyay oulay"]
Train Case: 121 | Input/Output: ["udykjnepx qkbat dajxudljaq" "udykjnepxay kbatqay ajxudljaqday"]
Train Case: 122 | Input/Output: ["eo q yyph ylxucoshfac he jn" "eoay qay yphyay lxucoshfacyay ehay njay"]
Train Case: 123 | Input/Output: ["je avlfcqt msctzzzy pyzsloqz" "ejay avlfcqtay sctzzzymay yzsloqzpay"]
Train Case: 124 | Input/Output: ["oq mmz vtkf f fof t u iw hfr" "oqay mzmay tkfvay fay offay tay uay iway frhay"]
Train Case: 125 | Input/Output: ["m fxrbc g nzhilxefkt mrpiy s" "may xrbcfay gay zhilxefktnay rpiymay say"]
Train Case: 126 | Input/Output: ["vlb j owvwo yywby fvtldq tvo" "lbvay jay owvwoay ywbyyay vtldqfay votay"]
Train Case: 127 | Input/Output: ["ngucuo dc rsy w qryfytzvioeun" "gucuonay cday syray way ryfytzvioeunqay"]
Train Case: 128 | Input/Output: ["dbc bxmoovp rcv okd xyi hmbwj" "bcday xmoovpbay cvray okday yixay mbwjhay"]
Train Case: 129 | Input/Output: ["oazf q cu jtgenykynmj t pnj r" "oazfay qay ucay tgenykynmjjay tay njpay ray"]
Train Case: 130 | Input/Output: ["izm lgt l amonmfxufflr h jg g" "izmay gtlay lay amonmfxufflray hay gjay gay"]
Train Case: 131 | Input/Output: ["uejtezugrvwmxsam k amxpmzweag" "uejtezugrvwmxsamay kay amxpmzweagay"]
Train Case: 132 | Input/Output: ["h ggu pwnzzmhi u tt mlsonp ajq" "hay gugay wnzzmhipay uay ttay lsonpmay ajqay"]
Train Case: 133 | Input/Output: ["hg bacih fuypai ttvnap esj rcd" "ghay acihbay uypaifay tvnaptay esjay cdray"]
Train Case: 134 | Input/Output: ["h jvmybofgoinpwg pvgkwpsznreua" "hay vmybofgoinpwgjay vgkwpsznreuapay"]
Train Case: 135 | Input/Output: ["dibmbxbz updbumpyhrouqbj bifmw" "ibmbxbzday updbumpyhrouqbjay ifmwbay"]
Train Case: 136 | Input/Output: ["dhwodm oz gwlo gyds eqiy uqtlw" "hwodmday ozay wlogay ydsgay eqiyay uqtlway"]
Train Case: 137 | Input/Output: ["lhy gy kxn cc aisevh n tmq zxcv" "hylay ygay xnkay ccay aisevhay nay mqtay xcvzay"]
Train Case: 138 | Input/Output: ["ojdwnvejbcsw c jfhx ceq a rbkpw" "ojdwnvejbcsway cay fhxjay eqcay aay bkpwray"]
Train Case: 139 | Input/Output: ["jsjjjrgjcx jnnhn mhireaplpcwgbt" "sjjjrgjcxjay nnhnjay hireaplpcwgbtmay"]
Train Case: 140 | Input/Output: ["gyn ftx iryq xqixx zitaa ykkfdg" "yngay txfay iryqay qixxxay itaazay kkfdgyay"]
Train Case: 141 | Input/Output: ["nvjiui ejj vig bkc j e sghlvf op" "vjiuinay ejjay igvay kcbay jay eay ghlvfsay opay"]
Train Case: 142 | Input/Output: ["mb zcgjpd gq x j t ritg mpfbo vm" "bmay cgjpdzay qgay xay jay tay itgray pfbomay mvay"]
Train Case: 143 | Input/Output: ["awsqndra edwbzenfqdp zdzpjyugkpq" "awsqndraay edwbzenfqdpay dzpjyugkpqzay"]
Train Case: 144 | Input/Output: ["neayyeukjcc sfezaxqgr i punanxds" "eayyeukjccnay fezaxqgrsay iay unanxdspay"]
Train Case: 145 | Input/Output: ["ywyvcxmaorpxbvj ah ioekhzus bpmp" "wyvcxmaorpxbvjyay ahay ioekhzusay pmpbay"]
Train Case: 146 | Input/Output: ["tfk gkvhw ldc webw zjrgoee uq r u" "fktay kvhwgay dclay ebwway jrgoeezay uqay ray uay"]
Train Case: 147 | Input/Output: ["oyy fbdr apfyj gfb gne tcvksw mwi" "oyyay bdrfay apfyjay fbgay negay cvkswtay wimay"]
Train Case: 148 | Input/Output: ["ze rtrzrppmexqtgv zqq l pfxvef tr" "ezay trzrppmexqtgvray qqzay lay fxvefpay rtay"]
Train Case: 149 | Input/Output: ["x hpbm vi tmon ma ulyh phcvoiccih" "xay pbmhay ivay montay amay ulyhay hcvoiccihpay"]
Train Case: 150 | Input/Output: ["oqso uh l b zo eqajvg n w q yijcyu" "oqsoay uhay lay bay ozay eqajvgay nay way qay ijcyuyay"]
Train Case: 151 | Input/Output: ["nkxexbmawrx tvakesbwd le vblmr v x" "kxexbmawrxnay vakesbwdtay elay blmrvay vay xay"]
Train Case: 152 | Input/Output: ["iyauzvgfxuh thtkfr uabseeb q zbhvps" "iyauzvgfxuhay htkfrtay uabseebay qay bhvpszay"]
Train Case: 153 | Input/Output: ["ngplvmtsmnwgpolqbpcu pfbln q xaldue" "gplvmtsmnwgpolqbpcunay fblnpay qay alduexay"]
Train Case: 154 | Input/Output: ["uebn zvk xc a inxfzkwg ldmjgtkutqcu" "uebnay vkzay cxay aay inxfzkwgay dmjgtkutqculay"]
Train Case: 155 | Input/Output: ["djzkzpm ibjqpz u vbzphwdh yyw hrlkn" "jzkzpmday ibjqpzay uay bzphwdhvay ywyay rlknhay"]
Train Case: 156 | Input/Output: ["esiyzfb zubvgqhb c tpru gxqvwsmtbhc" "esiyzfbay ubvgqhbzay cay prutay xqvwsmtbhcgay"]
Train Case: 157 | Input/Output: ["u ep jz f pddk jhxwhw rxxfpqyrvdmvro" "uay epay zjay fay ddkpay hxwhwjay xxfpqyrvdmvroray"]
Train Case: 158 | Input/Output: ["rme d rlzcei rv lt rw amychmsnvvrh k" "meray day lzceiray vray tlay wray amychmsnvvrhay kay"]
Train Case: 159 | Input/Output: ["sjwcurg ixduzd ao asowa quyytlamxd t" "jwcurgsay ixduzday aoay asowaay uyytlamxdqay tay"]
Train Case: 160 | Input/Output: ["faoz xwnsd rwf x ilroeaeop honk i jq" "aozfay wnsdxay wfray xay ilroeaeopay onkhay iay qjay"]
Train Case: 161 | Input/Output: ["it lymb yaullw x n ygpg biczkx z nnl" "itay ymblay aullwyay xay nay gpgyay iczkxbay zay nlnay"]
Train Case: 162 | Input/Output: ["viqx u xjkfajhm vielmvo cuukv imscf t" "iqxvay uay jkfajhmxay ielmvovay uukvcay imscfay tay"]
Train Case: 163 | Input/Output: ["j kgits vlpushhp da khgmfxohb sqo msg" "jay gitskay lpushhpvay aday hgmfxohbkay qosay sgmay"]
Train Case: 164 | Input/Output: ["ultfsqljx ei dxgobmo jume wwehlndar i" "ultfsqljxay eiay xgobmoday umejay wehlndarway iay"]
Train Case: 165 | Input/Output: ["s yd no q pszznh dt fzu reoiurngsmnz p" "say dyay onay qay szznhpay tday zufay eoiurngsmnzray pay"]
Train Case: 166 | Input/Output: ["qx dnw dbyenje ib y kid jqhs xuhroaiqb" "xqay nwday byenjeday ibay yay idkay qhsjay uhroaiqbxay"]
Train Case: 167 | Input/Output: ["pfyi bcpnbuhe wudl gryfp dkx u jzhw uq" "fyipay cpnbuhebay udlway ryfpgay kxday uay zhwjay uqay"]
Train Case: 168 | Input/Output: ["t ne moqxwoeyhgjiqlbqvux m xe j yhjeey" "tay enay oqxwoeyhgjiqlbqvuxmay may exay jay hjeeyyay"]
Train Case: 169 | Input/Output: ["gzhuhjdomrqi smhrqq izkcuetulvnowkicqer" "zhuhjdomrqigay mhrqqsay izkcuetulvnowkicqeray"]
Train Case: 170 | Input/Output: ["eax i rh qew kkshgsvwubiwoaydzrzjczpz e" "eaxay iay hray ewqay kshgsvwubiwoaydzrzjczpzkay eay"]
Train Case: 171 | Input/Output: ["ouqoixz lwow tubpckup oc uv wav mfofng e" "ouqoixzay wowlay ubpckuptay ocay uvay avway fofngmay eay"]
Train Case: 172 | Input/Output: ["wdko o jixurfw liepcue hj x c xis q nncm" "dkoway oay ixurfwjay iepcuelay jhay xay cay isxay qay ncmnay"]
Train Case: 173 | Input/Output: ["qw zke en ali pv hgsqhknydkyk kqh hjqsoo" "wqay kezay enay aliay vpay gsqhknydkykhay qhkay jqsoohay"]
Train Case: 174 | Input/Output: ["ibp cfyohdb k knarhngauwx ktfnq kbqxmfx k" "ibpay fyohdbcay kay narhngauwxkay tfnqkay bqxmfxkay kay"]
Train Case: 175 | Input/Output: ["khmfsnd qhprluob c ie gav pgggrypya dsupk" "hmfsndkay hprluobqay cay ieay avgay gggrypyapay supkday"]
Train Case: 176 | Input/Output: ["s anr la ueuyaxmeucdgus yek ntq rdfvaogfyy" "say anray alay ueuyaxmeucdgusay ekyay tqnay dfvaogfyyray"]
Train Case: 177 | Input/Output: ["b pnte nczsxsg vhjwetkruuo bmaa at b ak ez" "bay ntepay czsxsgnay hjwetkruuovay maabay atay bay akay ezay"]
Train Case: 178 | Input/Output: ["u rki oxbyczzap dab zc tyv pughpohzzjqkms e" "uay kiray oxbyczzapay abday czay yvtay ughpohzzjqkmspay eay"]
Train Case: 179 | Input/Output: ["t xoq eucj lotystf fomwor wrtjufecrsv i hym" "tay oqxay eucjay otystflay omworfay rtjufecrsvway iay ymhay"]
Train Case: 180 | Input/Output: ["ntfrejug u r o d cedaz oym huvv d lmbcofaas" "tfrejugnay uay ray oay day edazcay oymay uvvhay day mbcofaaslay"]
Train Case: 181 | Input/Output: ["qupxpmtvofvgmqikijuo p rpvosteskss s fh v v" "upxpmtvofvgmqikijuoqay pay pvosteskssray say hfay vay vay"]
Train Case: 182 | Input/Output: ["hdxcywbp bjxqzwc fep ift mqwo cohe lmdvtjpho" "dxcywbphay jxqzwcbay epfay iftay qwomay ohecay mdvtjpholay"]
Train Case: 183 | Input/Output: ["teozxvzwzbvxzbt v z tum tefqbbpzns ezkjxbqff" "eozxvzwzbvxzbttay vay zay umtay efqbbpznstay ezkjxbqffay"]
Train Case: 184 | Input/Output: ["gkp ej nafxxqdzo z ommskeo vwglyz vi tijb br" "kpgay ejay afxxqdzonay zay ommskeoay wglyzvay ivay ijbtay rbay"]
Train Case: 185 | Input/Output: ["x oiuauktc ni lo mzybiwu ukoga khyz wn dpeqp" "xay oiuauktcay inay olay zybiwumay ukogaay hyzkay nway peqpday"]
Train Case: 186 | Input/Output: ["oqt fzkc gfse n vtbcbl mkhrx kcy c k cvldegx" "oqtay zkcfay fsegay nay tbcblvay khrxmay cykay cay kay vldegxcay"]
Train Case: 187 | Input/Output: ["vgdjocbpzprng ryqdcndfzcvfc didq o i ytwfi b" "gdjocbpzprngvay yqdcndfzcvfcray idqday oay iay twfiyay bay"]
Train Case: 188 | Input/Output: ["esgswwszph mg kp czegznrtao wpqzfxzucgsuo kz" "esgswwszphay gmay pkay zegznrtaocay pqzfxzucgsuoway zkay"]
Train Case: 189 | Input/Output: ["bnhr oyqnjfdoi syv tb gz ge fnz gqssboqowhw g" "nhrbay oyqnjfdoiay yvsay btay zgay egay nzfay qssboqowhwgay gay"]
Train Case: 190 | Input/Output: ["irka xr aqzgjqmo srm fxq c iszo gynnqvhhhy po" "irkaay rxay aqzgjqmoay rmsay xqfay cay iszoay ynnqvhhhygay opay"]
Train Case: 191 | Input/Output: ["tbxyvflgjgrg fvkhnfr emlqjtjmwxeal f u ygt co" "bxyvflgjgrgtay vkhnfrfay emlqjtjmwxealay fay uay gtyay ocay"]
Train Case: 192 | Input/Output: ["sazkvgxh kvqsfj a fl pdngdccjlw vzao avetpkpml" "azkvgxhsay vqsfjkay aay lfay dngdccjlwpay zaovay avetpkpmlay"]
Train Case: 193 | Input/Output: ["sw kri n bwufenk v jin i fe rmooztlsd byqjwcuo" "wsay rikay nay wufenkbay vay injay iay efay mooztlsdray yqjwcuobay"]
Train Case: 194 | Input/Output: ["w w w w w w w w w w w w w w w w w w w w w w w w w" "way way way way way way way way way way way way way way way way way way way way way way way way way"]
Train Case: 195 | Input/Output: ["e e e e e e e e e e e e e e e e e e e e e e e e e" "eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay"]
Train Case: 196 | Input/Output: ["x y x y x y x y x y x y x y x y x y x y x y x y x" "xay yay xay yay xay yay xay yay xay yay xay yay xay yay xay yay xay yay xay yay xay yay xay yay xay"]
Train Case: 197 | Input/Output: ["uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu" "uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuay"]
Train Case: 198 | Input/Output: ["ssssssssssssssssssssssssssssssssssssssssssssssssss" "ssssssssssssssssssssssssssssssssssssssssssssssssssay"]
Train Case: 199 | Input/Output: ["ha ha ha ha ha ha ha ha ha ha ha ha ha ha ha ha ha" "ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay"]
Test Case:   0 | Input/Output: ["ik" "ikay"]
Test Case:   1 | Input/Output: ["di" "iday"]
Test Case:   2 | Input/Output: ["pp" "ppay"]
Test Case:   3 | Input/Output: ["xa" "axay"]
Test Case:   4 | Input/Output: ["bj" "jbay"]
Test Case:   5 | Input/Output: ["ab" "abay"]
Test Case:   6 | Input/Output: ["un" "unay"]
Test Case:   7 | Input/Output: ["zw" "wzay"]
Test Case:   8 | Input/Output: ["li" "ilay"]
Test Case:   9 | Input/Output: ["il" "ilay"]
Test Case:  10 | Input/Output: ["vyr" "yrvay"]
Test Case:  11 | Input/Output: ["q u" "qay uay"]
Test Case:  12 | Input/Output: ["nyy" "yynay"]
Test Case:  13 | Input/Output: ["vie" "ievay"]
Test Case:  14 | Input/Output: ["obo" "oboay"]
Test Case:  15 | Input/Output: ["zgf" "gfzay"]
Test Case:  16 | Input/Output: ["vpf" "pfvay"]
Test Case:  17 | Input/Output: ["kcs" "cskay"]
Test Case:  18 | Input/Output: ["hrh" "rhhay"]
Test Case:  19 | Input/Output: ["can" "ancay"]
Test Case:  20 | Input/Output: ["ebp" "ebpay"]
Test Case:  21 | Input/Output: ["uam" "uamay"]
Test Case:  22 | Input/Output: ["qim" "imqay"]
Test Case:  23 | Input/Output: ["mxj" "xjmay"]
Test Case:  24 | Input/Output: ["uhf" "uhfay"]
Test Case:  25 | Input/Output: ["kxe" "xekay"]
Test Case:  26 | Input/Output: ["ftb" "tbfay"]
Test Case:  27 | Input/Output: ["t y" "tay yay"]
Test Case:  28 | Input/Output: ["b p" "bay pay"]
Test Case:  29 | Input/Output: ["jkt" "ktjay"]
Test Case:  30 | Input/Output: ["rvh" "vhray"]
Test Case:  31 | Input/Output: ["esi" "esiay"]
Test Case:  32 | Input/Output: ["pmb" "mbpay"]
Test Case:  33 | Input/Output: ["i w" "iay way"]
Test Case:  34 | Input/Output: ["qke" "keqay"]
Test Case:  35 | Input/Output: ["yrv" "rvyay"]
Test Case:  36 | Input/Output: ["h x" "hay xay"]
Test Case:  37 | Input/Output: ["rib" "ibray"]
Test Case:  38 | Input/Output: ["zgbw" "gbwzay"]
Test Case:  39 | Input/Output: ["wetq" "etqway"]
Test Case:  40 | Input/Output: ["jvlc" "vlcjay"]
Test Case:  41 | Input/Output: ["idxs" "idxsay"]
Test Case:  42 | Input/Output: ["qi o" "iqay oay"]
Test Case:  43 | Input/Output: ["vv a" "vvay aay"]
Test Case:  44 | Input/Output: ["ujfs" "ujfsay"]
Test Case:  45 | Input/Output: ["dd s" "dday say"]
Test Case:  46 | Input/Output: ["dzeq" "zeqday"]
Test Case:  47 | Input/Output: ["c ux" "cay uxay"]
Test Case:  48 | Input/Output: ["soxy" "oxysay"]
Test Case:  49 | Input/Output: ["bhnr" "hnrbay"]
Test Case:  50 | Input/Output: ["mx i" "xmay iay"]
Test Case:  51 | Input/Output: ["zvsa" "vsazay"]
Test Case:  52 | Input/Output: ["su a" "usay aay"]
Test Case:  53 | Input/Output: ["rzot" "zotray"]
Test Case:  54 | Input/Output: ["cfov" "fovcay"]
Test Case:  55 | Input/Output: ["u hh" "uay hhay"]
Test Case:  56 | Input/Output: ["m dn" "may nday"]
Test Case:  57 | Input/Output: ["mhvz" "hvzmay"]
Test Case:  58 | Input/Output: ["nsah" "sahnay"]
Test Case:  59 | Input/Output: ["z rf" "zay fray"]
Test Case:  60 | Input/Output: ["okrhs" "okrhsay"]
Test Case:  61 | Input/Output: ["nwuth" "wuthnay"]
Test Case:  62 | Input/Output: ["gzsrq" "zsrqgay"]
Test Case:  63 | Input/Output: ["ufsna" "ufsnaay"]
Test Case:  64 | Input/Output: ["pcxpt" "cxptpay"]
Test Case:  65 | Input/Output: ["ttnfc" "tnfctay"]
Test Case:  66 | Input/Output: ["by uv" "ybay uvay"]
Test Case:  67 | Input/Output: ["quooi" "uooiqay"]
Test Case:  68 | Input/Output: ["atn k" "atnay kay"]
Test Case:  69 | Input/Output: ["caz b" "azcay bay"]
Test Case:  70 | Input/Output: ["o xae" "oay aexay"]
Test Case:  71 | Input/Output: ["nkh y" "khnay yay"]
Test Case:  72 | Input/Output: ["rs ak" "sray akay"]
Test Case:  73 | Input/Output: ["lgrwp" "grwplay"]
Test Case:  74 | Input/Output: ["bp at" "pbay atay"]
Test Case:  75 | Input/Output: ["joj v" "ojjay vay"]
Test Case:  76 | Input/Output: ["dto r" "today ray"]
Test Case:  77 | Input/Output: ["x ytd" "xay tdyay"]
Test Case:  78 | Input/Output: ["fdqtj" "dqtjfay"]
Test Case:  79 | Input/Output: ["nefwn" "efwnnay"]
Test Case:  80 | Input/Output: ["gciet" "cietgay"]
Test Case:  81 | Input/Output: ["ledge" "edgelay"]
Test Case:  82 | Input/Output: ["tnm v" "nmtay vay"]
Test Case:  83 | Input/Output: ["zg pd" "gzay dpay"]
Test Case:  84 | Input/Output: ["ahxrh" "ahxrhay"]
Test Case:  85 | Input/Output: ["bzkve" "zkvebay"]
Test Case:  86 | Input/Output: ["msowi" "sowimay"]
Test Case:  87 | Input/Output: ["owqfnq" "owqfnqay"]
Test Case:  88 | Input/Output: ["jcbk f" "cbkjay fay"]
Test Case:  89 | Input/Output: ["y hl y" "yay lhay yay"]
Test Case:  90 | Input/Output: ["t ewon" "tay ewonay"]
Test Case:  91 | Input/Output: ["czdrpv" "zdrpvcay"]
Test Case:  92 | Input/Output: ["b e fv" "bay eay vfay"]
Test Case:  93 | Input/Output: ["nz iyz" "znay iyzay"]
Test Case:  94 | Input/Output: ["pcorjq" "corjqpay"]
Test Case:  95 | Input/Output: ["btg nd" "tgbay dnay"]
Test Case:  96 | Input/Output: ["ppnnlk" "pnnlkpay"]
Test Case:  97 | Input/Output: ["cjznlk" "jznlkcay"]
Test Case:  98 | Input/Output: ["ou njy" "ouay jynay"]
Test Case:  99 | Input/Output: ["dpr bb" "prday bbay"]
Test Case: 100 | Input/Output: ["eiur c" "eiuray cay"]
Test Case: 101 | Input/Output: ["uyz pm" "uyzay mpay"]
Test Case: 102 | Input/Output: ["y ikno" "yay iknoay"]
Test Case: 103 | Input/Output: ["ksoryl" "sorylkay"]
Test Case: 104 | Input/Output: ["knonzk" "nonzkkay"]
Test Case: 105 | Input/Output: ["sv zrw" "vsay rwzay"]
Test Case: 106 | Input/Output: ["s babu" "say abubay"]
Test Case: 107 | Input/Output: ["qobtoc" "obtocqay"]
Test Case: 108 | Input/Output: ["mi dspq" "imay spqday"]
Test Case: 109 | Input/Output: ["i fpj p" "iay pjfay pay"]
Test Case: 110 | Input/Output: ["xu bdol" "uxay dolbay"]
Test Case: 111 | Input/Output: ["rm l cf" "mray lay fcay"]
Test Case: 112 | Input/Output: ["ysnqsia" "snqsiayay"]
Test Case: 113 | Input/Output: ["crmaerk" "rmaerkcay"]
Test Case: 114 | Input/Output: ["bpoqerq" "poqerqbay"]
Test Case: 115 | Input/Output: ["lyaziaf" "yaziaflay"]
Test Case: 116 | Input/Output: ["yva mlh" "vayay lhmay"]
Test Case: 117 | Input/Output: ["kcnfwlv" "cnfwlvkay"]
Test Case: 118 | Input/Output: ["mntnbsv" "ntnbsvmay"]
Test Case: 119 | Input/Output: ["qm hsee" "mqay seehay"]
Test Case: 120 | Input/Output: ["mraloxf" "raloxfmay"]
Test Case: 121 | Input/Output: ["hp omcl" "phay omclay"]
Test Case: 122 | Input/Output: ["tow zmd" "owtay mdzay"]
Test Case: 123 | Input/Output: ["rvc zuq" "vcray uqzay"]
Test Case: 124 | Input/Output: ["wrj a h" "rjway aay hay"]
Test Case: 125 | Input/Output: ["tiag vz" "iagtay zvay"]
Test Case: 126 | Input/Output: ["dgkmhqh" "gkmhqhday"]
Test Case: 127 | Input/Output: ["w ntj a" "way tjnay aay"]
Test Case: 128 | Input/Output: ["uiht ka" "uihtay akay"]
Test Case: 129 | Input/Output: ["kcq viv" "cqkay ivvay"]
Test Case: 130 | Input/Output: ["boyltfd" "oyltfdbay"]
Test Case: 131 | Input/Output: ["kclna c" "clnakay cay"]
Test Case: 132 | Input/Output: ["f np ov" "fay pnay ovay"]
Test Case: 133 | Input/Output: ["r ztu d" "ray tuzay day"]
Test Case: 134 | Input/Output: ["jetsny j" "etsnyjay jay"]
Test Case: 135 | Input/Output: ["yrxs thk" "rxsyay hktay"]
Test Case: 136 | Input/Output: ["b vybvkh" "bay ybvkhvay"]
Test Case: 137 | Input/Output: ["tuzsy jy" "uzsytay yjay"]
Test Case: 138 | Input/Output: ["zq oro l" "qzay oroay lay"]
Test Case: 139 | Input/Output: ["k o ezdu" "kay oay ezduay"]
Test Case: 140 | Input/Output: ["cphwiyxq" "phwiyxqcay"]
Test Case: 141 | Input/Output: ["v kcewmo" "vay cewmokay"]
Test Case: 142 | Input/Output: ["zxvggcnj" "xvggcnjzay"]
Test Case: 143 | Input/Output: ["vvo xgos" "vovay gosxay"]
Test Case: 144 | Input/Output: ["cmt gw n" "mtcay wgay nay"]
Test Case: 145 | Input/Output: ["wja atrv" "jaway atrvay"]
Test Case: 146 | Input/Output: ["pt djzjdi" "tpay jzjdiday"]
Test Case: 147 | Input/Output: ["f sptwgpq" "fay ptwgpqsay"]
Test Case: 148 | Input/Output: ["jbeqmsf c" "beqmsfjay cay"]
Test Case: 149 | Input/Output: ["uxyovycly" "uxyovyclyay"]
Test Case: 150 | Input/Output: ["lcyzi sqa" "cyzilay qasay"]
Test Case: 151 | Input/Output: ["rsxrdfrlf" "sxrdfrlfray"]
Test Case: 152 | Input/Output: ["vtmr mlmp" "tmrvay lmpmay"]
Test Case: 153 | Input/Output: ["pgvjk i d" "gvjkpay iay day"]
Test Case: 154 | Input/Output: ["avv cghvo" "avvay ghvocay"]
Test Case: 155 | Input/Output: ["j i lrqoc" "jay iay rqoclay"]
Test Case: 156 | Input/Output: ["zxxzvpfvp" "xxzvpfvpzay"]
Test Case: 157 | Input/Output: ["hx xyoz o" "xhay yozxay oay"]
Test Case: 158 | Input/Output: ["dtwms y m" "twmsday yay may"]
Test Case: 159 | Input/Output: ["rdbslmwwp" "dbslmwwpray"]
Test Case: 160 | Input/Output: ["fvuvhne q" "vuvhnefay qay"]
Test Case: 161 | Input/Output: ["ehcq pc s" "ehcqay cpay say"]
Test Case: 162 | Input/Output: ["rh ilrzkf" "hray ilrzkfay"]
Test Case: 163 | Input/Output: ["lq r wijw" "qlay ray ijwway"]
Test Case: 164 | Input/Output: ["juzeweslp" "uzeweslpjay"]
Test Case: 165 | Input/Output: ["e thtvjcr" "eay htvjcrtay"]
Test Case: 166 | Input/Output: ["v rd cd i" "vay dray dcay iay"]
Test Case: 167 | Input/Output: ["vevatb bu" "evatbvay ubay"]
Test Case: 168 | Input/Output: ["ba vrekjl" "abay rekjlvay"]
Test Case: 169 | Input/Output: ["h rgyrrfj" "hay gyrrfjray"]
Test Case: 170 | Input/Output: ["nuwxdojay" "uwxdojaynay"]
Test Case: 171 | Input/Output: ["rguhb ruy" "guhbray uyray"]
Test Case: 172 | Input/Output: ["yp j wfyu" "pyay jay fyuway"]
Test Case: 173 | Input/Output: ["w e vy ibt" "way eay yvay ibtay"]
Test Case: 174 | Input/Output: ["srsx a n n" "rsxsay aay nay nay"]
Test Case: 175 | Input/Output: ["au hahsxgb" "auay ahsxgbhay"]
Test Case: 176 | Input/Output: ["cs i bow j" "scay iay owbay jay"]
Test Case: 177 | Input/Output: ["s rzkoprkp" "say zkoprkpray"]
Test Case: 178 | Input/Output: ["oh lyb hzw" "ohay yblay zwhay"]
Test Case: 179 | Input/Output: ["xkprfbtg d" "kprfbtgxay day"]
Test Case: 180 | Input/Output: ["hphafxcfxd" "phafxcfxdhay"]
Test Case: 181 | Input/Output: ["muer vwb c" "uermay wbvay cay"]
Test Case: 182 | Input/Output: ["lx syqf it" "xlay yqfsay itay"]
Test Case: 183 | Input/Output: ["yzcj ucrnn" "zcjyay ucrnnay"]
Test Case: 184 | Input/Output: ["kvmaq zv c" "vmaqkay vzay cay"]
Test Case: 185 | Input/Output: ["dccownjhqg" "ccownjhqgday"]
Test Case: 186 | Input/Output: ["tc bn hv w" "ctay nbay vhay way"]
Test Case: 187 | Input/Output: ["fb qq vb b" "bfay qqay bvay bay"]
Test Case: 188 | Input/Output: ["oagzppnild" "oagzppnilday"]
Test Case: 189 | Input/Output: ["qigguc zowd" "iggucqay owdzay"]
Test Case: 190 | Input/Output: ["ory a x alu" "oryay aay xay aluay"]
Test Case: 191 | Input/Output: ["kbrcj qenvg" "brcjkay envgqay"]
Test Case: 192 | Input/Output: ["zlhl bwjzjq" "lhlzay wjzjqbay"]
Test Case: 193 | Input/Output: ["mkhrdtuvm k" "khrdtuvmmay kay"]
Test Case: 194 | Input/Output: ["e xz w ipto" "eay zxay way iptoay"]
Test Case: 195 | Input/Output: ["n bu yjuuya" "nay ubay juuyayay"]
Test Case: 196 | Input/Output: ["cqsgwib l s" "qsgwibcay lay say"]
Test Case: 197 | Input/Output: ["czlaaat k t" "zlaaatcay kay tay"]
Test Case: 198 | Input/Output: ["z xdh zg vp" "zay dhxay gzay pvay"]
Test Case: 199 | Input/Output: ["nnfhrbrq rk" "nfhrbrqnay kray"]
Test Case: 200 | Input/Output: ["dg xzedwksh" "gday zedwkshxay"]
Test Case: 201 | Input/Output: ["ru mjk i pt" "uray jkmay iay tpay"]
Test Case: 202 | Input/Output: ["rwrv q gjba" "wrvray qay jbagay"]
Test Case: 203 | Input/Output: ["c ug n solj" "cay ugay nay oljsay"]
Test Case: 204 | Input/Output: ["zt ulfeexmv" "tzay ulfeexmvay"]
Test Case: 205 | Input/Output: ["xjsidt fppu" "jsidtxay ppufay"]
Test Case: 206 | Input/Output: ["v rnq g h l" "vay nqray gay hay lay"]
Test Case: 207 | Input/Output: ["galyyw c af" "alyywgay cay afay"]
Test Case: 208 | Input/Output: ["wupb zph hu" "upbway phzay uhay"]
Test Case: 209 | Input/Output: ["sj zl zx lp" "jsay lzay xzay play"]
Test Case: 210 | Input/Output: ["yx az ip ox" "xyay azay ipay oxay"]
Test Case: 211 | Input/Output: ["a l mizpogq" "aay lay izpogqmay"]
Test Case: 212 | Input/Output: ["zcf xpo qgj" "cfzay poxay gjqay"]
Test Case: 213 | Input/Output: ["bsratxfsyva" "sratxfsyvabay"]
Test Case: 214 | Input/Output: ["y t tbdy mex" "yay tay bdytay exmay"]
Test Case: 215 | Input/Output: ["rifynp krodm" "ifynpray rodmkay"]
Test Case: 216 | Input/Output: ["yyve rehfbon" "yveyay ehfbonray"]
Test Case: 217 | Input/Output: ["rp h a xb ug" "pray hay aay bxay ugay"]
Test Case: 218 | Input/Output: ["ivwsuayspfoz" "ivwsuayspfozay"]
Test Case: 219 | Input/Output: ["vpgno fmjttp" "pgnovay mjttpfay"]
Test Case: 220 | Input/Output: ["cwtt s aydfs" "wttcay say aydfsay"]
Test Case: 221 | Input/Output: ["nhhxd kww vu" "hhxdnay wwkay uvay"]
Test Case: 222 | Input/Output: ["d f ah r rlp" "day fay ahay ray lpray"]
Test Case: 223 | Input/Output: ["adr lnwdtdrv" "adray nwdtdrvlay"]
Test Case: 224 | Input/Output: ["yygipi sb dd" "ygipiyay bsay dday"]
Test Case: 225 | Input/Output: ["edsdxpvd btn" "edsdxpvday tnbay"]
Test Case: 226 | Input/Output: ["e anbjtl tvj" "eay anbjtlay vjtay"]
Test Case: 227 | Input/Output: ["g qet ow v q" "gay etqay oway vay qay"]
Test Case: 228 | Input/Output: ["taedawhorb n" "aedawhorbtay nay"]
Test Case: 229 | Input/Output: ["qitevzwajupa" "itevzwajupaqay"]
Test Case: 230 | Input/Output: ["ijg mqbdbeas" "ijgay qbdbeasmay"]
Test Case: 231 | Input/Output: ["wfxkhmdkkmza" "fxkhmdkkmzaway"]
Test Case: 232 | Input/Output: ["v v wyivjees" "vay vay yivjeesway"]
Test Case: 233 | Input/Output: ["udedpguank t" "udedpguankay tay"]
Test Case: 234 | Input/Output: ["wk bww by ev" "kway wwbay ybay evay"]
Test Case: 235 | Input/Output: ["i wghuwjej w" "iay ghuwjejway way"]
Test Case: 236 | Input/Output: ["lzlxrtlmtevr" "zlxrtlmtevrlay"]
Test Case: 237 | Input/Output: ["cu cdq l o z" "ucay dqcay lay oay zay"]
Test Case: 238 | Input/Output: ["t nuabrq q o" "tay uabrqnay qay oay"]
Test Case: 239 | Input/Output: ["uhoaohu yoam" "uhoaohuay oamyay"]
Test Case: 240 | Input/Output: ["ezpbro gk jh" "ezpbroay kgay hjay"]
Test Case: 241 | Input/Output: ["bmuwidoddd e" "muwidodddbay eay"]
Test Case: 242 | Input/Output: ["zot wghnirvf" "otzay ghnirvfway"]
Test Case: 243 | Input/Output: ["anrnm wt tjh" "anrnmay tway jhtay"]
Test Case: 244 | Input/Output: ["meeo fb m k i" "eeomay bfay may kay iay"]
Test Case: 245 | Input/Output: ["plodnydhibhux" "lodnydhibhuxpay"]
Test Case: 246 | Input/Output: ["tf dj gzkrskz" "ftay jday zkrskzgay"]
Test Case: 247 | Input/Output: ["daqzkrc e qfg" "aqzkrcday eay fgqay"]
Test Case: 248 | Input/Output: ["djrrwn ayvbnm" "jrrwnday ayvbnmay"]
Test Case: 249 | Input/Output: ["da qbjt qhnvn" "aday bjtqay hnvnqay"]
Test Case: 250 | Input/Output: ["zgz xr un beb" "gzzay rxay unay ebbay"]
Test Case: 251 | Input/Output: ["v voznztzvvbk" "vay oznztzvvbkvay"]
Test Case: 252 | Input/Output: ["cues ls ghqbd" "uescay slay hqbdgay"]
Test Case: 253 | Input/Output: ["gjwy nklaflsn" "jwygay klaflsnnay"]
Test Case: 254 | Input/Output: ["zvzntynpxz fy" "vzntynpxzzay yfay"]
Test Case: 255 | Input/Output: ["cnshig pxiggi" "nshigcay xiggipay"]
Test Case: 256 | Input/Output: ["pp ej kpa fvm" "ppay ejay pakay vmfay"]
Test Case: 257 | Input/Output: ["jnsqkp k sd z" "nsqkpjay kay dsay zay"]
Test Case: 258 | Input/Output: ["yhrh b qj ors" "hrhyay bay jqay orsay"]
Test Case: 259 | Input/Output: ["dtr jzeau tzd" "trday zeaujay zdtay"]
Test Case: 260 | Input/Output: ["z pnj co ddpb" "zay njpay ocay dpbday"]
Test Case: 261 | Input/Output: ["jpvbl hn xcum" "pvbljay nhay cumxay"]
Test Case: 262 | Input/Output: ["alegqn g so x" "alegqnay gay osay xay"]
Test Case: 263 | Input/Output: ["b digjejb y r" "bay igjejbday yay ray"]
Test Case: 264 | Input/Output: ["qexfimxxqwowt" "exfimxxqwowtqay"]
Test Case: 265 | Input/Output: ["r ighslwogdjh" "ray ighslwogdjhay"]
Test Case: 266 | Input/Output: ["ycqpzpftypy r" "cqpzpftypyyay ray"]
Test Case: 267 | Input/Output: ["ykubmvqoz z nf" "kubmvqozyay zay fnay"]
Test Case: 268 | Input/Output: ["zc igk low ljm" "czay igkay owlay jmlay"]
Test Case: 269 | Input/Output: ["dmua vo swuu e" "muaday ovay wuusay eay"]
Test Case: 270 | Input/Output: ["w hqcca hiidaf" "way qccahay iidafhay"]
Test Case: 271 | Input/Output: ["bv uyu pkvzrka" "vbay uyuay kvzrkapay"]
Test Case: 272 | Input/Output: ["jj ivozonu s y" "jjay ivozonuay say yay"]
Test Case: 273 | Input/Output: ["qsjti n ywwswk" "sjtiqay nay wwswkyay"]
Test Case: 274 | Input/Output: ["t xng cs myz q" "tay ngxay scay yzmay qay"]
Test Case: 275 | Input/Output: ["vbbt ymyya yee" "bbtvay myyayay eeyay"]
Test Case: 276 | Input/Output: ["b hx vxnxmc st" "bay xhay xnxmcvay tsay"]
Test Case: 277 | Input/Output: ["qrpfxqoxtb qlr" "rpfxqoxtbqay lrqay"]
Test Case: 278 | Input/Output: ["s xvxakt fhjfy" "say vxaktxay hjfyfay"]
Test Case: 279 | Input/Output: ["fps xozxyfiz t" "psfay ozxyfizxay tay"]
Test Case: 280 | Input/Output: ["nwacclfuqhm br" "wacclfuqhmnay rbay"]
Test Case: 281 | Input/Output: ["gjult kdecn ke" "jultgay decnkay ekay"]
Test Case: 282 | Input/Output: ["d gw uokrbcbe r" "day wgay uokrbcbeay ray"]
Test Case: 283 | Input/Output: ["a i y cmova glm" "aay iay yay movacay lmgay"]
Test Case: 284 | Input/Output: ["wzryxddgxny gqr" "zryxddgxnyway qrgay"]
Test Case: 285 | Input/Output: ["scdjxfaaf ac zp" "cdjxfaafsay acay pzay"]
Test Case: 286 | Input/Output: ["npg x t s o kjz" "pgnay xay tay say oay jzkay"]
Test Case: 287 | Input/Output: ["h qs whhudk qkv" "hay sqay hhudkway kvqay"]
Test Case: 288 | Input/Output: ["arwq f awdayvvf" "arwqay fay awdayvvfay"]
Test Case: 289 | Input/Output: ["qatbi azf qf ii" "atbiqay azfay fqay iiay"]
Test Case: 290 | Input/Output: ["unparahhvqq ofd" "unparahhvqqay ofday"]
Test Case: 291 | Input/Output: ["wx dlqbafu gn e" "xway lqbafuday ngay eay"]
Test Case: 292 | Input/Output: ["t buiqafm zjv f" "tay uiqafmbay jvzay fay"]
Test Case: 293 | Input/Output: ["dosfmc rbythwkl" "osfmcday bythwklray"]
Test Case: 294 | Input/Output: ["w urowvfuqts mt" "way urowvfuqtsay tmay"]
Test Case: 295 | Input/Output: ["cp jxcpkk eue s" "pcay xcpkkjay eueay say"]
Test Case: 296 | Input/Output: ["kpwchseae d elk" "pwchseaekay day elkay"]
Test Case: 297 | Input/Output: ["qgmyidg jiu xqw" "gmyidgqay iujay qwxay"]
Test Case: 298 | Input/Output: ["oht gyjoy x why" "ohtay yjoygay xay hyway"]
Test Case: 299 | Input/Output: ["apk dujnguuurrq" "apkay ujnguuurrqday"]
Test Case: 300 | Input/Output: ["y di b ikz blmb" "yay iday bay ikzay lmbbay"]
Test Case: 301 | Input/Output: ["l lnqi tnljnacss" "lay nqilay nljnacsstay"]
Test Case: 302 | Input/Output: ["napjm mvbpkhyvwh" "apjmnay vbpkhyvwhmay"]
Test Case: 303 | Input/Output: ["n w y finb a zum" "nay way yay inbfay aay umzay"]
Test Case: 304 | Input/Output: ["ilsie wex n rxxa" "ilsieay exway nay xxaray"]
Test Case: 305 | Input/Output: ["tno w eiklkue us" "notay way eiklkueay usay"]
Test Case: 306 | Input/Output: ["ybulvhrfmu d ozm" "bulvhrfmuyay day ozmay"]
Test Case: 307 | Input/Output: ["ged bs olymtcdzd" "edgay sbay olymtcdzday"]
Test Case: 308 | Input/Output: ["xmk axhzkz iujmf" "mkxay axhzkzay iujmfay"]
Test Case: 309 | Input/Output: ["ba rpsd pshh i q" "abay psdray shhpay iay qay"]
Test Case: 310 | Input/Output: ["f pc tevrw fytay" "fay cpay evrwtay ytayfay"]
Test Case: 311 | Input/Output: ["sqv xvt lpsbeasf" "qvsay vtxay psbeasflay"]
Test Case: 312 | Input/Output: ["sou p im euihl c" "ousay pay imay euihlay cay"]
Test Case: 313 | Input/Output: ["gjihj clvs xlr s" "jihjgay lvscay lrxay say"]
Test Case: 314 | Input/Output: ["ok pcmtsgt gsbyk" "okay cmtsgtpay sbykgay"]
Test Case: 315 | Input/Output: ["b lbuxgmaid v ni" "bay buxgmaidlay vay inay"]
Test Case: 316 | Input/Output: ["mbxjhzlivzq x ch" "bxjhzlivzqmay xay hcay"]
Test Case: 317 | Input/Output: ["rpgyx eht ongjmr" "pgyxray ehtay ongjmray"]
Test Case: 318 | Input/Output: ["au k ei h lsupaz" "auay kay eiay hay supazlay"]
Test Case: 319 | Input/Output: ["n nq ci xstfxnuzo" "nay qnay icay stfxnuzoxay"]
Test Case: 320 | Input/Output: ["cjl lspvvz bq jdc" "jlcay spvvzlay qbay dcjay"]
Test Case: 321 | Input/Output: ["zkl z mk xjanjlqm" "klzay zay kmay janjlqmxay"]
Test Case: 322 | Input/Output: ["zjgol g mwd egkph" "jgolzay gay wdmay egkphay"]
Test Case: 323 | Input/Output: ["dxsa c mzz bxq qt" "xsaday cay zzmay xqbay tqay"]
Test Case: 324 | Input/Output: ["brfr y qt kzdisvk" "rfrbay yay tqay zdisvkkay"]
Test Case: 325 | Input/Output: ["mfse bkflcj tup r" "fsemay kflcjbay uptay ray"]
Test Case: 326 | Input/Output: ["nhcymqynbclkqvzbp" "hcymqynbclkqvzbpnay"]
Test Case: 327 | Input/Output: ["ufrdik fmgs rls w" "ufrdikay mgsfay lsray way"]
Test Case: 328 | Input/Output: ["vgzspezws gxkap q" "gzspezwsvay xkapgay qay"]
Test Case: 329 | Input/Output: ["edp xzgcpt ca tcu" "edpay zgcptxay acay cutay"]
Test Case: 330 | Input/Output: ["o slzuwuzfqtipjjy" "oay lzuwuzfqtipjjysay"]
Test Case: 331 | Input/Output: ["jwhg otndhl u wfp" "whgjay otndhlay uay fpway"]
Test Case: 332 | Input/Output: ["jxumsq tzpnqglkwj" "xumsqjay zpnqglkwjtay"]
Test Case: 333 | Input/Output: ["rn u wz qufgxxpyx" "nray uay zway ufgxxpyxqay"]
Test Case: 334 | Input/Output: ["fdoz kddis iu qza" "dozfay ddiskay iuay zaqay"]
Test Case: 335 | Input/Output: ["xk b v rmdt fimyw" "kxay bay vay mdtray imywfay"]
Test Case: 336 | Input/Output: ["vqvwea ldnrrupdef" "qvweavay dnrrupdeflay"]
Test Case: 337 | Input/Output: ["ek hcsrrxbqtjjgtq" "ekay csrrxbqtjjgtqhay"]
Test Case: 338 | Input/Output: ["q cyp xmuudmha ly" "qay ypcay muudmhaxay ylay"]
Test Case: 339 | Input/Output: ["ngpdwjwz xrz ylki" "gpdwjwznay rzxay lkiyay"]
Test Case: 340 | Input/Output: ["xzttgdlbvcy wkaf i" "zttgdlbvcyxay kafway iay"]
Test Case: 341 | Input/Output: ["rf t sapvtmu iqt k" "fray tay apvtmusay iqtay kay"]
Test Case: 342 | Input/Output: ["qib f e zd lrqmdwv" "ibqay fay eay dzay rqmdwvlay"]
Test Case: 343 | Input/Output: ["quuvzq tpf bjjrjyo" "uuvzqqay pftay jjrjyobay"]
Test Case: 344 | Input/Output: ["msd cmqi zvjc f ig" "sdmay mqicay vjczay fay igay"]
Test Case: 345 | Input/Output: ["jgqt s u cdfvq p t" "gqtjay say uay dfvqcay pay tay"]
Test Case: 346 | Input/Output: ["s ne tmmtgg ye nud" "say enay mmtggtay eyay udnay"]
Test Case: 347 | Input/Output: ["lcwadac qjxjtlbald" "cwadaclay jxjtlbaldqay"]
Test Case: 348 | Input/Output: ["i gg fyhkzx rr wzu" "iay ggay yhkzxfay rray zuway"]
Test Case: 349 | Input/Output: ["sarhk eh dsp qko e" "arhksay ehay spday koqay eay"]
Test Case: 350 | Input/Output: ["pzdvzzh e oxfwsyio" "zdvzzhpay eay oxfwsyioay"]
Test Case: 351 | Input/Output: ["hofow nkwmpiblwmwp" "ofowhay kwmpiblwmwpnay"]
Test Case: 352 | Input/Output: ["eddlomqbq ojvd bgw" "eddlomqbqay ojvday gwbay"]
Test Case: 353 | Input/Output: ["qo oqjzbkewqyjuw g" "oqay oqjzbkewqyjuway gay"]
Test Case: 354 | Input/Output: ["cftkkfr gqyau uoyd" "ftkkfrcay qyaugay uoyday"]
Test Case: 355 | Input/Output: ["c ypax h jb vcqpmt" "cay paxyay hay bjay cqpmtvay"]
Test Case: 356 | Input/Output: ["ifvh q bj oq n fre" "ifvhay qay jbay oqay nay refay"]
Test Case: 357 | Input/Output: ["q whx zzugck fugwu" "qay hxway zugckzay ugwufay"]
Test Case: 358 | Input/Output: ["s mg fncy aqew flf" "say gmay ncyfay aqeway lffay"]
Test Case: 359 | Input/Output: ["jq hovhjfcrqoa k y" "qjay ovhjfcrqoahay kay yay"]
Test Case: 360 | Input/Output: ["efb lqsdksquoh xgh" "efbay qsdksquohlay ghxay"]
Test Case: 361 | Input/Output: ["rwmsg quhqude f bd" "wmsgray uhqudeqay fay dbay"]
Test Case: 362 | Input/Output: ["pp v lddfqjm mzpfb" "ppay vay ddfqjmlay zpfbmay"]
Test Case: 363 | Input/Output: ["wo svpze wquvgylf u" "oway vpzesay quvgylfway uay"]
Test Case: 364 | Input/Output: ["bm jjazttiinyvoftgb" "mbay jazttiinyvoftgbjay"]
Test Case: 365 | Input/Output: ["vbur kcxl fvaylkgaf" "burvay cxlkay vaylkgaffay"]
Test Case: 366 | Input/Output: ["efeyhq ogqhr ub tab" "efeyhqay ogqhray ubay abtay"]
Test Case: 367 | Input/Output: ["sbetzexmecvwtcp u a" "betzexmecvwtcpsay uay aay"]
Test Case: 368 | Input/Output: ["a g w cl yzsbfbzl u" "aay gay way lcay zsbfbzlyay uay"]
Test Case: 369 | Input/Output: ["sx aaanff f ihrvene" "xsay aaanffay fay ihrveneay"]
Test Case: 370 | Input/Output: ["ae bts bocgrin rgfi" "aeay tsbay ocgrinbay gfiray"]
Test Case: 371 | Input/Output: ["u ueo xkvbwcvunys j" "uay ueoay kvbwcvunysxay jay"]
Test Case: 372 | Input/Output: ["ga os wworwsulqtxor" "agay osay worwsulqtxorway"]
Test Case: 373 | Input/Output: ["e gk bw vszkn tlmrc" "eay kgay wbay szknvay lmrctay"]
Test Case: 374 | Input/Output: ["i ennya dkddni gaqe" "iay ennyaay kddniday aqegay"]
Test Case: 375 | Input/Output: ["deqgpcudgts uewoezd" "eqgpcudgtsday uewoezday"]
Test Case: 376 | Input/Output: ["w fr zciv cquw keop" "way rfay civzay quwcay eopkay"]
Test Case: 377 | Input/Output: ["l r htcfugo jlvkyqv" "lay ray tcfugohay lvkyqvjay"]
Test Case: 378 | Input/Output: ["jkx x w tk m sbehvn" "kxjay xay way ktay may behvnsay"]
Test Case: 379 | Input/Output: ["cvgfdg nhmsixuodrbb" "vgfdgcay hmsixuodrbbnay"]
Test Case: 380 | Input/Output: ["r oiydqpcgiqgr nfrs" "ray oiydqpcgiqgray frsnay"]
Test Case: 381 | Input/Output: ["oikkf hx r zkperccf" "oikkfay xhay ray kperccfzay"]
Test Case: 382 | Input/Output: ["qjigtoh tq rr ibecru" "jigtohqay qtay rray ibecruay"]
Test Case: 383 | Input/Output: ["vpewvjmz i crmragnpw" "pewvjmzvay iay rmragnpwcay"]
Test Case: 384 | Input/Output: ["qp fk zprbskyy jzbdm" "pqay kfay prbskyyzay zbdmjay"]
Test Case: 385 | Input/Output: ["zhcrvkk on qulcyg yi" "hcrvkkzay onay ulcygqay iyay"]
Test Case: 386 | Input/Output: ["xqwr c zn qupafqfq r" "qwrxay cay nzay upafqfqqay ray"]
Test Case: 387 | Input/Output: ["bii bsc zcshffna soo" "iibay scbay cshffnazay oosay"]
Test Case: 388 | Input/Output: ["cvfh uko ebtth ddddp" "vfhcay ukoay ebtthay dddpday"]
Test Case: 389 | Input/Output: ["hanwad vnsmvtoeooesd" "anwadhay nsmvtoeooesdvay"]
Test Case: 390 | Input/Output: ["drtmup mmz fj kunqxw" "rtmupday mzmay jfay unqxwkay"]
Test Case: 391 | Input/Output: ["qwhv yzh f j nxhjdka" "whvqay zhyay fay jay xhjdkanay"]
Test Case: 392 | Input/Output: ["vjs yvr ujnwcj efhhr" "jsvay vryay ujnwcjay efhhray"]
Test Case: 393 | Input/Output: ["nnfrip ksp nw j fhjn" "nfripnay spkay wnay jay hjnfay"]
Test Case: 394 | Input/Output: ["nrtj phcr jip cfg fz" "rtjnay hcrpay ipjay fgcay zfay"]
Test Case: 395 | Input/Output: ["ad nzftsxvnnq hvlmrj" "aday zftsxvnnqnay vlmrjhay"]
Test Case: 396 | Input/Output: ["ljfflpbilumjsh kvoer" "jfflpbilumjshlay voerkay"]
Test Case: 397 | Input/Output: ["xsqmdywyo jwisf exdu" "sqmdywyoxay wisfjay exduay"]
Test Case: 398 | Input/Output: ["orlcxuptirznfjmaowpy" "orlcxuptirznfjmaowpyay"]
Test Case: 399 | Input/Output: ["gpptodeoj o ssydrpju" "pptodeojgay oay sydrpjusay"]
Test Case: 400 | Input/Output: ["h qvvnzycmqw hfisqim" "hay vvnzycmqwqay fisqimhay"]
Test Case: 401 | Input/Output: ["anjagtvyfxucp pqgm o" "anjagtvyfxucpay qgmpay oay"]
Test Case: 402 | Input/Output: ["hlr eqtisi ga k ht e" "lrhay eqtisiay agay kay thay eay"]
Test Case: 403 | Input/Output: ["rbb hdddk oezekr yde" "bbray dddkhay oezekray deyay"]
Test Case: 404 | Input/Output: ["l mspew k nrouhol ow" "lay spewmay kay rouholnay oway"]
Test Case: 405 | Input/Output: ["dh hpsm fqlobawcrs z" "hday psmhay qlobawcrsfay zay"]
Test Case: 406 | Input/Output: ["gu m bmzu ofszmz bpo" "ugay may mzubay ofszmzay pobay"]
Test Case: 407 | Input/Output: ["x e h qgtffvi xyllxq" "xay eay hay gtffviqay yllxqxay"]
Test Case: 408 | Input/Output: ["qmpf i pgsgyf mf auf" "mpfqay iay gsgyfpay fmay aufay"]
Test Case: 409 | Input/Output: ["ueatim tahcig nwsxpp" "ueatimay ahcigtay wsxppnay"]
Test Case: 410 | Input/Output: ["vsq jo zukne mtpsbcc" "sqvay ojay uknezay tpsbccmay"]
Test Case: 411 | Input/Output: ["mm shtmsd qvmcb cry p" "mmay htmsdsay vmcbqay rycay pay"]
Test Case: 412 | Input/Output: ["xlj bdbphupeqn kgaryg" "ljxay dbphupeqnbay garygkay"]
Test Case: 413 | Input/Output: ["ggjubxrl x sesfg k es" "gjubxrlgay xay esfgsay kay esay"]
Test Case: 414 | Input/Output: ["u ga lmenak rrixwcbtj" "uay agay menaklay rixwcbtjray"]
Test Case: 415 | Input/Output: ["vbyjcwqyd kiyf unkkyf" "byjcwqydvay iyfkay unkkyfay"]
Test Case: 416 | Input/Output: ["f svhzdr qjjmjsyrbydh" "fay vhzdrsay jjmjsyrbydhqay"]
Test Case: 417 | Input/Output: ["l xz x kolqydegvlroto" "lay zxay xay olqydegvlrotokay"]
Test Case: 418 | Input/Output: ["gvc jstmn t g jgsjdjy" "vcgay stmnjay tay gay gsjdjyjay"]
Test Case: 419 | Input/Output: ["hfakmoh zkxpp voqwhrm" "fakmohhay kxppzay oqwhrmvay"]
Test Case: 420 | Input/Output: ["wpcve c de g hitnzj k" "pcveway cay eday gay itnzjhay kay"]
Test Case: 421 | Input/Output: ["m yqbapmn voegoqfxskw" "may qbapmnyay oegoqfxskwvay"]
Test Case: 422 | Input/Output: ["c sroq d xfstpbsaw lx" "cay roqsay day fstpbsawxay xlay"]
Test Case: 423 | Input/Output: ["t ruxp smb bnuiseqlyu" "tay uxpray mbsay nuiseqlyubay"]
Test Case: 424 | Input/Output: ["i kcsehueashyo zknbfp" "iay csehueashyokay knbfpzay"]
Test Case: 425 | Input/Output: ["spvvb ujeq qi w t z g" "pvvbsay ujeqay iqay way tay zay gay"]
Test Case: 426 | Input/Output: ["cjdqr n kidhz mjhpfvv" "jdqrcay nay idhzkay jhpfvvmay"]
Test Case: 427 | Input/Output: ["gp wcuafsnrd trjv ins" "pgay cuafsnrdway rjvtay insay"]
Test Case: 428 | Input/Output: ["i rdftwrvm hht htxo m" "iay dftwrvmray hthay txohay may"]
Test Case: 429 | Input/Output: ["kavh kv fjyllxgwcpwev" "avhkay vkay jyllxgwcpwevfay"]
Test Case: 430 | Input/Output: ["l gq varkpx byt k ljm" "lay qgay arkpxvay ytbay kay jmlay"]
Test Case: 431 | Input/Output: ["zao b vulakqyeauexusw" "aozay bay ulakqyeauexuswvay"]
Test Case: 432 | Input/Output: ["cf hvvakfoweqcwquygwo" "fcay vvakfoweqcwquygwohay"]
Test Case: 433 | Input/Output: ["cqhoffrgmkdb gfiy wjj" "qhoffrgmkdbcay fiygay jjway"]
Test Case: 434 | Input/Output: ["fhkhumtuqsjxxkifzfiea" "hkhumtuqsjxxkifzfieafay"]
Test Case: 435 | Input/Output: ["xfa f bjwujdwkqp jd j" "faxay fay jwujdwkqpbay djay jay"]
Test Case: 436 | Input/Output: ["vvefbts p yjsqy n qlp" "vefbtsvay pay jsqyyay nay lpqay"]
Test Case: 437 | Input/Output: ["nhzucjwvmhb gcexvqrg y" "hzucjwvmhbnay cexvqrggay yay"]
Test Case: 438 | Input/Output: ["vq hfabbykqlhhx erlbje" "qvay fabbykqlhhxhay erlbjeay"]
Test Case: 439 | Input/Output: ["dq mbcbnvdb cthiwrradv" "qday bcbnvdbmay thiwrradvcay"]
Test Case: 440 | Input/Output: ["jxo n swexhedl tw i pd" "xojay nay wexhedlsay wtay iay dpay"]
Test Case: 441 | Input/Output: ["vewjexd tzrizwh cqu pc" "ewjexdvay zrizwhtay qucay cpay"]
Test Case: 442 | Input/Output: ["n nnqmy mlr bwobtv t n" "nay nqmynay lrmay wobtvbay tay nay"]
Test Case: 443 | Input/Output: ["htozk ss vsnhfqqe xcxw" "tozkhay ssay snhfqqevay cxwxay"]
Test Case: 444 | Input/Output: ["dw o wmpmgtqtdyqvq klt" "wday oay mpmgtqtdyqvqway ltkay"]
Test Case: 445 | Input/Output: ["rav bzp cnpvkarfpuzwnc" "avray zpbay npvkarfpuzwnccay"]
Test Case: 446 | Input/Output: ["bhs nlznkfnxg zj duz q" "hsbay lznkfnxgnay jzay uzday qay"]
Test Case: 447 | Input/Output: ["humpy wxk iozyikxoc ur" "umpyhay xkway iozyikxocay uray"]
Test Case: 448 | Input/Output: ["svggiev xpv jhedxc z z" "vggievsay pvxay hedxcjay zay zay"]
Test Case: 449 | Input/Output: ["rq aquv hnic pfn x yis" "qray aquvay nichay fnpay xay isyay"]
Test Case: 450 | Input/Output: ["tb woebizu q vry g wbz" "btay oebizuway qay ryvay gay bzway"]
Test Case: 451 | Input/Output: ["mk gtylfnasstx pjtahse" "kmay tylfnasstxgay jtahsepay"]
Test Case: 452 | Input/Output: ["evs x dwyeunchrstalrpi" "evsay xay wyeunchrstalrpiday"]
Test Case: 453 | Input/Output: ["pwjt qw kz lsferp ft y" "wjtpay wqay zkay sferplay tfay yay"]
Test Case: 454 | Input/Output: ["ewx e xkl rjpdimm tynx" "ewxay eay klxay jpdimmray ynxtay"]
Test Case: 455 | Input/Output: ["mdkuwvep o dtyzlw rcoe" "dkuwvepmay oay tyzlwday coeray"]
Test Case: 456 | Input/Output: ["y puvntefcuvcwqux almtz" "yay uvntefcuvcwquxpay almtzay"]
Test Case: 457 | Input/Output: ["lu ncjou etem sadung ov" "ulay cjounay etemay adungsay ovay"]
Test Case: 458 | Input/Output: ["b n ggvalp vgthlrpndurh" "bay nay gvalpgay gthlrpndurhvay"]
Test Case: 459 | Input/Output: ["zu ss sz iz c yv kbk fn" "uzay ssay zsay izay cay vyay bkkay nfay"]
Test Case: 460 | Input/Output: ["gkjp vk zyu ahh bw yste" "kjpgay kvay yuzay ahhay wbay steyay"]
Test Case: 461 | Input/Output: ["m grt dqegdgymez uu nsc" "may rtgay qegdgymezday uuay scnay"]
Test Case: 462 | Input/Output: ["emjaiuexpi fztdczacsu l" "emjaiuexpiay ztdczacsufay lay"]
Test Case: 463 | Input/Output: ["eebcbqc ywfdxr hkdohomk" "eebcbqcay wfdxryay kdohomkhay"]
Test Case: 464 | Input/Output: ["f m vawdczjfm vzo jhixv" "fay may awdczjfmvay zovay hixvjay"]
Test Case: 465 | Input/Output: ["gt hn vlbij yhaqvg zyxk" "tgay nhay lbijvay haqvgyay yxkzay"]
Test Case: 466 | Input/Output: ["f nhd vaznvjcfjevkv h h" "fay hdnay aznvjcfjevkvvay hay hay"]
Test Case: 467 | Input/Output: ["btu di rotggdhe qubeknz" "tubay iday otggdheray ubeknzqay"]
Test Case: 468 | Input/Output: ["w jtwlr o c a mmgpgqk n" "way twlrjay oay cay aay mgpgqkmay nay"]
Test Case: 469 | Input/Output: ["cdn lbi c oqgf zdtobzcj" "dncay bilay cay oqgfay dtobzcjzay"]
Test Case: 470 | Input/Output: ["coz wur v hfemajwnxjgli" "ozcay urway vay femajwnxjglihay"]
Test Case: 471 | Input/Output: ["t ye vfpd wfpf fgqtkb t" "tay eyay fpdvay fpfway gqtkbfay tay"]
Test Case: 472 | Input/Output: ["k ivmul shr ecytoyahggu" "kay ivmulay hrsay ecytoyahgguay"]
Test Case: 473 | Input/Output: ["fnal plcm owlbbxrgog mz" "nalfay lcmpay owlbbxrgogay zmay"]
Test Case: 474 | Input/Output: ["xbeu ybkk kunqrxzfl bss" "beuxay bkkyay unqrxzflkay ssbay"]
Test Case: 475 | Input/Output: ["h ld ywltujj lf wekovtsh" "hay dlay wltujjyay flay ekovtshway"]
Test Case: 476 | Input/Output: ["cmaq gcwotw q ctabth f c" "maqcay cwotwgay qay tabthcay fay cay"]
Test Case: 477 | Input/Output: ["dxibnfnew dl ghtvvofgufi" "xibnfnewday lday htvvofgufigay"]
Test Case: 478 | Input/Output: ["e lgez dh zpnnbrbp n s p" "eay gezlay hday pnnbrbpzay nay say pay"]
Test Case: 479 | Input/Output: ["ollugcyfqmgnufqupthfpm j" "ollugcyfqmgnufqupthfpmay jay"]
Test Case: 480 | Input/Output: ["s frwul pytt ibia jch yj" "say rwulfay yttpay ibiaay chjay jyay"]
Test Case: 481 | Input/Output: ["zs mbnkjzmluyguszuirwppp" "szay bnkjzmluyguszuirwpppmay"]
Test Case: 482 | Input/Output: ["a ebgd s ufdujvxboudcolv" "aay ebgday say ufdujvxboudcolvay"]
Test Case: 483 | Input/Output: ["ntnbajuc x ox hcwrwo lml" "tnbajucnay xay oxay cwrwohay mllay"]
Test Case: 484 | Input/Output: ["giollq tcidmys it v tehi" "iollqgay cidmystay itay vay ehitay"]
Test Case: 485 | Input/Output: ["poqjrzism pisumvpv lmhip" "oqjrzismpay isumvpvpay mhiplay"]
Test Case: 486 | Input/Output: ["b n vxrfsvdbjegmpqzjhv s" "bay nay xrfsvdbjegmpqzjhvvay say"]
Test Case: 487 | Input/Output: ["bje fcdak jmijosrg vdtdy" "jebay cdakfay mijosrgjay dtdyvay"]
Test Case: 488 | Input/Output: ["ns yg vpknzp c b hgttfis" "snay gyay pknzpvay cay bay gttfishay"]
Test Case: 489 | Input/Output: ["f jqlahvf tig rah gz uxg" "fay qlahvfjay igtay ahray zgay uxgay"]
Test Case: 490 | Input/Output: ["aerikx snl ry ujlspczd b" "aerikxay nlsay yray ujlspczday bay"]
Test Case: 491 | Input/Output: ["r fs ss pi nyavobdlze vc" "ray sfay ssay ipay yavobdlzenay cvay"]
Test Case: 492 | Input/Output: ["lu av eeyjbz h yaamxvwoc" "ulay avay eeyjbzay hay aamxvwocyay"]
Test Case: 493 | Input/Output: ["pzbf dich agvhr pvr qhog" "zbfpay ichday agvhray vrpay hogqay"]
Test Case: 494 | Input/Output: ["h yuc o bvz tgqwmg zs bm" "hay ucyay oay vzbay gqwmgtay szay mbay"]
Test Case: 495 | Input/Output: ["ckl zyiv ue xqpgr ftos b" "klcay yivzay ueay qpgrxay tosfay bay"]
Test Case: 496 | Input/Output: ["qgsyepqfyvbjay rv x bbip" "gsyepqfyvbjayqay vray xay bipbay"]
Test Case: 497 | Input/Output: ["j gt gwx amsqkjj e zu ya" "jay tgay wxgay amsqkjjay eay uzay ayay"]
Test Case: 498 | Input/Output: ["rfqqxrzuku bes yo fgolbd" "fqqxrzukuray esbay oyay golbdfay"]
Test Case: 499 | Input/Output: ["n voin yyg t mo a h ehkm" "nay oinvay ygyay tay omay aay hay ehkmay"]
Test Case: 500 | Input/Output: ["kjuobegh u wzdgrz jj yfi" "juobeghkay uay zdgrzway jjay fiyay"]
Test Case: 501 | Input/Output: ["pec pmbbxzzqpedpo bimsgor" "ecpay mbbxzzqpedpopay imsgorbay"]
Test Case: 502 | Input/Output: ["ocvba nhyhs cp ll l d tsf" "ocvbaay hyhsnay pcay llay lay day sftay"]
Test Case: 503 | Input/Output: ["sbe ugrols jivmdvxvjv qfn" "besay ugrolsay ivmdvxvjvjay fnqay"]
Test Case: 504 | Input/Output: ["w vysrmbg kbv iu a ggw uc" "way ysrmbgvay bvkay iuay aay gwgay ucay"]
Test Case: 505 | Input/Output: ["cv bxnferbdas loermlzj hd" "vcay xnferbdasbay oermlzjlay dhay"]
Test Case: 506 | Input/Output: ["iyq r lfr h trtf iq nhoba" "iyqay ray frlay hay rtftay iqay hobanay"]
Test Case: 507 | Input/Output: ["kb t j o mlm abpyvwz aiyx" "bkay tay jay oay lmmay abpyvwzay aiyxay"]
Test Case: 508 | Input/Output: ["nopzulzoka snzdli dugutcz" "opzulzokanay nzdlisay ugutczday"]
Test Case: 509 | Input/Output: ["wfzy r qkiyjc qepywnoabrw" "fzyway ray kiyjcqay epywnoabrwqay"]
Test Case: 510 | Input/Output: ["sg pxnhi ki o v wdggiaamj" "gsay xnhipay ikay oay vay dggiaamjway"]
Test Case: 511 | Input/Output: ["puos f etyk nqpiauiihrknt" "uospay fay etykay qpiauiihrkntnay"]
Test Case: 512 | Input/Output: ["xjzdara apclzywurayguh oj" "jzdaraxay apclzywurayguhay ojay"]
Test Case: 513 | Input/Output: ["nppztg fegdvcvi f jipjcjy" "ppztgnay egdvcvifay fay ipjcjyjay"]
Test Case: 514 | Input/Output: ["tc sf pzacmu lteu uloarpf" "ctay fsay zacmupay teulay uloarpfay"]
Test Case: 515 | Input/Output: ["hiprruuene znhh em lvqfnz" "iprruuenehay nhhzay emay vqfnzlay"]
Test Case: 516 | Input/Output: ["wb rm ahmasf stalo oucl p" "bway mray ahmasfay talosay ouclay pay"]
Test Case: 517 | Input/Output: ["bvfkkkeguofgze o dkh plsv" "vfkkkeguofgzebay oay khday lsvpay"]
Test Case: 518 | Input/Output: ["pm j vrvndzbhd qrwfhjy br" "mpay jay rvndzbhdvay rwfhjyqay rbay"]
Test Case: 519 | Input/Output: ["wcijyqgbeixfgab ujrk v en" "cijyqgbeixfgabway ujrkay vay enay"]
Test Case: 520 | Input/Output: ["w osi w pvbznng ioix dpgy" "way osiay way vbznngpay ioixay pgyday"]
Test Case: 521 | Input/Output: ["kfyyeohlkwbds u kcjgdcnkz" "fyyeohlkwbdskay uay cjgdcnkzkay"]
Test Case: 522 | Input/Output: ["vzfsph ogmvuqzyzsb nb xbwy" "zfsphvay ogmvuqzyzsbay bnay bwyxay"]
Test Case: 523 | Input/Output: ["g lpv azs nx fbvweux lclpd" "gay pvlay azsay xnay bvweuxfay clpdlay"]
Test Case: 524 | Input/Output: ["czhcxhdav hulnprikv kmsfvc" "zhcxhdavcay ulnprikvhay msfvckay"]
Test Case: 525 | Input/Output: ["lilrf kg ufsh om llqgffnas" "ilrflay gkay ufshay omay lqgffnaslay"]
Test Case: 526 | Input/Output: ["norihrs dhu zu keldh a aaz" "orihrsnay huday uzay eldhkay aay aazay"]
Test Case: 527 | Input/Output: ["arnl il kyfl j xepwbafrpto" "arnlay ilay yflkay jay epwbafrptoxay"]
Test Case: 528 | Input/Output: ["yghlino enaao mppvbwzm uda" "ghlinoyay enaaoay ppvbwzmmay udaay"]
Test Case: 529 | Input/Output: ["amqtujlnuwg dob bije nyqgo" "amqtujlnuwgay obday ijebay yqgonay"]
Test Case: 530 | Input/Output: ["iv u fetya x lgkdcla c pve" "ivay uay etyafay xay gkdclalay cay vepay"]
Test Case: 531 | Input/Output: ["mm vcuwwskadh fvjpsvavmcrg" "mmay cuwwskadhvay vjpsvavmcrgfay"]
Test Case: 532 | Input/Output: ["t h xilwdqouuv htxsdudwg u" "tay hay ilwdqouuvxay txsdudwghay uay"]
Test Case: 533 | Input/Output: ["my idpptuece le f qdiqefct" "ymay idpptueceay elay fay diqefctqay"]
Test Case: 534 | Input/Output: ["qhdx fnpg hlofcgrfiyu xykt" "hdxqay npgfay lofcgrfiyuhay yktxay"]
Test Case: 535 | Input/Output: ["ufxinno js s ab y szzk p n" "ufxinnoay sjay say abay yay zzksay pay nay"]
Test Case: 536 | Input/Output: ["gtduqyytihzb lipp ipgfgzoa" "tduqyytihzbgay ipplay ipgfgzoaay"]
Test Case: 537 | Input/Output: ["kgtpdiphfv b r uuic yaa qn" "gtpdiphfvkay bay ray uuicay aayay nqay"]
Test Case: 538 | Input/Output: ["r zmjtcyde z oytmo aqgnsvi" "ray mjtcydezay zay oytmoay aqgnsviay"]
Test Case: 539 | Input/Output: ["iz ocdjbilrwuoevpkkggjqd u" "izay ocdjbilrwuoevpkkggjqday uay"]
Test Case: 540 | Input/Output: ["fujunmvnnhud nbljagjghuksg" "ujunmvnnhudfay bljagjghuksgnay"]
Test Case: 541 | Input/Output: ["uhoaxyy ozlfiyssfuclgjdfiw" "uhoaxyyay ozlfiyssfuclgjdfiway"]
Test Case: 542 | Input/Output: ["zseyyeehhjzznwqcijeasfwbiy" "seyyeehhjzznwqcijeasfwbiyzay"]
Test Case: 543 | Input/Output: ["ibihzssuon siupnritfo ruebg" "ibihzssuonay iupnritfosay uebgray"]
Test Case: 544 | Input/Output: ["vyyer zqaqsz jzueny cepoept" "yyervay qaqszzay zuenyjay epoeptcay"]
Test Case: 545 | Input/Output: ["z bvjxv reyvekoil ofzqjgwfg" "zay vjxvbay eyvekoilray ofzqjgwfgay"]
Test Case: 546 | Input/Output: ["el l puqjohbhzpb fz dlisuum" "elay lay uqjohbhzpbpay zfay lisuumday"]
Test Case: 547 | Input/Output: ["wsq by vnii v sgep iaqtn ow" "sqway ybay niivay vay gepsay iaqtnay oway"]
Test Case: 548 | Input/Output: ["uo hrr yoagvrxtpfehxfihuqhc" "uoay rrhay oagvrxtpfehxfihuqhcyay"]
Test Case: 549 | Input/Output: ["bkbvkgjv hloiumt fdvgfg hhv" "kbvkgjvbay loiumthay dvgfgfay hvhay"]
Test Case: 550 | Input/Output: ["blgm ppkrproylt lfmklynh eo" "lgmbay pkrproyltpay fmklynhlay eoay"]
Test Case: 551 | Input/Output: ["kx nclmiz uhwqvbc tpghmwiph" "xkay clmiznay uhwqvbcay pghmwiphtay"]
Test Case: 552 | Input/Output: ["b obl lz tovn pdw mcv yxr a" "bay oblay zlay ovntay dwpay cvmay xryay aay"]
Test Case: 553 | Input/Output: ["tyuau osntafyrt ygo ztjjxhq" "yuautay osntafyrtay goyay tjjxhqzay"]
Test Case: 554 | Input/Output: ["lzmihgl b mvr fyuveghicykqp" "zmihgllay bay vrmay yuveghicykqpfay"]
Test Case: 555 | Input/Output: ["wykbw rdcsyg hublizkm ezexx" "ykbwway dcsygray ublizkmhay ezexxay"]
Test Case: 556 | Input/Output: ["fo rjrlammhqwwjjpxr vq gs i" "ofay jrlammhqwwjjpxrray qvay sgay iay"]
Test Case: 557 | Input/Output: ["dgyixb b on ztdukzfvwkkl uk" "gyixbday bay onay tdukzfvwkklzay ukay"]
Test Case: 558 | Input/Output: ["ic xwrydoyg t y wzfunf v ma" "icay wrydoygxay tay yay zfunfway vay amay"]
Test Case: 559 | Input/Output: ["nutdrn ocxcv ki uc k kwwf n" "utdrnnay ocxcvay ikay ucay kay wwfkay nay"]
Test Case: 560 | Input/Output: ["aqxyegtf shtcoutv j rwitvcm" "aqxyegtfay htcoutvsay jay witvcmray"]
Test Case: 561 | Input/Output: ["zs rudvym s yrnsopr xazikxj" "szay udvymray say rnsopryay azikxjxay"]
Test Case: 562 | Input/Output: ["vwxq foloiv i vbgpjwz cfoez" "wxqvay oloivfay iay bgpjwzvay foezcay"]
Test Case: 563 | Input/Output: ["ryhsoxbe qckrtxylnszbilpads" "yhsoxberay ckrtxylnszbilpadsqay"]
Test Case: 564 | Input/Output: ["gbapxhh koxraukfq j qgkif k" "bapxhhgay oxraukfqkay jay gkifqay kay"]
Test Case: 565 | Input/Output: ["qidqoc bih iy ccbzkd kpfqey" "idqocqay ihbay iyay cbzkdcay pfqeykay"]
Test Case: 566 | Input/Output: ["p sqnjoh fkighpqyfq bqex ry" "pay qnjohsay kighpqyfqfay qexbay yray"]
Test Case: 567 | Input/Output: ["yfvz ckpxj ibrdmwidjd d djrw" "fvzyay kpxjcay ibrdmwidjday day jrwday"]
Test Case: 568 | Input/Output: ["klwaqsfyemrjlmw wox i g adks" "lwaqsfyemrjlmwkay oxway iay gay adksay"]
Test Case: 569 | Input/Output: ["qik b cccjorx uhaqroreml k e" "ikqay bay ccjorxcay uhaqroremlay kay eay"]
Test Case: 570 | Input/Output: ["doswtpanl tc c wsv rbjklf mx" "oswtpanlday ctay cay svway bjklfray xmay"]
Test Case: 571 | Input/Output: ["hsrg a tgesom wzlwh z k imvu" "srghay aay gesomtay zlwhway zay kay imvuay"]
Test Case: 572 | Input/Output: ["smibst rfaglkazgyaho if giji" "mibstsay faglkazgyahoray ifay ijigay"]
Test Case: 573 | Input/Output: ["ep sr uh d spqjlwbfwyln sfmq" "epay rsay uhay day pqjlwbfwylnsay fmqsay"]
Test Case: 574 | Input/Output: ["tsdnpd d gv pg kuiab w tnsrh" "sdnpdtay day vgay gpay uiabkay way nsrhtay"]
Test Case: 575 | Input/Output: ["g u f pcpk leirhkldr i xfwxp" "gay uay fay cpkpay eirhkldrlay iay fwxpxay"]
Test Case: 576 | Input/Output: ["rmwpdgw nkcxr cjxuz kntunxib" "mwpdgwray kcxrnay jxuzcay ntunxibkay"]
Test Case: 577 | Input/Output: ["fhtrgfhibptoffasqidzzp d j f" "htrgfhibptoffasqidzzpfay day jay fay"]
Test Case: 578 | Input/Output: ["sib e esy vgi qx zvchdmgmniv" "ibsay eay esyay givay xqay vchdmgmnivzay"]
Test Case: 579 | Input/Output: ["uujvcchojx pncc mz jrnul x w" "uujvcchojxay nccpay zmay rnuljay xay way"]
Test Case: 580 | Input/Output: ["vzefx pl f dpf k yzm rq u kp" "zefxvay lpay fay pfday kay zmyay qray uay pkay"]
Test Case: 581 | Input/Output: ["zdjktqsixo hf pyvhd lswcz qfi" "djktqsixozay fhay yvhdpay swczlay fiqay"]
Test Case: 582 | Input/Output: ["mwqrrubyxqvdahdu muf el xcl h" "wqrrubyxqvdahdumay ufmay elay clxay hay"]
Test Case: 583 | Input/Output: ["j rr xemppmngt mjmvilxpn aqir" "jay rray emppmngtxay jmvilxpnmay aqiray"]
Test Case: 584 | Input/Output: ["uvmckrhrsnmylkuns pvw ttf hrd" "uvmckrhrsnmylkunsay vwpay tftay rdhay"]
Test Case: 585 | Input/Output: ["muc kz nep hrylqcmh f c bd fi" "ucmay zkay epnay rylqcmhhay fay cay dbay ifay"]
Test Case: 586 | Input/Output: ["vh cgg lrjgzta alqxvdbisdi ub" "hvay ggcay rjgztalay alqxvdbisdiay ubay"]
Test Case: 587 | Input/Output: ["gsshgykjkqa qsuzisb a y uk qb" "sshgykjkqagay suzisbqay aay yay ukay bqay"]
Test Case: 588 | Input/Output: ["sgigduuggc e a p p qf n xa hq" "gigduuggcsay eay aay pay pay fqay nay axay qhay"]
Test Case: 589 | Input/Output: ["deotbdfix eugoi kdiut r tgvjk" "eotbdfixday eugoiay diutkay ray gvjktay"]
Test Case: 590 | Input/Output: ["bkhohjynly sutk ygir joa ypej" "khohjynlybay utksay giryay oajay pejyay"]
Test Case: 591 | Input/Output: ["pqsr egfmpss l tzfup maalcd m" "qsrpay egfmpssay lay zfuptay aalcdmay may"]
Test Case: 592 | Input/Output: ["nx czv ka th ttvftwevximf paw" "xnay zvcay akay htay tvftwevximftay awpay"]
Test Case: 593 | Input/Output: ["u qa onrlv wopndq ls f befpeh" "uay aqay onrlvay opndqway slay fay efpehbay"]
Test Case: 594 | Input/Output: ["c dwdkhjezbix oin gwkm twbkdr" "cay wdkhjezbixday oinay wkmgay wbkdrtay"]
Test Case: 595 | Input/Output: ["r lov heekak kuikhxdwcwovb jo" "ray ovlay eekakhay uikhxdwcwovbkay ojay"]
Test Case: 596 | Input/Output: ["ix nihql shdzsfgl a v appastq" "ixay ihqlnay hdzsfglsay aay vay appastqay"]
Test Case: 597 | Input/Output: ["an tnsav l mn sgamjapbbuw glt" "anay nsavtay lay nmay gamjapbbuwsay ltgay"]
Test Case: 598 | Input/Output: ["vow wtcasgtbzxtetd nbdg sp vj" "owvay tcasgtbzxtetdway bdgnay psay jvay"]
Test Case: 599 | Input/Output: ["hpdhepg h xt st xaxc l kdchwp" "pdhepghay hay txay tsay axcxay lay dchwpkay"]
Test Case: 600 | Input/Output: ["uy kiu nigozkdfx iuy ypikagx u" "uyay iukay igozkdfxnay iuyay pikagxyay uay"]
Test Case: 601 | Input/Output: ["npre wzu dqjt zsmyexaac ri zpr" "prenay zuway qjtday smyexaaczay iray przay"]
Test Case: 602 | Input/Output: ["wflaoa gq q gxmpvfhkrdlu dgqsw" "flaoaway qgay qay xmpvfhkrdlugay gqswday"]
Test Case: 603 | Input/Output: ["zqf iljy y ibplvah v lv l kkfv" "qfzay iljyay yay ibplvahay vay vlay lay kfvkay"]
Test Case: 604 | Input/Output: ["oqq e zivwzyeuck yiiat nmxolos" "oqqay eay ivwzyeuckzay iiatyay mxolosnay"]
Test Case: 605 | Input/Output: ["pnn iryj qlczw r yurdgju yg un" "nnpay iryjay lczwqay ray urdgjuyay gyay unay"]
Test Case: 606 | Input/Output: ["kb bvwqmssicd lvpd p odgnp e o" "bkay vwqmssicdbay vpdlay pay odgnpay eay oay"]
Test Case: 607 | Input/Output: ["b mcgpxiu ompxdx mpxw g putf v" "bay cgpxiumay ompxdxay pxwmay gay utfpay vay"]
Test Case: 608 | Input/Output: ["p lqilm xsapmxjwfsk mllmegfamd" "pay qilmlay sapmxjwfskxay llmegfamdmay"]
Test Case: 609 | Input/Output: ["c fghshpbthm pdirct umcn uhnut" "cay ghshpbthmfay dirctpay umcnay uhnutay"]
Test Case: 610 | Input/Output: ["gbo a xd mergrrz zlb srqce ncs" "bogay aay dxay ergrrzmay lbzay rqcesay csnay"]
Test Case: 611 | Input/Output: ["enfdiftr autud ygt ixb eia v e" "enfdiftray autuday gtyay ixbay eiaay vay eay"]
Test Case: 612 | Input/Output: ["uzc ucy tpz ku r re wbxoavuktd" "uzcay ucyay pztay ukay ray eray bxoavuktdway"]
Test Case: 613 | Input/Output: ["uimbuykn z jongaj nipomrlchwgf" "uimbuyknay zay ongajjay ipomrlchwgfnay"]
Test Case: 614 | Input/Output: ["uhnjoozhbd tqhbk d amzif yzqmj" "uhnjoozhbday qhbktay day amzifay zqmjyay"]
Test Case: 615 | Input/Output: ["ukvzzzrpwkecl ef myor nv zlq g" "ukvzzzrpwkeclay efay yormay vnay lqzay gay"]
Test Case: 616 | Input/Output: ["ixtfcuf p ullupafwlmxb aqz n f" "ixtfcufay pay ullupafwlmxbay aqzay nay fay"]
Test Case: 617 | Input/Output: ["rpclkn z tr kzcuozcuhv xpyer v" "pclknray zay rtay zcuozcuhvkay pyerxay vay"]
Test Case: 618 | Input/Output: ["gbvsl tav xxxt jreohdvxjtnx xk" "bvslgay avtay xxtxay reohdvxjtnxjay kxay"]
Test Case: 619 | Input/Output: ["jmmpcnhwyakbxcgxaa bjalgwmofld" "mmpcnhwyakbxcgxaajay jalgwmofldbay"]
Test Case: 620 | Input/Output: ["auqhl mbu myc rtk dbimzadryymm" "auqhlay bumay ycmay tkray bimzadryymmday"]
Test Case: 621 | Input/Output: ["gr swu o kau e qlu f mof wf sr" "rgay wusay oay aukay eay luqay fay ofmay fway rsay"]
Test Case: 622 | Input/Output: ["ztk i g d bxfint ktb pg x xzytk" "tkzay iay gay day xfintbay tbkay gpay xay zytkxay"]
Test Case: 623 | Input/Output: ["hdfxbqh asnsjru yt sfs lqwmozxc" "dfxbqhhay asnsjruay tyay fssay qwmozxclay"]
Test Case: 624 | Input/Output: ["q s bib hvibmupmq pqotllkxu irl" "qay say ibbay vibmupmqhay qotllkxupay irlay"]
Test Case: 625 | Input/Output: ["rrhzgm pjkl psqh ogxgkv fpm tcq" "rhzgmray jklpay sqhpay ogxgkvay pmfay cqtay"]
Test Case: 626 | Input/Output: ["m tri db xbnj ot trn jshvhmiwvq" "may ritay bday bnjxay otay rntay shvhmiwvqjay"]
Test Case: 627 | Input/Output: ["vveahog em clbnjnfmjlibbbu tmon" "veahogvay emay lbnjnfmjlibbbucay montay"]
Test Case: 628 | Input/Output: ["vghcnfwyknswqpob ayr e yles jwq" "ghcnfwyknswqpobvay ayray eay lesyay wqjay"]
Test Case: 629 | Input/Output: ["lfosbefa xqzvpwubnepsxond gpgzk" "fosbefalay qzvpwubnepsxondxay pgzkgay"]
Test Case: 630 | Input/Output: ["yd rv n uh pv afo s brxq ef k h" "dyay vray nay uhay vpay afoay say rxqbay efay kay hay"]
Test Case: 631 | Input/Output: ["bqzy dlrmsaocpefiocmald x nk dv" "qzybay lrmsaocpefiocmaldday xay knay vday"]
Test Case: 632 | Input/Output: ["t gaaplov fdbh caadsclgapm edbp" "tay aaplovgay dbhfay aadsclgapmcay edbpay"]
Test Case: 633 | Input/Output: ["rjfpjy a eygzktr jan mnaunb cph" "jfpjyray aay eygzktray anjay naunbmay phcay"]
Test Case: 634 | Input/Output: ["rfmlkudcmqr ednxvlvivtxxdzz bmf" "fmlkudcmqrray ednxvlvivtxxdzzay mfbay"]
Test Case: 635 | Input/Output: ["smduawljpu j fnkkyt xhx wemjkug" "mduawljpusay jay nkkytfay hxxay emjkugway"]
Test Case: 636 | Input/Output: ["byaybqc b cm xrnq ysiyio ej zgf" "yaybqcbay bay mcay rnqxay siyioyay ejay gfzay"]
Test Case: 637 | Input/Output: ["mc o s mgwr gbbyl ab fuhaioujzm" "cmay oay say gwrmay bbylgay abay uhaioujzmfay"]
Test Case: 638 | Input/Output: ["o dz nr zl iovljlw fwtedoa ig v" "oay zday rnay lzay iovljlway wtedoafay igay vay"]
Test Case: 639 | Input/Output: ["epv n uxv uo atvxlqg d gnulbnxs" "epvay nay uxvay uoay atvxlqgay day nulbnxsgay"]
Test Case: 640 | Input/Output: ["qzda d ubvd k vi k bcmc ua ntbn" "zdaqay day ubvday kay ivay kay cmcbay uaay tbnnay"]
Test Case: 641 | Input/Output: ["jev xicksk fqgmemsetyu p fhuymk" "evjay ickskxay qgmemsetyufay pay huymkfay"]
Test Case: 642 | Input/Output: ["zfusz n ks stlohpob f fmu dtfhx" "fuszzay nay skay tlohpobsay fay mufay tfhxday"]
Test Case: 643 | Input/Output: ["vyp g r wi owzptwg oiwz ifkwf m" "ypvay gay ray iway owzptwgay oiwzay ifkwfay may"]
Test Case: 644 | Input/Output: ["zlaa sshh q zzwtlqkjh rsx pr jx" "laazay shhsay qay zwtlqkjhzay sxray rpay xjay"]
Test Case: 645 | Input/Output: ["hce ovibxhpoojtg be xa r oftfsu" "cehay ovibxhpoojtgay ebay axay ray oftfsuay"]
Test Case: 646 | Input/Output: ["dnrffi pzsd n cxrre krodllw kafj" "nrffiday zsdpay nay xrrecay rodllwkay afjkay"]
Test Case: 647 | Input/Output: ["wgwkre o k qmhc kcbpnhnic xb o d" "gwkreway oay kay mhcqay cbpnhnickay bxay oay day"]
Test Case: 648 | Input/Output: ["fvgp gn ndhxxm rdrvirvg zqfiywqm" "vgpfay ngay dhxxmnay drvirvgray qfiywqmzay"]
Test Case: 649 | Input/Output: ["gyo raahritahl s aewn rxpetfl xe" "yogay aahritahlray say aewnay xpetflray exay"]
Test Case: 650 | Input/Output: ["qkoxdnmnkjt hysogmvb obh ubtttmk" "koxdnmnkjtqay ysogmvbhay obhay ubtttmkay"]
Test Case: 651 | Input/Output: ["vbj bnrrttcxoz n oglxow nduhlihw" "bjvay nrrttcxozbay nay oglxoway duhlihwnay"]
Test Case: 652 | Input/Output: ["l hplqyouagerys txn rtcoxavu rmu" "lay plqyouageryshay xntay tcoxavuray muray"]
Test Case: 653 | Input/Output: ["g rcfuvh zdgssqv awfeduy ognguxp" "gay cfuvhray dgssqvzay awfeduyay ognguxpay"]
Test Case: 654 | Input/Output: ["o j gwyhsh wrtelhj ncwvczwpg eve" "oay jay wyhshgay rtelhjway cwvczwpgnay eveay"]
Test Case: 655 | Input/Output: ["mmdlujklinawiqcddvx gjinpcihmdbw" "mdlujklinawiqcddvxmay jinpcihmdbwgay"]
Test Case: 656 | Input/Output: ["fhjaf lp c hl bij wrzllm rtvofrp" "hjaffay play cay lhay ijbay rzllmway tvofrpray"]
Test Case: 657 | Input/Output: ["djxooxsdsrx g ah ljt um bbmaej p" "jxooxsdsrxday gay ahay jtlay umay bmaejbay pay"]
Test Case: 658 | Input/Output: ["zgtl mh ircpr zluaeot ayaof vdxx" "gtlzay hmay ircpray luaeotzay ayaofay dxxvay"]
Test Case: 659 | Input/Output: ["q n r nrjqeenx gead lwqwdkesxwek" "qay nay ray rjqeenxnay eadgay wqwdkesxweklay"]
Test Case: 660 | Input/Output: ["uaoz j g qk d i hvuf easvnnsuqxm" "uaozay jay gay kqay day iay vufhay easvnnsuqxmay"]
Test Case: 661 | Input/Output: ["fpycrmepzo mzfq b gr xqzulwhi nt" "pycrmepzofay zfqmay bay rgay qzulwhixay tnay"]
Test Case: 662 | Input/Output: ["stexm soivghf sqis f n rtoraolos" "texmsay oivghfsay qissay fay nay toraolosray"]
Test Case: 663 | Input/Output: ["m xkj itqouvjaugkv rbaesd zacvmh" "may kjxay itqouvjaugkvay baesdray acvmhzay"]
Test Case: 664 | Input/Output: ["x jr hckoc sszvifmyralcgvgiknoci" "xay rjay ckochay szvifmyralcgvgiknocisay"]
Test Case: 665 | Input/Output: ["sm xflz hhuuvjilq xpv fnew drkqe" "msay flzxay huuvjilqhay pvxay newfay rkqeday"]
Test Case: 666 | Input/Output: ["qi nfuy xgnkibzyqefoninbjurjwnka" "iqay fuynay gnkibzyqefoninbjurjwnkaxay"]
Test Case: 667 | Input/Output: ["vsgd vk yu jlf a qm hbuwxpvjwr n" "sgdvay kvay uyay lfjay aay mqay buwxpvjwrhay nay"]
Test Case: 668 | Input/Output: ["xrcsc ajdu mcs gnye ib qxzkk pmj" "rcscxay ajduay csmay nyegay ibay xzkkqay mjpay"]
Test Case: 669 | Input/Output: ["t adkb goi jf ei xiarhglpreeqybj" "tay adkbay oigay fjay eiay iarhglpreeqybjxay"]
Test Case: 670 | Input/Output: ["wz xfjwnd ykqyr k tgks qmpqd nlp" "zway fjwndxay kqyryay kay gkstay mpqdqay lpnay"]
Test Case: 671 | Input/Output: ["my pijhzga ndwxba fjko ku t zope" "ymay ijhzgapay dwxbanay jkofay ukay tay opezay"]
Test Case: 672 | Input/Output: ["zy wojb l lq b elegjajmh lzdfjbn" "yzay ojbway lay qlay bay elegjajmhay zdfjbnlay"]
Test Case: 673 | Input/Output: ["kfua fg qqxtbld d w qcjj a ekbmb" "fuakay gfay qxtbldqay day way cjjqay aay ekbmbay"]
Test Case: 674 | Input/Output: ["dmdayefsdkn rm g kr ppo dn oeogvz" "mdayefsdknday mray gay rkay popay nday oeogvzay"]
Test Case: 675 | Input/Output: ["je jsunmgmuzp l xtsijq szl vt e u" "ejay sunmgmuzpjay lay tsijqxay zlsay tvay eay uay"]
Test Case: 676 | Input/Output: ["kqu mibeulw zwsjtkkn xd cfjlh m y" "qukay ibeulwmay wsjtkknzay dxay fjlhcay may yay"]
Test Case: 677 | Input/Output: ["sbbcg vw zye n j aurpk ktzeznvdnm" "bbcgsay wvay yezay nay jay aurpkay tzeznvdnmkay"]
Test Case: 678 | Input/Output: ["augdvyhrng idqw ikba unfqewj jawl" "augdvyhrngay idqway ikbaay unfqewjay awljay"]
Test Case: 679 | Input/Output: ["syvdzqgffcsvrkitwdtogprxvfz z mvp" "yvdzqgffcsvrkitwdtogprxvfzsay zay vpmay"]
Test Case: 680 | Input/Output: ["bmr n rj zlxwqse zmbwjh r ngmwrau" "mrbay nay jray lxwqsezay mbwjhzay ray gmwraunay"]
Test Case: 681 | Input/Output: ["icc bc sowygx ajncq ful prbjqljpk" "iccay cbay owygxsay ajncqay ulfay rbjqljpkpay"]
Test Case: 682 | Input/Output: ["o swobrljjc j glwyznekhy h ubeqhj" "oay wobrljjcsay jay lwyznekhygay hay ubeqhjay"]
Test Case: 683 | Input/Output: ["z z g xmbiibkuqlu zumzz xsrtj rem" "zay zay gay mbiibkuqluxay umzzzay srtjxay emray"]
Test Case: 684 | Input/Output: ["qoeqymcqydrulwgebrfaefmtld fv afa" "oeqymcqydrulwgebrfaefmtldqay vfay afaay"]
Test Case: 685 | Input/Output: ["ic bfxjrmk y hydlaidpmcovyflyaznd" "icay fxjrmkbay yay ydlaidpmcovyflyazndhay"]
Test Case: 686 | Input/Output: ["uqbyvuurzjxu pgwgxrkqqs ctbyuyu n" "uqbyvuurzjxuay gwgxrkqqspay tbyuyucay nay"]
Test Case: 687 | Input/Output: ["oi wr jdfsegdamnztpcfuoqq puz k b" "oiay rway dfsegdamnztpcfuoqqjay uzpay kay bay"]
Test Case: 688 | Input/Output: ["mugtkvfwaedr hrjdw bok rvm bg wwg" "ugtkvfwaedrmay rjdwhay okbay vmray gbay wgway"]
Test Case: 689 | Input/Output: ["t bicbz bwzv myu skiuoc zlzfnb wp" "tay icbzbay wzvbay yumay kiuocsay lzfnbzay pway"]
Test Case: 690 | Input/Output: ["p ecngfy dsehbjqniej cvg uiqi b sj" "pay ecngfyay sehbjqniejday vgcay uiqiay bay jsay"]
Test Case: 691 | Input/Output: ["tyckb humxlj dw rtnu buybmsv ty id" "yckbtay umxljhay wday tnuray uybmsvbay ytay iday"]
Test Case: 692 | Input/Output: ["a e sqiwczrj txkhp liiv a hm botoo" "aay eay qiwczrjsay xkhptay iivlay aay mhay otoobay"]
Test Case: 693 | Input/Output: ["gtnzfk nri w jfezm jdv ultpzu mney" "tnzfkgay rinay way fezmjay dvjay ultpzuay neymay"]
Test Case: 694 | Input/Output: ["lbpcjs qki ebxnkyfx slbdpztht g gf" "bpcjslay kiqay ebxnkyfxay lbdpzthtsay gay fgay"]
Test Case: 695 | Input/Output: ["wrzyo or o aluey n v tamiujh lutin" "rzyoway oray oay alueyay nay vay amiujhtay utinlay"]
Test Case: 696 | Input/Output: ["pgp oqyf dsxiesg jhik tm ev wefrno" "gppay oqyfay sxiesgday hikjay mtay evay efrnoway"]
Test Case: 697 | Input/Output: ["ehp htcjfr u yq jtfxclnckgorl xwlz" "ehpay tcjfrhay uay qyay tfxclnckgorljay wlzxay"]
Test Case: 698 | Input/Output: ["rwzwnd gdzx rc cofgiuegodl umze qf" "wzwndray dzxgay cray ofgiuegodlcay umzeay fqay"]
Test Case: 699 | Input/Output: ["fijfr jziis trk tr yrkplobqd jhtgm" "ijfrfay ziisjay rktay rtay rkplobqdyay htgmjay"]
Test Case: 700 | Input/Output: ["ym rk mkynm qrnl mc afujj acvcezmo" "myay kray kynmmay rnlqay cmay afujjay acvcezmoay"]
Test Case: 701 | Input/Output: ["iohyzhwhhbyknkzskwdin oknz lu u xr" "iohyzhwhhbyknkzskwdinay oknzay ulay uay rxay"]
Test Case: 702 | Input/Output: ["hx xeh kb j ujnpq wbfkwvubnl l fqp" "xhay ehxay bkay jay ujnpqay bfkwvubnlway lay qpfay"]
Test Case: 703 | Input/Output: ["r zgetsgu jjseq jsxyflh zcka bmh b" "ray getsguzay jseqjay sxyflhjay ckazay mhbay bay"]
Test Case: 704 | Input/Output: ["hjyomsz bab a ud i mnkgwwfyu nv py" "jyomszhay abbay aay uday iay nkgwwfyumay vnay ypay"]
Test Case: 705 | Input/Output: ["mfs tc wsk u n vn mvlljzz ht lmyak" "fsmay ctay skway uay nay nvay vlljzzmay thay myaklay"]
Test Case: 706 | Input/Output: ["ohvhosfsrhai fmw ffphy snllr v cqd" "ohvhosfsrhaiay mwfay fphyfay nllrsay vay qdcay"]
Test Case: 707 | Input/Output: ["aqa gzs cfp dk z qyvk vxexsz zmmdp" "aqaay zsgay fpcay kday zay yvkqay xexszvay mmdpzay"]
Test Case: 708 | Input/Output: ["dz lwdqgu audpormmupevs ezrgdclu u" "zday wdqgulay audpormmupevsay ezrgdcluay uay"]
Test Case: 709 | Input/Output: ["ezktbiswkcj xdnmor tckfovl pxgwr zy" "ezktbiswkcjay dnmorxay ckfovltay xgwrpay yzay"]
Test Case: 710 | Input/Output: ["l tmb vhs o r s svwb cf l gvacbnseq" "lay mbtay hsvay oay ray say vwbsay fcay lay vacbnseqgay"]
Test Case: 711 | Input/Output: ["bvvl ybfsqvdhva g g hx sl oe reyw r" "vvlbay bfsqvdhvayay gay gay xhay lsay oeay eywray ray"]
Test Case: 712 | Input/Output: ["cpspk r hujgx ls buiyzto haeuhtn yv" "pspkcay ray ujgxhay slay uiyztobay aeuhtnhay vyay"]
Test Case: 713 | Input/Output: ["lk j wm etc pgyu ohegrmynffu zm nzr" "klay jay mway etcay gyupay ohegrmynffuay mzay zrnay"]
Test Case: 714 | Input/Output: ["htmywvzob q ut t t bxx u f ehklmp s" "tmywvzobhay qay utay tay tay xxbay uay fay ehklmpay say"]
Test Case: 715 | Input/Output: ["eh so vusadf sxlxb wvbsqkd awdo ara" "ehay osay usadfvay xlxbsay vbsqkdway awdoay araay"]
Test Case: 716 | Input/Output: ["onzl xelmepaw kmyqn dzfeedyc juzeay" "onzlay elmepawxay myqnkay zfeedycday uzeayjay"]
Test Case: 717 | Input/Output: ["qrvhqsm voki pslp gm qzp dugl u nds" "rvhqsmqay okivay slppay mgay zpqay uglday uay dsnay"]
Test Case: 718 | Input/Output: ["w uccdnptyvah lejv sjcrabwoxpljlr y" "way uccdnptyvahay ejvlay jcrabwoxpljlrsay yay"]
Test Case: 719 | Input/Output: ["f hgkeq yygfijus ev y iwan eyuagxgz" "fay gkeqhay ygfijusyay evay yay iwanay eyuagxgzay"]
Test Case: 720 | Input/Output: ["o sj x q e we czxqm ehkcszqemgba gh" "oay jsay xay qay eay eway zxqmcay ehkcszqemgbaay hgay"]
Test Case: 721 | Input/Output: ["nl mkiea xhau lwpjh wkkqyunmwt wpra" "lnay kieamay hauxay wpjhlay kkqyunmwtway praway"]
Test Case: 722 | Input/Output: ["uz z frtjtnwdj xw wzgdqdfds tlsmuai" "uzay zay rtjtnwdjfay wxay zgdqdfdsway lsmuaitay"]
Test Case: 723 | Input/Output: ["ruipbrwcc cfs xjteygtdqnqwewn gcuqs" "uipbrwccray fscay jteygtdqnqwewnxay cuqsgay"]
Test Case: 724 | Input/Output: ["xazb e rrg bbz bmei g wyezvm yz icy" "azbxay eay rgray bzbay meibay gay yezvmway zyay icyay"]
Test Case: 725 | Input/Output: ["lpycigwcsgmwsvo f xt tdxha gpn wikb" "pycigwcsgmwsvolay fay txay dxhatay pngay ikbway"]
Test Case: 726 | Input/Output: ["plgk v i rexxojpg lhpc wetss ofuuwd" "lgkpay vay iay exxojpgray hpclay etssway ofuuwday"]
Test Case: 727 | Input/Output: ["ovtp mk mfbt ctcl gwnm cnbhzldd ytu" "ovtpay kmay fbtmay tclcay wnmgay nbhzlddcay tuyay"]
Test Case: 728 | Input/Output: ["fb it sfsiknctok ebsoxyjozoedr tfsz" "bfay itay fsiknctoksay ebsoxyjozoedray fsztay"]
Test Case: 729 | Input/Output: ["se mtfubxqsyzlpevrs khgvzhqovmyyluve" "esay tfubxqsyzlpevrsmay hgvzhqovmyyluvekay"]
Test Case: 730 | Input/Output: ["a t khcsac e n i oabtx glx vquyixebk" "aay tay hcsackay eay nay iay oabtxay lxgay quyixebkvay"]
Test Case: 731 | Input/Output: ["ge hi sdpqikuzdjvynutakme uy y yodjs" "egay ihay dpqikuzdjvynutakmesay uyay yay odjsyay"]
Test Case: 732 | Input/Output: ["iq xtfo zwctax bst dwz gonqzl wrt wq" "iqay tfoxay wctaxzay stbay wzday onqzlgay rtway qway"]
Test Case: 733 | Input/Output: ["w nmzwt nrbieyhhj uutnxkgz yzunz umb" "way mzwtnay rbieyhhjnay uutnxkgzay zunzyay umbay"]
Test Case: 734 | Input/Output: ["lrjqbxxtswf lmiudxczrrbhcg x sowasqt" "rjqbxxtswflay miudxczrrbhcglay xay owasqtsay"]
Test Case: 735 | Input/Output: ["qnzixrqnrsdmfmbcvxzjuf urpw wv wp cm" "nzixrqnrsdmfmbcvxzjufqay urpway vway pway mcay"]
Test Case: 736 | Input/Output: ["mbjjkhfo vm kt hmnh fizs az xvuneghi" "bjjkhfomay mvay tkay mnhhay izsfay azay vuneghixay"]
Test Case: 737 | Input/Output: ["bp al prrvrmph hoae pg pxsiujuy hbbd" "pbay alay rrvrmphpay oaehay gpay xsiujuypay bbdhay"]
Test Case: 738 | Input/Output: ["xiviftnyjyzffcku rgmn c r mgwdlegfex" "iviftnyjyzffckuxay gmnray cay ray gwdlegfexmay"]
Test Case: 739 | Input/Output: ["t ocddjltxaqwgypwlqravioupdpmgzw v j" "tay ocddjltxaqwgypwlqravioupdpmgzway vay jay"]
Test Case: 740 | Input/Output: ["ei yr mm gqc hvtm re mvlp p gowx hup" "eiay ryay mmay qcgay vtmhay eray vlpmay pay owxgay uphay"]
Test Case: 741 | Input/Output: ["m evmgr frnktx wjysqcecsayc j ecejkj" "may evmgray rnktxfay jysqcecsaycway jay ecejkjay"]
Test Case: 742 | Input/Output: ["cf uyu n w wmdd ftgjlxxzcqv eb r hzi" "fcay uyuay nay way mddway tgjlxxzcqvfay ebay ray zihay"]
Test Case: 743 | Input/Output: ["f ghnwysqg d a dopuf ev mudtufy mvmu" "fay hnwysqggay day aay opufday evay udtufymay vmumay"]
Test Case: 744 | Input/Output: ["bhxjayk y wkci qh ulleug lle plj tix" "hxjaykbay yay kciway hqay ulleugay lelay ljpay ixtay"]
Test Case: 745 | Input/Output: ["ev jwh ikazkllas vt gdhdeatv kwc j q" "evay whjay ikazkllasay tvay dhdeatvgay wckay jay qay"]
Test Case: 746 | Input/Output: ["cfkkg zcc wyt wpy saj a qbhypgm zh z" "fkkgcay cczay ytway pyway ajsay aay bhypgmqay hzay zay"]
Test Case: 747 | Input/Output: ["sudqhmiecaw xxnsonsqnmi axsadtpdmifz" "udqhmiecawsay xnsonsqnmixay axsadtpdmifzay"]
Test Case: 748 | Input/Output: ["rkmhk r r v ryelhbgdtp qqjs pfugx dt" "kmhkray ray ray vay yelhbgdtpray qjsqay fugxpay tday"]
Test Case: 749 | Input/Output: ["nkk xi vc ic gj jh txq fgqq i dcja z" "kknay ixay cvay icay jgay hjay xqtay gqqfay iay cjaday zay"]
Test Case: 750 | Input/Output: ["olvluef wcpblinxabyyili l io ut jv a" "olvluefay cpblinxabyyiliway lay ioay utay vjay aay"]
Test Case: 751 | Input/Output: ["copfyc jb wb qwvjh n s lqvxdufndc ga" "opfyccay bjay bway wvjhqay nay say qvxdufndclay agay"]
Test Case: 752 | Input/Output: ["mo axof ut ddyngo bdvn mkcoueqigwizz" "omay axofay utay dyngoday dvnbay kcoueqigwizzmay"]
Test Case: 753 | Input/Output: ["elnni vpmdlrwcgik yu khph wixqwy kue" "elnniay pmdlrwcgikvay uyay hphkay ixqwyway uekay"]
Test Case: 754 | Input/Output: ["r zen io ehatgnwrrk b manioaov tizdq" "ray enzay ioay ehatgnwrrkay bay anioaovmay izdqtay"]
Test Case: 755 | Input/Output: ["nzxuclsuinoq pagjm ru qjgixt qkfrb d" "zxuclsuinoqnay agjmpay uray jgixtqay kfrbqay day"]
Test Case: 756 | Input/Output: ["fh arwh ktf jlbb v zhzngz dhz uldbbw" "hfay arwhay tfkay lbbjay vay hzngzzay hzday uldbbway"]
Test Case: 757 | Input/Output: ["fv dauqtg v ilz egqks obfr jg tcqkim" "vfay auqtgday vay ilzay egqksay obfray gjay cqkimtay"]
Test Case: 758 | Input/Output: ["ezqqanhzeet snlpvmpn x sqfm fqszwqltd" "ezqqanhzeetay nlpvmpnsay xay qfmsay qszwqltdfay"]
Test Case: 759 | Input/Output: ["sybwaoz tyev s ho y nqr eowbh ixu afu" "ybwaozsay yevtay say ohay yay qrnay eowbhay ixuay afuay"]
Test Case: 760 | Input/Output: ["qqwlzs bdksjcc vagkfau fmqj deplu ttv" "qwlzsqay dksjccbay agkfauvay mqjfay epluday tvtay"]
Test Case: 761 | Input/Output: ["zj ek to fnwgfzcnfhk jwpvki tpypjohms" "jzay ekay otay nwgfzcnfhkfay wpvkijay pypjohmstay"]
Test Case: 762 | Input/Output: ["yglv egc dhtqa xasontnvhwkrgimcprr cn" "glvyay egcay htqaday asontnvhwkrgimcprrxay ncay"]
Test Case: 763 | Input/Output: ["oalp stcds w ebq hbo mt sd gznyzkha v" "oalpay tcdssay way ebqay bohay tmay dsay znyzkhagay vay"]
Test Case: 764 | Input/Output: ["wyclhvkynduwuxckutcu yqdpxmiqp d wcpm" "yclhvkynduwuxckutcuway qdpxmiqpyay day cpmway"]
Test Case: 765 | Input/Output: ["h kmgx qmb alj b m l mtcztyvfdngbqozf" "hay mgxkay mbqay aljay bay may lay tcztyvfdngbqozfmay"]
Test Case: 766 | Input/Output: ["ktpsqmk xlkcclsok t hnsyao a v aikklw" "tpsqmkkay lkcclsokxay tay nsyaohay aay vay aikklway"]
Test Case: 767 | Input/Output: ["mddqy g bvsg acp rgho uave wr e hmq y" "ddqymay gay vsgbay acpay ghoray uaveay rway eay mqhay yay"]
Test Case: 768 | Input/Output: ["htgnqhc q ly qxucuxfcc xjdpmya w x yv" "tgnqhchay qay ylay xucuxfccqay jdpmyaxay way xay vyay"]
Test Case: 769 | Input/Output: ["xaaave hvjc fcoks sizn nngrm frafng w" "aaavexay vjchay coksfay iznsay ngrmnay rafngfay way"]
Test Case: 770 | Input/Output: ["pabwsmiou u yf dri tj sy fakcamwr v b" "abwsmioupay uay fyay riday jtay ysay akcamwrfay vay bay"]
Test Case: 771 | Input/Output: ["k fvec k efy yu pxoklstbr fwaohfsbw e" "kay vecfay kay efyay uyay xoklstbrpay waohfsbwfay eay"]
Test Case: 772 | Input/Output: ["kevz xslt pt vpkirdtn h rvdytdxzend u" "evzkay sltxay tpay pkirdtnvay hay vdytdxzendray uay"]
Test Case: 773 | Input/Output: ["adqvyaw ybx gb nz ibpnaxvql wixakwb k" "adqvyaway bxyay bgay znay ibpnaxvqlay ixakwbway kay"]
Test Case: 774 | Input/Output: ["fan cg nwkxu gxu zzrmixbl wgpvbmf kvb" "anfay gcay wkxunay xugay zrmixblzay gpvbmfway vbkay"]
Test Case: 775 | Input/Output: ["mo jbvel isbclgkbsouwkqa a rpfwug djo" "omay bveljay isbclgkbsouwkqaay aay pfwugray joday"]
Test Case: 776 | Input/Output: ["ptiiz b s u xyxi tu ugss axlkdozr oen" "tiizpay bay say uay yxixay utay ugssay axlkdozray oenay"]
Test Case: 777 | Input/Output: ["kvdamm oaaccovne phud yu uopt fviwqjv" "vdammkay oaaccovneay hudpay uyay uoptay viwqjvfay"]
Test Case: 778 | Input/Output: ["rw okeoo bi hdgzvwqsnd v pdcljjuvv ip" "wray okeooay ibay dgzvwqsndhay vay dcljjuvvpay ipay"]
Test Case: 779 | Input/Output: ["e hzshiwfidzr o rxt pwo nkf ie i vltl" "eay zshiwfidzrhay oay xtray wopay kfnay ieay iay ltlvay"]
Test Case: 780 | Input/Output: ["gqueuw ygyfkuxyahrqto jhwaukzrklnto e" "queuwgay gyfkuxyahrqtoyay hwaukzrklntojay eay"]
Test Case: 781 | Input/Output: ["mgmw w y cejzoiuquqcomaw knbi fnqvcti" "gmwmay way yay ejzoiuquqcomawcay nbikay nqvctifay"]
Test Case: 782 | Input/Output: ["kwcl oso mondvuftylhdfsass lsqugfbryf" "wclkay osoay ondvuftylhdfsassmay squgfbryflay"]
Test Case: 783 | Input/Output: ["eodt fb lmm ix es n nhhyfuwsuf e pd z" "eodtay bfay mmlay ixay esay nay hhyfuwsufnay eay dpay zay"]
Test Case: 784 | Input/Output: ["y gu m mwznvz q zpttc podqcraqy hmiegh" "yay ugay may wznvzmay qay pttczay odqcraqypay mieghhay"]
Test Case: 785 | Input/Output: ["zra uvjmtwc cdmpzysbfpgivyuz exmkh yri" "razay uvjmtwcay dmpzysbfpgivyuzcay exmkhay riyay"]
Test Case: 786 | Input/Output: ["wcztmumzk zq tibqzetgsb wl i q mdxn hd" "cztmumzkway qzay ibqzetgsbtay lway iay qay dxnmay dhay"]
Test Case: 787 | Input/Output: ["qndp vfm lubppnedq n rnusi h aoibitbgr" "ndpqay fmvay ubppnedqlay nay nusiray hay aoibitbgray"]
Test Case: 788 | Input/Output: ["uk s jiaeytsplq qrrkihvwzjmntvqkwqhqnb" "ukay say iaeytsplqjay rrkihvwzjmntvqkwqhqnbqay"]
Test Case: 789 | Input/Output: ["bscrmi mxtrzjft kcndx f sdgmr zgrlxv a" "scrmibay xtrzjftmay cndxkay fay dgmrsay grlxvzay aay"]
Test Case: 790 | Input/Output: ["ocdszdln nkprl f r dsw wpzpczm vj smhd" "ocdszdlnay kprlnay fay ray swday pzpczmway jvay mhdsay"]
Test Case: 791 | Input/Output: ["fymk fphu b r d brxzo cv ts o cfnpcs z" "ymkfay phufay bay ray day rxzobay vcay stay oay fnpcscay zay"]
Test Case: 792 | Input/Output: ["x zm rbdmnyvcakdyphobfecihne efx fzfcw" "xay mzay bdmnyvcakdyphobfecihneray efxay zfcwfay"]
Test Case: 793 | Input/Output: ["ilsbilkd d dqrwiubqps dspi nsue hnt xe" "ilsbilkday day qrwiubqpsday spiday suenay nthay exay"]
Test Case: 794 | Input/Output: ["szdifm enreme oawup l v b hpdq wgysoas" "zdifmsay enremeay oawupay lay vay bay pdqhay gysoasway"]
Test Case: 795 | Input/Output: ["sfopjplf ueu cipwlamjtrhu gb oghrc wud" "fopjplfsay ueuay ipwlamjtrhucay bgay oghrcay udway"]
Test Case: 796 | Input/Output: ["mpqu xejqo cvjqbhypp iztg iazoycuy vit" "pqumay ejqoxay vjqbhyppcay iztgay iazoycuyay itvay"]
Test Case: 797 | Input/Output: ["x dszuslxyvhv h cjeki smlwvibevfbqwwli" "xay szuslxyvhvday hay jekicay mlwvibevfbqwwlisay"]
Test Case: 798 | Input/Output: ["h gsvfzac yehq ju vs kewhgoyj d i dlly" "hay svfzacgay ehqyay ujay svay ewhgoyjkay day iay llyday"]
Test Case: 799 | Input/Output: ["lnn rf dozl vodjdhd ujsxdyanxbnbsp omi" "nnlay fray ozlday odjdhdvay ujsxdyanxbnbspay omiay"]
Test Case: 800 | Input/Output: ["jxv c uldxujmvdls kuh clhk iwu zec v h" "xvjay cay uldxujmvdlsay uhkay lhkcay iwuay eczay vay hay"]
Test Case: 801 | Input/Output: ["hsg awbudjrlvxy h rwpxfcguns u xj uifl" "sghay awbudjrlvxyay hay wpxfcgunsray uay jxay uiflay"]
Test Case: 802 | Input/Output: ["ucwgbdgedcte fa oi x bzt gpisvkplvfvzg" "ucwgbdgedcteay afay oiay xay ztbay pisvkplvfvzggay"]
Test Case: 803 | Input/Output: ["iiwn rt eb zizopcnzwmjcmg sdrcstj gbdu" "iiwnay tray ebay izopcnzwmjcmgzay drcstjsay bdugay"]
Test Case: 804 | Input/Output: ["jotkdjkw hc ppv fkh ts p ftkj j uahjpp" "otkdjkwjay chay pvpay khfay stay pay tkjfay jay uahjppay"]
Test Case: 805 | Input/Output: ["x x mnpw wg ez m z pnzlu rmpgliryn tre" "xay xay npwmay gway ezay may zay nzlupay mpglirynray retay"]
Test Case: 806 | Input/Output: ["iia nzjiczgqxii wlsto kraaoouk tw inn n" "iiaay zjiczgqxiinay lstoway raaooukkay wtay innay nay"]
Test Case: 807 | Input/Output: ["h ju ew e cnf qwjo h slpgwcs yr s pkytn" "hay ujay eway eay nfcay wjoqay hay lpgwcssay ryay say kytnpay"]
Test Case: 808 | Input/Output: ["b duwjt xv wwf ogel yhhtxiizn jaqef sld" "bay uwjtday vxay wfway ogelay hhtxiiznyay aqefjay ldsay"]
Test Case: 809 | Input/Output: ["lvswpmo phsxuhkz hcp enpp lo kt pe buhx" "vswpmolay hsxuhkzpay cphay enppay olay tkay epay uhxbay"]
Test Case: 810 | Input/Output: ["u fqkjjov yq aqn lu x vad dg t u tt ccj" "uay qkjjovfay qyay aqnay ulay xay advay gday tay uay ttay cjcay"]
Test Case: 811 | Input/Output: ["j ajdiwk ax eoxkn djgtgwpdov pykhzzmbvq" "jay ajdiwkay axay eoxknay jgtgwpdovday ykhzzmbvqpay"]
Test Case: 812 | Input/Output: ["quazama puonmfypadyaygsp orbkqrnpb e db" "uazamaqay uonmfypadyaygsppay orbkqrnpbay eay bday"]
Test Case: 813 | Input/Output: ["xyo pviranjfd jerasoqlq xbwsrhabrjrdqfl" "yoxay viranjfdpay erasoqlqjay bwsrhabrjrdqflxay"]
Test Case: 814 | Input/Output: ["rzfavfc kjoktxhn f uswhet nsjziyurj akp" "zfavfcray joktxhnkay fay uswhetay sjziyurjnay akpay"]
Test Case: 815 | Input/Output: ["fi apztbwwy yetlgakk rpxrjithy rkrux gd" "ifay apztbwwyay etlgakkyay pxrjithyray kruxray dgay"]
Test Case: 816 | Input/Output: ["oeflz kpejxmgnphb prinwf epxnrpy yixlpu" "oeflzay pejxmgnphbkay rinwfpay epxnrpyay ixlpuyay"]
Test Case: 817 | Input/Output: ["hm dtmfchjqemxerbdgsuzl r dxuqslbrbzglh" "mhay tmfchjqemxerbdgsuzlday ray xuqslbrbzglhday"]
Test Case: 818 | Input/Output: ["t jyl j cxaua c hfzj peqf izaptwen npdj" "tay yljay jay xauacay cay fzjhay eqfpay izaptwenay pdjnay"]
Test Case: 819 | Input/Output: ["z xj inncdoftqnikkt ofnp kgsb kr tpnftf" "zay jxay inncdoftqnikktay ofnpay gsbkay rkay pnftftay"]
Test Case: 820 | Input/Output: ["wbil a fux bgzlllhcbeno powa tkiurmg xa" "bilway aay uxfay gzlllhcbenobay owapay kiurmgtay axay"]
Test Case: 821 | Input/Output: ["y wjrepbflbtw hjsswd w egermqkr p nif b" "yay jrepbflbtwway jsswdhay way egermqkray pay ifnay bay"]
Test Case: 822 | Input/Output: ["qukj dkyo dbd g nveo igpvngrujkboq mqfz" "ukjqay kyoday bdday gay veonay igpvngrujkboqay qfzmay"]
Test Case: 823 | Input/Output: ["lf ucdiesk siuuluoeec sagunxlq o uofyse" "flay ucdieskay iuuluoeecsay agunxlqsay oay uofyseay"]
Test Case: 824 | Input/Output: ["yg ftbnwmw tyi fkdzgkhbtozow ci w iybhce" "gyay tbnwmwfay yitay kdzgkhbtozowfay icay way iybhceay"]
Test Case: 825 | Input/Output: ["dm hsbsbby bgs mmvnhumc gtrdpp r bcxt xv" "mday sbsbbyhay gsbay mvnhumcmay trdppgay ray cxtbay vxay"]
Test Case: 826 | Input/Output: ["dgtvaeztew kzqr bxczhqkcndjp thw dfprq t" "gtvaeztewday zqrkay xczhqkcndjpbay hwtay fprqday tay"]
Test Case: 827 | Input/Output: ["sxdcpdvfite zazt m muvkougn s grlvlsbzgk" "xdcpdvfitesay aztzay may uvkougnmay say rlvlsbzgkgay"]
Test Case: 828 | Input/Output: ["p cusoymrjyfxm vpsgwsxadbi n kfohkm ikys" "pay usoymrjyfxmcay psgwsxadbivay nay fohkmkay ikysay"]
Test Case: 829 | Input/Output: ["jiydk gjmiwhki jh rmqmv ugc isiuexsiv lj" "iydkjay jmiwhkigay hjay mqmvray ugcay isiuexsivay jlay"]
Test Case: 830 | Input/Output: ["izeslm z fgfab jeuexc u jc tzg o visrzsm" "izeslmay zay gfabfay euexcjay uay cjay zgtay oay isrzsmvay"]
Test Case: 831 | Input/Output: ["px g mln upqbae dgnrmlqndyqxrpsldhx nskf" "xpay gay lnmay upqbaeay gnrmlqndyqxrpsldhxday skfnay"]
Test Case: 832 | Input/Output: ["nmtscervgngk d nce njiqtekb lmdqz brbarz" "mtscervgngknay day cenay jiqtekbnay mdqzlay rbarzbay"]
Test Case: 833 | Input/Output: ["rztygtjhm ejdxbkj ni jhlmm yavjf k rofva" "ztygtjhmray ejdxbkjay inay hlmmjay avjfyay kay ofvaray"]
Test Case: 834 | Input/Output: ["mklx vhr mcpwwuaymwjbtbzxoe rnu cqc t ir" "klxmay hrvay cpwwuaymwjbtbzxoemay nuray qccay tay iray"]
Test Case: 835 | Input/Output: ["dlejcqlz omv ku vuzlzivxsariw fqpwqx rvn" "lejcqlzday omvay ukay uzlzivxsariwvay qpwqxfay vnray"]
Test Case: 836 | Input/Output: ["eb n psesx ucexu i m srb nlupbvwljuz wju" "ebay nay sesxpay ucexuay iay may rbsay lupbvwljuznay juway"]
Test Case: 837 | Input/Output: ["iisbrhft dcbyx ycmvehlkhqqinawted sbokav" "iisbrhftay cbyxday cmvehlkhqqinawtedyay bokavsay"]
Test Case: 838 | Input/Output: ["g iwzc jzwkg gm ygujwub rprkxc lnuoyycjp" "gay iwzcay zwkgjay mgay gujwubyay prkxcray nuoyycjplay"]
Test Case: 839 | Input/Output: ["f eyvmyeq lkwhqsg pvns m phm geezx an yp" "fay eyvmyeqay kwhqsglay vnspay may hmpay eezxgay anay pyay"]
Test Case: 840 | Input/Output: ["rvw tz tlt sk ilhlu fac gkkxx vz wmua xfe" "vwray ztay lttay ksay ilhluay acfay kkxxgay zvay muaway fexay"]
Test Case: 841 | Input/Output: ["yvuc eb ppy hf cmtpp z raf ntwo emwqcd la" "vucyay ebay pypay fhay mtppcay zay afray twonay emwqcday alay"]
Test Case: 842 | Input/Output: ["amkbds e kjbeyebvzscgtsxvymhu bodwt yevrw" "amkbdsay eay jbeyebvzscgtsxvymhukay odwtbay evrwyay"]
Test Case: 843 | Input/Output: ["ln oi pxbt d ho cilce dclpbkd qwrfe qgfmu" "nlay oiay xbtpay day ohay ilcecay clpbkdday wrfeqay gfmuqay"]
Test Case: 844 | Input/Output: ["fcnlw i tijs qkydhpqxhhms gvz vr bfwl tkr" "cnlwfay iay ijstay kydhpqxhhmsqay vzgay rvay fwlbay krtay"]
Test Case: 845 | Input/Output: ["rviijg xg dipajhz npuq rh efmxuzqg ey iks" "viijgray gxay ipajhzday puqnay hray efmxuzqgay eyay iksay"]
Test Case: 846 | Input/Output: ["jbinil vqiqx b hxb j c nhkhpk lp b pzqe n" "biniljay qiqxvay bay xbhay jay cay hkhpknay play bay zqepay nay"]
Test Case: 847 | Input/Output: ["efwcfu tbbytqovdvlqz sb elkctecdkbvwq hmv" "efwcfuay bbytqovdvlqztay bsay elkctecdkbvwqay mvhay"]
Test Case: 848 | Input/Output: ["e augwt tekmvhuejlur kfeocwjvovxv lcz f a" "eay augwtay ekmvhuejlurtay feocwjvovxvkay czlay fay aay"]
Test Case: 849 | Input/Output: ["pkxxolzgyohbjqmn nzfxy fafx miio hy n baw" "kxxolzgyohbjqmnpay zfxynay afxfay iiomay yhay nay awbay"]
Test Case: 850 | Input/Output: ["vuwxntpbiie btsvtghyre bsjiu ytlbsto peje" "uwxntpbiievay tsvtghyrebay sjiubay tlbstoyay ejepay"]
Test Case: 851 | Input/Output: ["bmpkcxqpmpevpc tcj h o etnt bo p xjf pcjl" "mpkcxqpmpevpcbay cjtay hay oay etntay obay pay jfxay cjlpay"]
Test Case: 852 | Input/Output: ["krl cb xapowwqyqvytu scgnudmkylq kilq q c" "rlkay bcay apowwqyqvytuxay cgnudmkylqsay ilqkay qay cay"]
Test Case: 853 | Input/Output: ["s kwqyckxvcbzddx x g rit fcc rfgzyleudv g" "say wqyckxvcbzddxkay xay gay itray ccfay fgzyleudvray gay"]
Test Case: 854 | Input/Output: ["nqj lrubgoub hopcvd rh tdgypfg nrhztyxgam" "qjnay rubgoublay opcvdhay hray dgypfgtay rhztyxgamnay"]
Test Case: 855 | Input/Output: ["rsfffucjxxr zxksbx halzb c cmbt pjhuq q bl" "sfffucjxxrray xksbxzay alzbhay cay mbtcay jhuqpay qay lbay"]
Test Case: 856 | Input/Output: ["yedcyh xekdoo ttopthh srs iw l vg oaab dyt" "edcyhyay ekdooxay topthhtay rssay iway lay gvay oaabay ytday"]
Test Case: 857 | Input/Output: ["djm wbzj pbwydjvqaevvjrybpwvnlgmmzil fjlgm" "jmday bzjway bwydjvqaevvjrybpwvnlgmmzilpay jlgmfay"]
Test Case: 858 | Input/Output: ["pwmd kiowpzjq khrc azvfgafivmmz ozbl jbuzj" "wmdpay iowpzjqkay hrckay azvfgafivmmzay ozblay buzjjay"]
Test Case: 859 | Input/Output: ["ujcvfc lcwi nvuz g x imqpwppzt obexx e m f" "ujcvfcay cwilay vuznay gay xay imqpwppztay obexxay eay may fay"]
Test Case: 860 | Input/Output: ["pw tvfntzda czw o ywkqsbgkgpgyz trif ql lt" "wpay vfntzdatay zwcay oay wkqsbgkgpgyzyay riftay lqay tlay"]
Test Case: 861 | Input/Output: ["zmhd wq aqsficm asjkknkinvwsm lfjovwea osa" "mhdzay qway aqsficmay asjkknkinvwsmay fjovwealay osaay"]
Test Case: 862 | Input/Output: ["oew maj kshn ezy eub h pke dzt sms t ale r" "oeway ajmay shnkay ezyay eubay hay kepay ztday mssay tay aleay ray"]
Test Case: 863 | Input/Output: ["qlqogis swgse sysl rwtygfvdcvxrv grj v c q" "lqogisqay wgsesay yslsay wtygfvdcvxrvray rjgay vay cay qay"]
Test Case: 864 | Input/Output: ["vfocyembgiktwqsrsr zxkmbt dkfp pusye oan z" "focyembgiktwqsrsrvay xkmbtzay kfpday usyepay oanay zay"]
Test Case: 865 | Input/Output: ["na akp orx ogaounexgz dlh lchqtjq iq copmq" "anay akpay orxay ogaounexgzay lhday chqtjqlay iqay opmqcay"]
Test Case: 866 | Input/Output: ["qr nxysu jmb hr yava kg yqc oefywoh b w eq" "rqay xysunay mbjay rhay avayay gkay qcyay oefywohay bay way eqay"]
Test Case: 867 | Input/Output: ["rg umjd negrkurgsm ins s eimd dexl k sjy k" "gray umjday egrkurgsmnay insay say eimday exlday kay jysay kay"]
Test Case: 868 | Input/Output: ["cfmdofl w bxjuicg gqffmhhd opq blfywgs blt" "fmdoflcay way xjuicgbay qffmhhdgay opqay lfywgsbay ltbay"]
Test Case: 869 | Input/Output: ["lm cbyhvydqzw kwa gnzc ilejcl lw g ubi u g" "mlay byhvydqzwcay wakay nzcgay ilejclay wlay gay ubiay uay gay"]
Test Case: 870 | Input/Output: ["skzw xtubl nopkzvzpbt ngmwqe kkjwxh iaw ic" "kzwsay tublxay opkzvzpbtnay gmwqenay kjwxhkay iaway icay"]
Test Case: 871 | Input/Output: ["fmw hz h tybxykzrj jem i ipjoeuy iqtzl x g" "mwfay zhay hay ybxykzrjtay emjay iay ipjoeuyay iqtzlay xay gay"]
Test Case: 872 | Input/Output: ["gyzwrgrj higjyyjidtlwsusha qs dhvy qrtj zp" "yzwrgrjgay igjyyjidtlwsushahay sqay hvyday rtjqay pzay"]
Test Case: 873 | Input/Output: ["upm tgpyp ryrsmns sxteosjdeqq cyppdjskhncj" "upmay gpyptay yrsmnsray xteosjdeqqsay yppdjskhncjcay"]
Test Case: 874 | Input/Output: ["re rc vejqksocskncvq ii en bg aw xp p ingh" "eray cray ejqksocskncvqvay iiay enay gbay away pxay pay inghay"]
Test Case: 875 | Input/Output: ["daty ie u ozqjpnaid l h a vfdis qjs rc pir" "atyday ieay uay ozqjpnaiday lay hay aay fdisvay jsqay cray irpay"]
Test Case: 876 | Input/Output: ["bd ur vmpna fdh kha chk ocdid kvk rwsdqpdb" "dbay uray mpnavay dhfay hakay hkcay ocdiday vkkay wsdqpdbray"]
Test Case: 877 | Input/Output: ["q mqavkocnnua vfkz ia ejckbwevbgx tj ohvzh" "qay qavkocnnuamay fkzvay iaay ejckbwevbgxay jtay ohvzhay"]
Test Case: 878 | Input/Output: ["snespy ucyyux y mcwwbklxi tazxzo xakut wwo" "nespysay ucyyuxay yay cwwbklximay azxzotay akutxay woway"]
Test Case: 879 | Input/Output: ["l wkamonrslhxw midao irms egx gchmcrprvm o" "lay kamonrslhxwway idaomay irmsay egxay chmcrprvmgay oay"]
Test Case: 880 | Input/Output: ["adzaipcazfvbekwaawj lvcngeu pyx wuup ir nd" "adzaipcazfvbekwaawjay vcngeulay yxpay uupway iray dnay"]
Test Case: 881 | Input/Output: ["u l ueenhqte eyuzesqjk vkjjea ybgyozeilspw" "uay lay ueenhqteay eyuzesqjkay kjjeavay bgyozeilspwyay"]
Test Case: 882 | Input/Output: ["szwnhgwn obpkdiya ptz hxgiz eshmmkbcnvjmgss" "zwnhgwnsay obpkdiyaay tzpay xgizhay eshmmkbcnvjmgssay"]
Test Case: 883 | Input/Output: ["brxd kpdnxadrw u ehe jox qkkkud dobjfo nh i" "rxdbay pdnxadrwkay uay eheay oxjay kkkudqay objfoday hnay iay"]
Test Case: 884 | Input/Output: ["namibmnkueebcb x spcil mog xjdxp wcpmgy t v" "amibmnkueebcbnay xay pcilsay ogmay jdxpxay cpmgyway tay vay"]
Test Case: 885 | Input/Output: ["p i k twjamswlb xo poy otljyswauzg dps gd r" "pay iay kay wjamswlbtay oxay oypay otljyswauzgay psday dgay ray"]
Test Case: 886 | Input/Output: ["tuogi osmxhcstcwoh ttvmpco da f jc mkqzjevd" "uogitay osmxhcstcwohay tvmpcotay aday fay cjay kqzjevdmay"]
Test Case: 887 | Input/Output: ["gxccab lotadofxfvusuakcwlhydnjqzc n y m spq" "xccabgay otadofxfvusuakcwlhydnjqzclay nay yay may pqsay"]
Test Case: 888 | Input/Output: ["pdbnidpy m uxrgyxvp qc sjykd ae yc r p jwba" "dbnidpypay may uxrgyxvpay cqay jykdsay aeay cyay ray pay wbajay"]
Test Case: 889 | Input/Output: ["elgbggumlh f a pxx cvqb qhyt fwg hj wbhcivg" "elgbggumlhay fay aay xxpay vqbcay hytqay wgfay jhay bhcivgway"]
Test Case: 890 | Input/Output: ["gqbolzczer jvg j hs ko xb nqrmxtl pyyavy qg" "qbolzczergay vgjay jay shay okay bxay qrmxtlnay yyavypay gqay"]
Test Case: 891 | Input/Output: ["ycuf qfzmyh u ozvnxev aaf rnt fo mpfu ri sa" "cufyay fzmyhqay uay ozvnxevay aafay ntray ofay pfumay iray asay"]
Test Case: 892 | Input/Output: ["vonduvnmsepzdmrbhpha a npcarw qbvdjsszaibyq" "onduvnmsepzdmrbhphavay aay pcarwnay bvdjsszaibyqqay"]
Test Case: 893 | Input/Output: ["n av eypv jrjuihmzco bvm vb bvtuzgbc t roln" "nay avay eypvay rjuihmzcojay vmbay bvay vtuzgbcbay tay olnray"]
Test Case: 894 | Input/Output: ["cvrz dd yqtwme absxr o uxnqmb clowg m hr ln" "vrzcay dday qtwmeyay absxray oay uxnqmbay lowgcay may rhay nlay"]
Test Case: 895 | Input/Output: ["kzfs u m i m vbhtciexmuienj ebku wifg ie hu" "zfskay uay may iay may bhtciexmuienjvay ebkuay ifgway ieay uhay"]
Test Case: 896 | Input/Output: ["ynpok zt ol j hrndscuhdi idmwpqnf thjtay gp" "npokyay tzay olay jay rndscuhdihay idmwpqnfay hjtaytay pgay"]
Test Case: 897 | Input/Output: ["pocyddb oxze tmv r ty zu gyhe hjw cunme lwl" "ocyddbpay oxzeay mvtay ray ytay uzay yhegay jwhay unmecay wllay"]
Test Case: 898 | Input/Output: ["q f yh aw f krbfcfsktrsvkx mk wclcfdpr r ak" "qay fay hyay away fay rbfcfsktrsvkxkay kmay clcfdprway ray akay"]
Test Case: 899 | Input/Output: ["g tw mtel y dgehcqypsx wnk oo kofwsg qyekvf" "gay wtay telmay yay gehcqypsxday nkway ooay ofwsgkay yekvfqay"]
Test Case: 900 | Input/Output: ["ecw kozarqsgxznhz tsollqrehc yrjaofu uvs bv" "ecway ozarqsgxznhzkay sollqrehctay rjaofuyay uvsay vbay"]
Test Case: 901 | Input/Output: ["wqgz xnuryv hlb dtyrkx oj yx fnkppokvygklat" "qgzway nuryvxay lbhay tyrkxday ojay xyay nkppokvygklatfay"]
Test Case: 902 | Input/Output: ["krz vcb asyenkubujpkmkalqgg gxlbjfsjiz cqqa" "rzkay cbvay asyenkubujpkmkalqggay xlbjfsjizgay qqacay"]
Test Case: 903 | Input/Output: ["rssfe p xcm qilaot qod f zbpwp ntej gca aker" "ssferay pay cmxay ilaotqay odqay fay bpwpzay tejnay cagay akeray"]
Test Case: 904 | Input/Output: ["ztwe kehf uw fndjvf hwxpts k bxrzvhjd ke spj" "twezay ehfkay uway ndjvffay wxptshay kay xrzvhjdbay ekay pjsay"]
Test Case: 905 | Input/Output: ["unbxou bzelylg bdwk wrbuer u gganf yjdrcmsio" "unbxouay zelylgbay dwkbay rbuerway uay ganfgay jdrcmsioyay"]
Test Case: 906 | Input/Output: ["bsw kkd veqchlhocokqijblhrnkjl g q ndqoy lrg" "swbay kdkay eqchlhocokqijblhrnkjlvay gay qay dqoynay rglay"]
Test Case: 907 | Input/Output: ["udu efmfvlnldrejblrdlp p zsfcrudoittfwenl va" "uduay efmfvlnldrejblrdlpay pay sfcrudoittfwenlzay avay"]
Test Case: 908 | Input/Output: ["ci krkj dryg lsb rfntzs drgcw gow iym c e ar" "icay rkjkay rygday sblay fntzsray rgcwday owgay iymay cay eay aray"]
Test Case: 909 | Input/Output: ["nq on mzqs mmjn tn dxi i yaqsjhipo v ytryv d" "qnay onay zqsmay mjnmay ntay xiday iay aqsjhipoyay vay tryvyay day"]
Test Case: 910 | Input/Output: ["w iqkk im ee ncpco delyb xxqpzfnlntikskvuhft" "way iqkkay imay eeay cpconay elybday xqpzfnlntikskvuhftxay"]
Test Case: 911 | Input/Output: ["qrl j hvkjdrwlfrrikm cjp bqralaes diuxvx ffj" "rlqay jay vkjdrwlfrrikmhay jpcay qralaesbay iuxvxday fjfay"]
Test Case: 912 | Input/Output: ["y kcn niv zdwwt faxtehwy b ytudt jwe v ctilh" "yay cnkay ivnay dwwtzay axtehwyfay bay tudtyay wejay vay tilhcay"]
Test Case: 913 | Input/Output: ["m o hnhxowjy q mxaoulg fgal qrdo fh z jqhr j" "may oay nhxowjyhay qay xaoulgmay galfay rdoqay hfay zay qhrjay jay"]
Test Case: 914 | Input/Output: ["jpdrfkgcorpq lxh q mumunl et yzndzdv p tfc z" "pdrfkgcorpqjay xhlay qay umunlmay etay zndzdvyay pay fctay zay"]
Test Case: 915 | Input/Output: ["gnjsscrymch y lzo lgi tek yt fyl szdwf ploqd" "njsscrymchgay yay zolay gilay ektay tyay ylfay zdwfsay loqdpay"]
Test Case: 916 | Input/Output: ["upxwkdanu hngwb odve xnd ikc lkz ha kxrgon k" "upxwkdanuay ngwbhay odveay ndxay ikcay kzlay ahay xrgonkay kay"]
Test Case: 917 | Input/Output: ["evjyndds cptxz c tb no fuhrgni zmaxdu jvzmqv" "evjynddsay ptxzcay cay btay onay uhrgnifay maxduzay vzmqvjay"]
Test Case: 918 | Input/Output: ["nvardtqdigv t kcpztore m fxcjcglgkz vhdq icy" "vardtqdigvnay tay cpztorekay may xcjcglgkzfay hdqvay icyay"]
Test Case: 919 | Input/Output: ["szghi ihzwthgcla ur upqhrtss hts vod md sqei" "zghisay ihzwthgclaay uray upqhrtssay tshay odvay dmay qeisay"]
Test Case: 920 | Input/Output: ["pos p wna xnqwb rr nw ufsq o ycmmfs rq lndpu" "ospay pay naway nqwbxay rray wnay ufsqay oay cmmfsyay qray ndpulay"]
Test Case: 921 | Input/Output: ["o nfkfag gwf r gwieaxybybeqhwqijaay v tvkoni" "oay fkfagnay wfgay ray wieaxybybeqhwqijaaygay vay vkonitay"]
Test Case: 922 | Input/Output: ["xhqrjeizuuelaimnf f jz q oi l fjgf qddoevoemd" "hqrjeizuuelaimnfxay fay zjay qay oiay lay jgffay ddoevoemdqay"]
Test Case: 923 | Input/Output: ["k bzilwoqu od vefs qksycwnwyflxidwp jutqaufoo" "kay zilwoqubay oday efsvay ksycwnwyflxidwpqay utqaufoojay"]
Test Case: 924 | Input/Output: ["dd xzjdsljq ej nog i hy x yo tyvxel yyusefx a" "dday zjdsljqxay ejay ognay iay yhay xay oyay yvxeltay yusefxyay aay"]
Test Case: 925 | Input/Output: ["pywjjhdnbjmm shzfal nkrkdpznrucdiwytfo pfesql" "ywjjhdnbjmmpay hzfalsay krkdpznrucdiwytfonay fesqlpay"]
Test Case: 926 | Input/Output: ["sugzx muw rvmcnsofm sl s sfuawc z h uy oy s k" "ugzxsay uwmay vmcnsofmray lsay say fuawcsay zay hay uyay oyay say kay"]
Test Case: 927 | Input/Output: ["ldjykp egj oql pa or cqasxq vo wnesulwcm qrga" "djykplay egjay oqlay apay oray qasxqcay ovay nesulwcmway rgaqay"]
Test Case: 928 | Input/Output: ["x y s msyfxkjrihjcajofibfkj qw wvzrefrw sz lt" "xay yay say syfxkjrihjcajofibfkjmay wqay vzrefrwway zsay tlay"]
Test Case: 929 | Input/Output: ["sh rqrjvx gr god b i cxszmpwmaqwb ypbytqvdzsn" "hsay qrjvxray rgay odgay bay iay xszmpwmaqwbcay pbytqvdzsnyay"]
Test Case: 930 | Input/Output: ["f upxr g w kvdhwrfymz pq rhfivmwsjiksp c j is" "fay upxray gay way vdhwrfymzkay qpay hfivmwsjikspray cay jay isay"]
Test Case: 931 | Input/Output: ["vt gviqp jg tegw fm yobban bxs q eyi ss voqow" "tvay viqpgay gjay egwtay mfay obbanyay xsbay qay eyiay ssay oqowvay"]
Test Case: 932 | Input/Output: ["cldrizcgn smg ji ep tosu n bp hkea opcqpvbzof" "ldrizcgncay mgsay ijay epay osutay nay pbay keahay opcqpvbzofay"]
Test Case: 933 | Input/Output: ["myixrx vddznmjlbcxwl zxkuxgh t iwpzyr f rs wv" "yixrxmay ddznmjlbcxwlvay xkuxghzay tay iwpzyray fay sray vway"]
Test Case: 934 | Input/Output: ["jw w dhnjmjalagmspvbl k ixltsijn b rdzszyocjb" "wjay way hnjmjalagmspvblday kay ixltsijnay bay dzszyocjbray"]
Test Case: 935 | Input/Output: ["d gygh wmem wuprs qsetn dg qmvobk bo s puucig" "day yghgay memway uprsway setnqay gday mvobkqay obay say uucigpay"]
Test Case: 936 | Input/Output: ["szuiulsfejvmw jejz cb y mjgbdreg xcddlccnaq c" "zuiulsfejvmwsay ejzjay bcay yay jgbdregmay cddlccnaqxay cay"]
Test Case: 937 | Input/Output: ["fi tljsc rfxikqabqogaomj wcq zlarwkk fze guhbk" "ifay ljsctay fxikqabqogaomjray cqway larwkkzay zefay uhbkgay"]
Test Case: 938 | Input/Output: ["sjkxkcvminiiyuretjkhktgeuowoiqe bb efu tgfeh l" "jkxkcvminiiyuretjkhktgeuowoiqesay bbay efuay gfehtay lay"]
Test Case: 939 | Input/Output: ["ve yntd v s wt x gyjoz vpxzntbm oreryemjfcze a" "evay ntdyay vay say tway xay yjozgay pxzntbmvay oreryemjfczeay aay"]
Test Case: 940 | Input/Output: ["klu nwxvezfl wt t jzpjs lpmckhhysvpy q hw kmat" "lukay wxvezflnay tway tay zpjsjay pmckhhysvpylay qay whay matkay"]
Test Case: 941 | Input/Output: ["bdpxaussdt yxrobjsb ercstry cvysghwhets qgwqhm" "dpxaussdtbay xrobjsbyay ercstryay vysghwhetscay gwqhmqay"]
Test Case: 942 | Input/Output: ["bctz pqvmspijknslbihjtakn ojezskign s ix lqv r" "ctzbay qvmspijknslbihjtaknpay ojezskignay say ixay qvlay ray"]
Test Case: 943 | Input/Output: ["ng d hf x ip ixiyuzexne o qjogdezjh ghle hgndo" "gnay day fhay xay ipay ixiyuzexneay oay jogdezjhqay hlegay gndohay"]
Test Case: 944 | Input/Output: ["wk xp qa e io v aiv wwnrnz sfq tctzvffzcxrrnxy" "kway pxay aqay eay ioay vay aivay wnrnzway fqsay ctzvffzcxrrnxytay"]
Test Case: 945 | Input/Output: ["z flmuxxmnxyl x e emhsfrr pkm us nx znhad uqyh" "zay lmuxxmnxylfay xay eay emhsfrray kmpay usay xnay nhadzay uqyhay"]
Test Case: 946 | Input/Output: ["wmnvhlmdixsfo l tbmb i bv cp s aoh de hi lcskb" "mnvhlmdixsfoway lay bmbtay iay vbay pcay say aohay eday ihay cskblay"]
Test Case: 947 | Input/Output: ["uiee sioukchjznnyuwxoqjopkbmkv ytqvqqamno zoah" "uieeay ioukchjznnyuwxoqjopkbmkvsay tqvqqamnoyay oahzay"]
Test Case: 948 | Input/Output: ["axnqik bw omt xas wa abzn hd xwekqlga zolzsknn" "axnqikay wbay omtay asxay away abznay dhay wekqlgaxay olzsknnzay"]
Test Case: 949 | Input/Output: ["dvhnx yocgkomvlgf w vevjp v hguueizejcfimiwpdx" "vhnxday ocgkomvlgfyay way evjpvay vay guueizejcfimiwpdxhay"]
Test Case: 950 | Input/Output: ["o qyrof rgryfbtq saxpkjddqvahkcx krkdkrlhftuwh" "oay yrofqay gryfbtqray axpkjddqvahkcxsay rkdkrlhftuwhkay"]
Test Case: 951 | Input/Output: ["ueaittrpliaqlfteze iricv ejmjn ypk hmee ivw lc" "ueaittrpliaqlftezeay iricvay ejmjnay pkyay meehay ivway clay"]
Test Case: 952 | Input/Output: ["l nbb elioeiqdt epurvqsrvudujjs tru dhlzhz xct" "lay bbnay elioeiqdtay epurvqsrvudujjsay rutay hlzhzday ctxay"]
Test Case: 953 | Input/Output: ["mzwvwzjxqcqzvudh x or ovwbuc evbudttmobilp xlp" "zwvwzjxqcqzvudhmay xay oray ovwbucay evbudttmobilpay lpxay"]
Test Case: 954 | Input/Output: ["oitynvgkweaa tkulyxphacbrl p w ijqidkdcddetujv" "oitynvgkweaaay kulyxphacbrltay pay way ijqidkdcddetujvay"]
Test Case: 955 | Input/Output: ["sdkwdmlopgcakngg kurifxrudsrlw raxsywm epsjo b" "dkwdmlopgcaknggsay urifxrudsrlwkay axsywmray epsjoay bay"]
Test Case: 956 | Input/Output: ["bv x rkgamh qacdpyxeahxnyhtsdzmkwscfre zk ox k" "vbay xay kgamhray acdpyxeahxnyhtsdzmkwscfreqay kzay oxay kay"]
Test Case: 957 | Input/Output: ["u g drrp w i pjhdvd q xfq h uimrihzr n oh eptf" "uay gay rrpday way iay jhdvdpay qay fqxay hay uimrihzray nay ohay eptfay"]
Test Case: 958 | Input/Output: ["uifrzdbvcbblws awwho gglbzxklbfispkevrroivdt yg" "uifrzdbvcbblwsay awwhoay glbzxklbfispkevrroivdtgay gyay"]
Test Case: 959 | Input/Output: ["ucvognybpylnm pj fe wwqoszvp wf tp qa ir c bmlg" "ucvognybpylnmay jpay efay wqoszvpway fway ptay aqay iray cay mlgbay"]
Test Case: 960 | Input/Output: ["vvfeeijyafb dvrvqqopzh y phpz idb t jwwgy jchio" "vfeeijyafbvay vrvqqopzhday yay hpzpay idbay tay wwgyjay chiojay"]
Test Case: 961 | Input/Output: ["ejchz ziyklxxyc wmd xlo dvwwx rxzd ay zqx hqrno" "ejchzay iyklxxyczay mdway loxay vwwxday xzdray ayay qxzay qrnohay"]
Test Case: 962 | Input/Output: ["pqpnhvq xsbbcozjvkzs xgjfupfiicigbhzrctxowwoldv" "qpnhvqpay sbbcozjvkzsxay gjfupfiicigbhzrctxowwoldvxay"]
Test Case: 963 | Input/Output: ["xzrzr dvcox nxmfenqifkltlkpghoyejj afm c ytmu h" "zrzrxay vcoxday xmfenqifkltlkpghoyejjnay afmay cay tmuyay hay"]
Test Case: 964 | Input/Output: ["vfallt j nngdp h odizxx gvfb a qvlduehmittdy qy" "falltvay jay ngdpnay hay odizxxay vfbgay aay vlduehmittdyqay yqay"]
Test Case: 965 | Input/Output: ["cvrtw vtoy vjpji zbtn pelf qz pcb soclynpqxu md" "vrtwcay toyvay jpjivay btnzay elfpay zqay cbpay oclynpqxusay dmay"]
Test Case: 966 | Input/Output: ["bp ebgnbbs spjjce roj bti kn v g iwy byk hmabuu" "pbay ebgnbbsay pjjcesay ojray tibay nkay vay gay iwyay ykbay mabuuhay"]
Test Case: 967 | Input/Output: ["ikhrnpxrrbzgsogrxh xqge yeyyykta kyyqdytdjexipq" "ikhrnpxrrbzgsogrxhay qgexay eyyyktayay yyqdytdjexipqkay"]
Test Case: 968 | Input/Output: ["paq hrhde brzgiypwzxvmqoo kbifbmpntospkit zzxie" "aqpay rhdehay rzgiypwzxvmqoobay bifbmpntospkitkay zxiezay"]
Test Case: 969 | Input/Output: ["cv geyczfclakempz z wmirfsgupexxhmdiqdczbhoilnc" "vcay eyczfclakempzgay zay mirfsgupexxhmdiqdczbhoilncway"]
Test Case: 970 | Input/Output: ["tw fslf ggn m vpdrdr nhyra baaijauewhvbjtb fhim" "wtay slffay gngay may pdrdrvay hyranay aaijauewhvbjtbbay himfay"]
Test Case: 971 | Input/Output: ["rlqp zhycbmr awpmhfbq wwmtrqcjnhxeqsyhbbuziv wr" "lqpray hycbmrzay awpmhfbqay wmtrqcjnhxeqsyhbbuzivway rway"]
Test Case: 972 | Input/Output: ["u oloxl d iisnibvgem uuypf w wnjkark durhptdool" "uay oloxlay day iisnibvgemay uuypfay way njkarkway urhptdoolday"]
Test Case: 973 | Input/Output: ["n g agr nkosi fj lfpacpwuk pf kxzeetipeww zjkif" "nay gay agray kosinay jfay fpacpwuklay fpay xzeetipewwkay jkifzay"]
Test Case: 974 | Input/Output: ["jvy vdbhaqd jhlpyseifhnkas b i oemm uj ozxjvn eh" "vyjay dbhaqdvay hlpyseifhnkasjay bay iay oemmay ujay ozxjvnay ehay"]
Test Case: 975 | Input/Output: ["tdvf p adhiago wwtqds p hnwdyh fqcq l fc cywwdut" "dvftay pay adhiagoay wtqdsway pay nwdyhhay qcqfay lay cfay ywwdutcay"]
Test Case: 976 | Input/Output: ["zkwvl y aofloba sgerd ju b fx hcvwfsqjv h ymox d" "kwvlzay yay aoflobaay gerdsay ujay bay xfay cvwfsqjvhay hay moxyay day"]
Test Case: 977 | Input/Output: ["zi xherigszvoxo ksd f qmiftps wl vhe qlnmaabcpiy" "izay herigszvoxoxay sdkay fay miftpsqay lway hevay lnmaabcpiyqay"]
Test Case: 978 | Input/Output: ["l ikd mm ymbkelqubnufg j gsvqcnpmge eclxkoiyui k" "lay ikday mmay mbkelqubnufgyay jay svqcnpmgegay eclxkoiyuiay kay"]
Test Case: 979 | Input/Output: ["tbsoqveprijbdr xiaap l owpewpcuddepqryhmqporkyyg" "bsoqveprijbdrtay iaapxay lay owpewpcuddepqryhmqporkyygay"]
Test Case: 980 | Input/Output: ["lhcswadtmnl o xxxh aqet xm dydvpeigx eld wgnlqst" "hcswadtmnllay oay xxhxay aqetay mxay ydvpeigxday elday gnlqstway"]
Test Case: 981 | Input/Output: ["y grjypodcsrwx jsysbs acp mquljzx gw lzbqpyivybb" "yay rjypodcsrwxgay sysbsjay acpay quljzxmay wgay zbqpyivybblay"]
Test Case: 982 | Input/Output: ["zyhqp vunhhqobfkg xucqt zktq szbsdoweb paanamxbx" "yhqpzay unhhqobfkgvay ucqtxay ktqzay zbsdowebsay aanamxbxpay"]
Test Case: 983 | Input/Output: ["kgtv vzkksggvhkfvzrqyix p bvbec muz gpuepzesr tl" "gtvkay zkksggvhkfvzrqyixvay pay vbecbay uzmay puepzesrgay ltay"]
Test Case: 984 | Input/Output: ["fnm z d g htytdeixqlu boeezntey xgr vngppthvnmtq" "nmfay zay day gay tytdeixqluhay oeeznteybay grxay ngppthvnmtqvay"]
Test Case: 985 | Input/Output: ["tb wyniaxy t hvdt lg wxygjwwvrdbz vgkdl nlf ptla" "btay yniaxyway tay vdthay glay xygjwwvrdbzway gkdlvay lfnay tlapay"]
Test Case: 986 | Input/Output: ["iog nv ua w aurqb q e j i dwsxgy gdqrh fehmkh zt" "iogay vnay uaay way aurqbay qay eay jay iay wsxgyday dqrhgay ehmkhfay tzay"]
Test Case: 987 | Input/Output: ["s qibh y exies g hb dcidvpp vwbafneqp f lmlwgcqh" "say ibhqay yay exiesay gay bhay cidvppday wbafneqpvay fay mlwgcqhlay"]
Test Case: 988 | Input/Output: ["n ua bqa aegetrvnwvrffzk kt pbvjd c pirihdenawiv" "nay uaay qabay aegetrvnwvrffzkay tkay bvjdpay cay irihdenawivpay"]
Test Case: 989 | Input/Output: ["qezdup cx sxxazuhfacbqfds ayddp q zreizdlaawfcxrs" "ezdupqay xcay xxazuhfacbqfdssay ayddpay qay reizdlaawfcxrszay"]
Test Case: 990 | Input/Output: ["endhjaznvscudg lj strhopontgr gphwyj n iduaxmtm g" "endhjaznvscudgay jlay trhopontgrsay phwyjgay nay iduaxmtmay gay"]
Test Case: 991 | Input/Output: ["gzpvgve gqjtx yy jyulerhtdncvcu rrlqio pm lm lh w" "zpvgvegay qjtxgay yyay yulerhtdncvcujay rlqioray mpay mlay hlay way"]
Test Case: 992 | Input/Output: ["nv caqxjhzhqmt ol jlfn fcm bmnjwl zllv ica mkvpas" "vnay aqxjhzhqmtcay olay lfnjay cmfay mnjwlbay llvzay icaay kvpasmay"]
Test Case: 993 | Input/Output: ["ckawfvtops ihxyagyztvn yrplisu mrpm i vwdlxwdv vw" "kawfvtopscay ihxyagyztvnay rplisuyay rpmmay iay wdlxwdvvay wvay"]
Test Case: 994 | Input/Output: ["fuv uf jzy l pjsroavr tj c aftdn nsfzm wpyzp cycr" "uvfay ufay zyjay lay jsroavrpay jtay cay aftdnay sfzmnay pyzpway ycrcay"]
Test Case: 995 | Input/Output: ["oqhxwssdiyearqzukh jtyhnfnf b n ai pbj d q d lwof" "oqhxwssdiyearqzukhay tyhnfnfjay bay nay aiay bjpay day qay day woflay"]
Test Case: 996 | Input/Output: ["psk wmta mypjirdw k emmlqtvcvuvvwlbovin tlmbfmelb" "skpay mtaway ypjirdwmay kay emmlqtvcvuvvwlbovinay lmbfmelbtay"]
Test Case: 997 | Input/Output: ["ard gmkeinbvxpz adqnmmoxu j awxg zgn s mcbgfokrrn" "arday mkeinbvxpzgay adqnmmoxuay jay awxgay gnzay say cbgfokrrnmay"]
Test Case: 998 | Input/Output: ["zeilgjw moamal uir klbknb lk lfnclm vmasxnwsq wkeu" "eilgjwzay oamalmay uiray lbknbkay klay fnclmlay masxnwsqvay keuway"]
Test Case: 999 | Input/Output: ["bfmdurmzmiykoxn s rzkixhwebi rscdntvdi z bgqnrsoxp" "fmdurmzmiykoxnbay say zkixhwebiray scdntvdiray zay gqnrsoxpbay"]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 35ba1f6f26b4bf4a3bf22e92de13e0054660f326
GitHub link = https://github.com/lspector/Clojush/commit/35ba1f6f26b4bf4a3bf22e92de13e0054660f326
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 10
alternation-rate = 0.01
atom-generators = (ay   a e i o u aeiou #object[clojush.problems.software.pig_latin$fn__7462 0x4153a832 clojush.problems.software.pig_latin$fn__7462@4153a832] #object[clojush.problems.software.pig_latin$fn__7464 0x7b8d6c66 clojush.problems.software.pig_latin$fn__7464@7b8d6c66] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x30ed4034 clojush.instructions.tag$tag_instruction_erc$fn__2160@30ed4034] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x77e6053 clojush.instructions.tag$tagged_instruction_erc$fn__2166@77e6053] in1 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop string_fromchar exec_yankdup integer_yankdup string_flush boolean_swap exec_shove exec_y boolean_yank integer_eq string_butlast string_conjchar string_substring integer_mult boolean_or boolean_empty exec_s_when_autoconstructing char_dup_items char_iswhitespace string_first exec_do*while exec_string_iterate string_indexofchar integer_fromstring char_frominteger exec_dup_items boolean_dup_items exec_empty string_shove exec_rot char_pop exec_dup boolean_flush char_isdigit string_reverse exec_k char_rot print_char boolean_xor integer_gte boolean_dup_times string_replacefirst boolean_shove string_last print_boolean boolean_rot integer_div integer_lte integer_mod string_concat exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove string_dup_times char_swap integer_max char_dup_times string_eq integer_stackdepth string_take char_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq string_emptystring string_swap integer_yank exec_while integer_min exec_swap integer_fromchar string_stackdepth string_replacechar char_allfromstring char_yank string_pop integer_dup_items string_nth exec_do*range exec_if char_shove boolean_invert_first_then_and print_string integer_fromboolean char_yankdup boolean_frominteger string_setchar char_isletter print_integer boolean_eq string_occurrencesofchar string_replacefirstchar integer_flush string_replace char_dup exec_y_when_autoconstructing char_eq integer_gt boolean_not exec_do*times string_empty char_empty exec_pop string_yankdup string_removechar char_flush exec_s integer_lt string_containschar string_yank exec_noop integer_swap string_split string_fromboolean integer_dup string_rest string_rot exec_yank string_parse_to_chars integer_pop integer_empty print_exec integer_dec string_contains string_dup_items exec_stackdepth boolean_and string_length string_frominteger exec_flush exec_when boolean_invert_second_then_and string_dup boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.pig_latin$make_pig_latin_error_function_from_cases$the_actual_pig_latin_error_function__7474 0x4fbc516f clojush.problems.software.pig_latin$make_pig_latin_error_function_from_cases$the_actual_pig_latin_error_function__7474@4fbc516f]
error-threshold = 0
evalpush-limit = 2000
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 300
max-genome-size-in-initial-program = 500
max-point-evaluations = 1.0E101
max-points = 4000
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = false
problem-specific-initial-report = #object[clojush.problems.software.pig_latin$pig_latin_initial_report 0x72a0a60d clojush.problems.software.pig_latin$pig_latin_initial_report@72a0a60d]
problem-specific-report = #object[clojush.problems.software.pig_latin$pig_latin_report 0x85c3522 clojush.problems.software.pig_latin$pig_latin_report@85c3522]
random-screen = false
random-seed = 116 -43 -118 10 19 45 -17 56 -6 31 103 -124 59 73 -32 -95
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Pig Latin problem report - generation 0
Test total error for best: 13967
Test mean error for best: 13.96700
;;------------------------------
Outputs of best individual on training cases:

| Correct output: ""
| Program output: "ay\n"

| Correct output: "aay"
| Program output: "aay\n"

| Correct output: "bay"
| Program output: "bay\n"

| Correct output: "cay"
| Program output: "cay\n"

| Correct output: "day"
| Program output: "day\n"

| Correct output: "eay"
| Program output: "eay\n"

| Correct output: "iay"
| Program output: "iay\n"

| Correct output: "may"
| Program output: "may\n"

| Correct output: "oay"
| Program output: "oay\n"

| Correct output: "uay"
| Program output: "uay\n"

| Correct output: "yay"
| Program output: "yay\n"

| Correct output: "zay"
| Program output: "zay\n"

| Correct output: "inay"
| Program output: "inay\n"

| Correct output: "gmay"
| Program output: "mgay\n"

| Correct output: "jnay"
| Program output: "njay\n"

| Correct output: "eatay"
| Program output: "eatay\n"

| Correct output: "yklay"
| Program output: "lykay\n"

| Correct output: "ouchay"
| Program output: "ouchay\n"

| Correct output: "hrzfay"
| Program output: "fhrzay\n"

| Correct output: "wvbhay"
| Program output: "hwvbay\n"

| Correct output: "voqkay"
| Program output: "kvoqay\n"

| Correct output: "ellohay"
| Program output: "helloay\n"

| Correct output: "heretay"
| Program output: "thereay\n"

| Correct output: "orldway"
| Program output: "worlday\n"

| Correct output: "appleay"
| Program output: "appleay\n"

| Correct output: "kpmcnay"
| Program output: "nkpmcay\n"

| Correct output: "iekpbay"
| Program output: "iekpbay\n"

| Correct output: "uubay lay"
| Program output: "uub lay\n"

| Correct output: "vayay yay"
| Program output: "yva yay\n"

| Correct output: "day uay eay"
| Program output: "d u eay\n"

| Correct output: "ellowyay"
| Program output: "yelloway\n"

| Correct output: "orangeay"
| Program output: "orangeay\n"

| Correct output: "gxdjay jay"
| Program output: "jgxd jay\n"

| Correct output: "uzbnnpay"
| Program output: "uzbnnpay\n"

| Correct output: "iwzay tjay"
| Program output: "iwz jtay\n"

| Correct output: "cay aay hkay"
| Program output: "c a khay\n"

| Correct output: "ifblay bcay"
| Program output: "ifbl cbay\n"

| Correct output: "cvrtgvyay"
| Program output: "ycvrtgvay\n"

| Correct output: "umbrellaay"
| Program output: "umbrellaay\n"

| Correct output: "niujtray pay"
| Program output: "rniujt pay\n"

| Correct output: "ukay oay yyzay"
| Program output: "ku o zyyay\n"

| Correct output: "ikcmekslay"
| Program output: "ikcmekslay\n"

| Correct output: "csbay qay gzay"
| Program output: "bcs q zgay\n"

| Correct output: "hay xfbnpcgay"
| Program output: "h gxfbnpcay\n"

| Correct output: "wzlcay bay gray"
| Program output: "cwzl b rgay\n"

| Correct output: "dbpxhxxdnay"
| Program output: "ndbpxhxxday\n"

| Correct output: "wxay ycay kuzay"
| Program output: "xw cy zkuay\n"

| Correct output: "pay svsrjgyay"
| Program output: "p ysvsrjgay\n"

| Correct output: "tygieuokbtay"
| Program output: "ttygieuokbay\n"

| Correct output: "bay eqday laslay"
| Program output: "b eqd llasay\n"

| Correct output: "tlcdcay avykay"
| Program output: "ctlcd avykay\n"

| Correct output: "aiyabxzay ieay"
| Program output: "zaiyabx ieay\n"

| Correct output: "jsklay jexmakay"
| Program output: "ljsk kjexmaay\n"

| Correct output: "loyfay yay oay iray"
| Program output: "floy y o iray\n"

| Correct output: "fzkay oxnay qay yay"
| Program output: "kfz oxn q yay\n"

| Correct output: "lptbxxay jluaxay"
| Program output: "xlptbx xjluaay\n"

| Correct output: "ezmzay kqay egdcay"
| Program output: "zezm qk egdcay\n"

| Correct output: "bwgurtqmjvzhay"
| Program output: "hbwgurtqmjvzay\n"

| Correct output: "gay oay rcosjdqcay"
| Program output: "g o crcosjdqay\n"

| Correct output: "rcfay zbzjmtlyay"
| Program output: "frc yzbzjmtlay\n"

| Correct output: "vbeqtay bay vlcpay"
| Program output: "tvbeq b pvlcay\n"

| Correct output: "zffnay otekgvsnay"
| Program output: "nzff notekgvsay\n"

| Correct output: "vbday hqsqwzpay xay"
| Program output: "dvb phqsqwz xay\n"

| Correct output: "kay qwlkimamay uzay"
| Program output: "k mqwlkima uzay\n"

| Correct output: "expialidociousay"
| Program output: "expialidociousay\n"

| Correct output: "dwlusdaacltbpgay"
| Program output: "gdwlusdaacltbpay\n"

| Correct output: "oeypbeday xscryfay"
| Program output: "oeypbed fxscryay\n"

| Correct output: "fizasscxqqsqkgay"
| Program output: "gfizasscxqqsqkay\n"

| Correct output: "yutay envqdemlay ojay"
| Program output: "tyu envqdeml ojay\n"

| Correct output: "qgvnday gay aqray evgay"
| Program output: "dqgvn g raq evgay\n"

| Correct output: "estzbzcsgpojay ppay"
| Program output: "estzbzcsgpoj ppay\n"

| Correct output: "jay aay mkgxgcay ray aday"
| Program output: "j a cmkgxg r daay\n"

| Correct output: "outay atay hetay latepay"
| Program output: "out at the plateay\n"

| Correct output: "akay iobay sxay uhxay eway"
| Program output: "ka bio xs xuh eway\n"

| Correct output: "ellohay heretay orldway"
| Program output: "hello there worlday\n"

| Correct output: "anqay tay say uwvjmay bay fay"
| Program output: "anq t s uwvjm b fay\n"

| Correct output: "xay lxwkjigfay xymzjfay"
| Program output: "x flxwkjig fxymzjay\n"

| Correct output: "vxxcvasqasqzqay eqoay"
| Program output: "qvxxcvasqasqz eqoay\n"

| Correct output: "omyay kftay jmgolnnay kay"
| Program output: "yom tkf njmgoln kay\n"

| Correct output: "pclay bmkpay wjay ovay ikay"
| Program output: "lpc pbmk jw vo ikay\n"

| Correct output: "way kbnfay btay chcqjay gay"
| Program output: "w fkbn tb jchcq gay\n"

| Correct output: "kcnay fay gijay xbkokay hay"
| Program output: "nkc f jgi kxbko hay\n"

| Correct output: "iedmhay qay hgay ulpafmlay"
| Program output: "hiedm q gh lulpafmay\n"

| Correct output: "may bpfaepbygmgay ubygay"
| Program output: "m gbpfaepbygm ubygay\n"

| Correct output: "hicay pnay day ifgay bpcay uay"
| Program output: "chi np d gif cbp uay\n"

| Correct output: "apnay imetay onay lanetspay"
| Program output: "nap time on planetsay\n"

| Correct output: "wexzjbkaxwmay nwqnay mlay"
| Program output: "mwexzjbkaxw nnwq lmay\n"

| Correct output: "elay lltfxay shay lksqytqay"
| Program output: "le xlltf hs qlksqytay\n"

| Correct output: "jway qay ikarjray apyay fay tay"
| Program output: "wj q rikarj apy f tay\n"

| Correct output: "ortxvkcozselay tfjhjlay"
| Program output: "lortxvkcozse ltfjhjay\n"

| Correct output: "upercalifragilisticsay"
| Program output: "supercalifragilisticay\n"

| Correct output: "yzay isalnafrmay xnnoovzay"
| Program output: "zy isalnafrm zxnnoovay\n"

| Correct output: "enay viwbnuyay eyay vay etmkay"
| Program output: "ne yviwbnu ey v ketmay\n"

| Correct output: "day oobbhay dedray eorxaay kay"
| Program output: "d hoobb rded eorxa kay\n"

| Correct output: "bapyxyay usoibdrhvay fbcay"
| Program output: "ybapyx usoibdrhv cfbay\n"

| Correct output: "pgzadsgmuktyhwprzcay hay"
| Program output: "cpgzadsgmuktyhwprz hay\n"

| Correct output: "nqubtqpay say shcyzay ywnkay"
| Program output: "pnqubtq s zshcy kywnay\n"

| Correct output: "ovrxnkzqtway uwoxevzawnay"
| Program output: "ovrxnkzqtw uwoxevzawnay\n"

| Correct output: "pdlksbslmfyay ylkay vlay tcay"
| Program output: "ypdlksbslmf kyl lv ctay\n"

| Correct output: "agmccotoay lufmbkswcay oeay"
| Program output: "agmccoto clufmbksw oeay\n"

| Correct output: "vay uvay oay cray fuawsfchay zay jay"
| Program output: "v vu o rc hfuawsfc z jay\n"

| Correct output: "eeqbtay yfay qqgqdpdnexdlzay"
| Program output: "eeqbt fy zqqgqdpdnexdlay\n"

| Correct output: "usxgbqay msay jmcay tkay pay adxay"
| Program output: "usxgbq sm cjm kt p xaday\n"

| Correct output: "way khbraway hmechepfgrayday"
| Program output: "w wkhbra dhmechepfgrayay\n"

| Correct output: "otay ybay ejay calbhvcyppay phay"
| Program output: "to by ej pcalbhvcyp hpay\n"

| Correct output: "qay mkay ecay xay pay azay jay tvmwlpay"
| Program output: "q km ce x p az j ptvmwlay\n"

| Correct output: "ybmay iqzay xjay seklxthvxay rmay"
| Program output: "myb ziq jx xseklxthv mray\n"

| Correct output: "dgnay ymnkwhvbapay uabay sonday"
| Program output: "ndg pymnkwhvba bua dsonay\n"

| Correct output: "sxybwrbay pay kay zdxbay nprrehay"
| Program output: "bsxybwr p k bzdx hnprreay\n"

| Correct output: "kjay ljbay bcay dplnlruqay oyay may"
| Program output: "jk blj cb qdplnlru yo may\n"

| Correct output: "vsfjiyay lltdjay fceevay asay may"
| Program output: "yvsfji jlltd vfcee sa may\n"

| Correct output: "itavay ray bay vycqmqhay iway xxczay"
| Program output: "vita r b hvycqmq wi zxxcay\n"

| Correct output: "way fay ebhfiay ynay uwhwnakrpay tay"
| Program output: "w f ebhfi ny puwhwnakr tay\n"

| Correct output: "ufay xixay zzzcay jzay yaflkway sday"
| Program output: "fu xxi czzz zj wyaflk dsay\n"

| Correct output: "lybyay norjray iay usay ogegtay ntay"
| Program output: "ylyb rnorj i us togeg tnay\n"

| Correct output: "vay tay wfljprmay rxhlmraxnyhay cay"
| Program output: "v t mwfljpr hrxhlmraxny cay\n"

| Correct output: "kqhnvay khzay avay upay aggay may way way"
| Program output: "vkqhn zkh va up agg m w way\n"

| Correct output: "xgkyitay kay jfay dlay izay rkhay pcgay"
| Program output: "txgkyi k fj ld zi hrk gpcay\n"

| Correct output: "tjay aibvzcnmaay napwxnktcay pxray"
| Program output: "jt aibvzcnma cnapwxnkt rpxay\n"

| Correct output: "gqway vay rjaqay nwxay huyay way yay nay vay"
| Program output: "wgq v qrja xnw yhu w y n vay\n"

| Correct output: "dnxbkuufpvhedljay oijpgyay oulay"
| Program output: "jdnxbkuufpvhedl yoijpg oulay\n"

| Correct output: "udykjnepxay kbatqay ajxudljaqday"
| Program output: "udykjnepx qkbat dajxudljaqay\n"

| Correct output: "eoay qay yphyay lxucoshfacyay ehay njay"
| Program output: "eo q yyph ylxucoshfac he jnay\n"

| Correct output: "ejay avlfcqtay sctzzzymay yzsloqzpay"
| Program output: "je avlfcqt msctzzzy pyzsloqzay\n"

| Correct output: "oqay mzmay tkfvay fay offay tay uay iway frhay"
| Program output: "oq mmz vtkf f fof t u iw hfray\n"

| Correct output: "may xrbcfay gay zhilxefktnay rpiymay say"
| Program output: "m fxrbc g nzhilxefkt mrpiy say\n"

| Correct output: "lbvay jay owvwoay ywbyyay vtldqfay votay"
| Program output: "vlb j owvwo yywby fvtldq tvoay\n"

| Correct output: "gucuonay cday syray way ryfytzvioeunqay"
| Program output: "ngucuo dc rsy w qryfytzvioeunay\n"

| Correct output: "bcday xmoovpbay cvray okday yixay mbwjhay"
| Program output: "dbc bxmoovp rcv okd xyi hmbwjay\n"

| Correct output: "oazfay qay ucay tgenykynmjjay tay njpay ray"
| Program output: "oazf q cu jtgenykynmj t pnj ray\n"

| Correct output: "izmay gtlay lay amonmfxufflray hay gjay gay"
| Program output: "izm lgt l amonmfxufflr h jg gay\n"

| Correct output: "uejtezugrvwmxsamay kay amxpmzweagay"
| Program output: "uejtezugrvwmxsam k amxpmzweagay\n"

| Correct output: "hay gugay wnzzmhipay uay ttay lsonpmay ajqay"
| Program output: "h ggu pwnzzmhi u tt mlsonp ajqay\n"

| Correct output: "ghay acihbay uypaifay tvnaptay esjay cdray"
| Program output: "hg bacih fuypai ttvnap esj rcday\n"

| Correct output: "hay vmybofgoinpwgjay vgkwpsznreuapay"
| Program output: "h jvmybofgoinpwg pvgkwpsznreuaay\n"

| Correct output: "ibmbxbzday updbumpyhrouqbjay ifmwbay"
| Program output: "dibmbxbz updbumpyhrouqbj bifmway\n"

| Correct output: "hwodmday ozay wlogay ydsgay eqiyay uqtlway"
| Program output: "dhwodm oz gwlo gyds eqiy uqtlway\n"

| Correct output: "hylay ygay xnkay ccay aisevhay nay mqtay xcvzay"
| Program output: "lhy gy kxn cc aisevh n tmq zxcvay\n"

| Correct output: "ojdwnvejbcsway cay fhxjay eqcay aay bkpwray"
| Program output: "ojdwnvejbcsw c jfhx ceq a rbkpway\n"

| Correct output: "sjjjrgjcxjay nnhnjay hireaplpcwgbtmay"
| Program output: "jsjjjrgjcx jnnhn mhireaplpcwgbtay\n"

| Correct output: "yngay txfay iryqay qixxxay itaazay kkfdgyay"
| Program output: "gyn ftx iryq xqixx zitaa ykkfdgay\n"

| Correct output: "vjiuinay ejjay igvay kcbay jay eay ghlvfsay opay"
| Program output: "nvjiui ejj vig bkc j e sghlvf opay\n"

| Correct output: "bmay cgjpdzay qgay xay jay tay itgray pfbomay mvay"
| Program output: "mb zcgjpd gq x j t ritg mpfbo vmay\n"

| Correct output: "awsqndraay edwbzenfqdpay dzpjyugkpqzay"
| Program output: "awsqndra edwbzenfqdp zdzpjyugkpqay\n"

| Correct output: "eayyeukjccnay fezaxqgrsay iay unanxdspay"
| Program output: "neayyeukjcc sfezaxqgr i punanxdsay\n"

| Correct output: "wyvcxmaorpxbvjyay ahay ioekhzusay pmpbay"
| Program output: "ywyvcxmaorpxbvj ah ioekhzus bpmpay\n"

| Correct output: "fktay kvhwgay dclay ebwway jrgoeezay uqay ray uay"
| Program output: "tfk gkvhw ldc webw zjrgoee uq r uay\n"

| Correct output: "oyyay bdrfay apfyjay fbgay negay cvkswtay wimay"
| Program output: "oyy fbdr apfyj gfb gne tcvksw mwiay\n"

| Correct output: "ezay trzrppmexqtgvray qqzay lay fxvefpay rtay"
| Program output: "ze rtrzrppmexqtgv zqq l pfxvef tray\n"

| Correct output: "xay pbmhay ivay montay amay ulyhay hcvoiccihpay"
| Program output: "x hpbm vi tmon ma ulyh phcvoiccihay\n"

| Correct output: "oqsoay uhay lay bay ozay eqajvgay nay way qay ijcyuyay"
| Program output: "oqso uh l b zo eqajvg n w q yijcyuay\n"

| Correct output: "kxexbmawrxnay vakesbwdtay elay blmrvay vay xay"
| Program output: "nkxexbmawrx tvakesbwd le vblmr v xay\n"

| Correct output: "iyauzvgfxuhay htkfrtay uabseebay qay bhvpszay"
| Program output: "iyauzvgfxuh thtkfr uabseeb q zbhvpsay\n"

| Correct output: "gplvmtsmnwgpolqbpcunay fblnpay qay alduexay"
| Program output: "ngplvmtsmnwgpolqbpcu pfbln q xaldueay\n"

| Correct output: "uebnay vkzay cxay aay inxfzkwgay dmjgtkutqculay"
| Program output: "uebn zvk xc a inxfzkwg ldmjgtkutqcuay\n"

| Correct output: "jzkzpmday ibjqpzay uay bzphwdhvay ywyay rlknhay"
| Program output: "djzkzpm ibjqpz u vbzphwdh yyw hrlknay\n"

| Correct output: "esiyzfbay ubvgqhbzay cay prutay xqvwsmtbhcgay"
| Program output: "esiyzfb zubvgqhb c tpru gxqvwsmtbhcay\n"

| Correct output: "uay epay zjay fay ddkpay hxwhwjay xxfpqyrvdmvroray"
| Program output: "u ep jz f pddk jhxwhw rxxfpqyrvdmvroay\n"

| Correct output: "meray day lzceiray vray tlay wray amychmsnvvrhay kay"
| Program output: "rme d rlzcei rv lt rw amychmsnvvrh kay\n"

| Correct output: "jwcurgsay ixduzday aoay asowaay uyytlamxdqay tay"
| Program output: "sjwcurg ixduzd ao asowa quyytlamxd tay\n"

| Correct output: "aozfay wnsdxay wfray xay ilroeaeopay onkhay iay qjay"
| Program output: "faoz xwnsd rwf x ilroeaeop honk i jqay\n"

| Correct output: "itay ymblay aullwyay xay nay gpgyay iczkxbay zay nlnay"
| Program output: "it lymb yaullw x n ygpg biczkx z nnlay\n"

| Correct output: "iqxvay uay jkfajhmxay ielmvovay uukvcay imscfay tay"
| Program output: "viqx u xjkfajhm vielmvo cuukv imscf tay\n"

| Correct output: "jay gitskay lpushhpvay aday hgmfxohbkay qosay sgmay"
| Program output: "j kgits vlpushhp da khgmfxohb sqo msgay\n"

| Correct output: "ultfsqljxay eiay xgobmoday umejay wehlndarway iay"
| Program output: "ultfsqljx ei dxgobmo jume wwehlndar iay\n"

| Correct output: "say dyay onay qay szznhpay tday zufay eoiurngsmnzray pay"
| Program output: "s yd no q pszznh dt fzu reoiurngsmnz pay\n"

| Correct output: "xqay nwday byenjeday ibay yay idkay qhsjay uhroaiqbxay"
| Program output: "qx dnw dbyenje ib y kid jqhs xuhroaiqbay\n"

| Correct output: "fyipay cpnbuhebay udlway ryfpgay kxday uay zhwjay uqay"
| Program output: "pfyi bcpnbuhe wudl gryfp dkx u jzhw uqay\n"

| Correct output: "tay enay oqxwoeyhgjiqlbqvuxmay may exay jay hjeeyyay"
| Program output: "t ne moqxwoeyhgjiqlbqvux m xe j yhjeeyay\n"

| Correct output: "zhuhjdomrqigay mhrqqsay izkcuetulvnowkicqeray"
| Program output: "gzhuhjdomrqi smhrqq izkcuetulvnowkicqeray\n"

| Correct output: "eaxay iay hray ewqay kshgsvwubiwoaydzrzjczpzkay eay"
| Program output: "eax i rh qew kkshgsvwubiwoaydzrzjczpz eay\n"

| Correct output: "ouqoixzay wowlay ubpckuptay ocay uvay avway fofngmay eay"
| Program output: "ouqoixz lwow tubpckup oc uv wav mfofng eay\n"

| Correct output: "dkoway oay ixurfwjay iepcuelay jhay xay cay isxay qay ncmnay"
| Program output: "wdko o jixurfw liepcue hj x c xis q nncmay\n"

| Correct output: "wqay kezay enay aliay vpay gsqhknydkykhay qhkay jqsoohay"
| Program output: "qw zke en ali pv hgsqhknydkyk kqh hjqsooay\n"

| Correct output: "ibpay fyohdbcay kay narhngauwxkay tfnqkay bqxmfxkay kay"
| Program output: "ibp cfyohdb k knarhngauwx ktfnq kbqxmfx kay\n"

| Correct output: "hmfsndkay hprluobqay cay ieay avgay gggrypyapay supkday"
| Program output: "khmfsnd qhprluob c ie gav pgggrypya dsupkay\n"

| Correct output: "say anray alay ueuyaxmeucdgusay ekyay tqnay dfvaogfyyray"
| Program output: "s anr la ueuyaxmeucdgus yek ntq rdfvaogfyyay\n"

| Correct output: "bay ntepay czsxsgnay hjwetkruuovay maabay atay bay akay ezay"
| Program output: "b pnte nczsxsg vhjwetkruuo bmaa at b ak ezay\n"

| Correct output: "uay kiray oxbyczzapay abday czay yvtay ughpohzzjqkmspay eay"
| Program output: "u rki oxbyczzap dab zc tyv pughpohzzjqkms eay\n"

| Correct output: "tay oqxay eucjay otystflay omworfay rtjufecrsvway iay ymhay"
| Program output: "t xoq eucj lotystf fomwor wrtjufecrsv i hymay\n"

| Correct output: "tfrejugnay uay ray oay day edazcay oymay uvvhay day mbcofaaslay"
| Program output: "ntfrejug u r o d cedaz oym huvv d lmbcofaasay\n"

| Correct output: "upxpmtvofvgmqikijuoqay pay pvosteskssray say hfay vay vay"
| Program output: "qupxpmtvofvgmqikijuo p rpvosteskss s fh v vay\n"

| Correct output: "dxcywbphay jxqzwcbay epfay iftay qwomay ohecay mdvtjpholay"
| Program output: "hdxcywbp bjxqzwc fep ift mqwo cohe lmdvtjphoay\n"

| Correct output: "eozxvzwzbvxzbttay vay zay umtay efqbbpznstay ezkjxbqffay"
| Program output: "teozxvzwzbvxzbt v z tum tefqbbpzns ezkjxbqffay\n"

| Correct output: "kpgay ejay afxxqdzonay zay ommskeoay wglyzvay ivay ijbtay rbay"
| Program output: "gkp ej nafxxqdzo z ommskeo vwglyz vi tijb bray\n"

| Correct output: "xay oiuauktcay inay olay zybiwumay ukogaay hyzkay nway peqpday"
| Program output: "x oiuauktc ni lo mzybiwu ukoga khyz wn dpeqpay\n"

| Correct output: "oqtay zkcfay fsegay nay tbcblvay khrxmay cykay cay kay vldegxcay"
| Program output: "oqt fzkc gfse n vtbcbl mkhrx kcy c k cvldegxay\n"

| Correct output: "gdjocbpzprngvay yqdcndfzcvfcray idqday oay iay twfiyay bay"
| Program output: "vgdjocbpzprng ryqdcndfzcvfc didq o i ytwfi bay\n"

| Correct output: "esgswwszphay gmay pkay zegznrtaocay pqzfxzucgsuoway zkay"
| Program output: "esgswwszph mg kp czegznrtao wpqzfxzucgsuo kzay\n"

| Correct output: "nhrbay oyqnjfdoiay yvsay btay zgay egay nzfay qssboqowhwgay gay"
| Program output: "bnhr oyqnjfdoi syv tb gz ge fnz gqssboqowhw gay\n"

| Correct output: "irkaay rxay aqzgjqmoay rmsay xqfay cay iszoay ynnqvhhhygay opay"
| Program output: "irka xr aqzgjqmo srm fxq c iszo gynnqvhhhy poay\n"

| Correct output: "bxyvflgjgrgtay vkhnfrfay emlqjtjmwxealay fay uay gtyay ocay"
| Program output: "tbxyvflgjgrg fvkhnfr emlqjtjmwxeal f u ygt coay\n"

| Correct output: "azkvgxhsay vqsfjkay aay lfay dngdccjlwpay zaovay avetpkpmlay"
| Program output: "sazkvgxh kvqsfj a fl pdngdccjlw vzao avetpkpmlay\n"

| Correct output: "wsay rikay nay wufenkbay vay injay iay efay mooztlsdray yqjwcuobay"
| Program output: "sw kri n bwufenk v jin i fe rmooztlsd byqjwcuoay\n"

| Correct output: "way way way way way way way way way way way way way way way way way way way way way way way way way"
| Program output: "w w w w w w w w w w w w w w w w w w w w w w w w way\n"

| Correct output: "eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay eay"
| Program output: "e e e e e e e e e e e e e e e e e e e e e e e e eay\n"

| Correct output: "xay yay xay yay xay yay xay yay xay yay xay yay xay yay xay yay xay yay xay yay xay yay xay yay xay"
| Program output: "x y x y x y x y x y x y x y x y x y x y x y x y xay\n"

| Correct output: "uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuay"
| Program output: "uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuay\n"

| Correct output: "ssssssssssssssssssssssssssssssssssssssssssssssssssay"
| Program output: "ssssssssssssssssssssssssssssssssssssssssssssssssssay\n"

| Correct output: "ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay ahay"
| Program output: "ha ha ha ha ha ha ha ha ha ha ha ha ha ha ha ha haay\n"
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 0, :instruction char_rot} {:close 0, :instruction print_string} {:close 0, :instruction char_dup} {:close 0, :instruction \o} {:close 1, :instruction "ay"} {:close 0, :instruction print_string} {:close 1, :instruction string_eq} {:close 0, :instruction integer_sub} {:close 0, :instruction string_take} {:close 1, :instruction integer_yank} {:close 0, :instruction string_length} {:close 1, :instruction exec_s} {:close 0, :instruction char_pop} {:close 0, :instruction integer_mod} {:close 1, :instruction integer_gt} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_eq} {:close 0, :instruction string_yank} {:close 0, :instruction integer_lt} {:close 0, :instruction char_allfromstring} {:close 0, :instruction boolean_rot} {:close 0, :instruction string_dup} {:close 0, :instruction integer_div} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_empty} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_if} {:close 0, :instruction char_dup} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_do*count} {:close 0, :instruction string_first} {:close 1, :instruction string_take} {:close 1, :instruction string_split} {:close 0, :instruction integer_dup_times} {:close 0, :instruction string_fromboolean} {:close 0, :instruction \y} {:close 0, :instruction string_take} {:close 0, :instruction string_fromboolean} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction boolean_xor} {:close 1, :instruction \o} {:close 0, :instruction boolean_eq} {:close 1, :instruction string_flush} {:close 1, :instruction string_flush} {:close 0, :instruction string_fromboolean} {:close 0, :instruction print_string} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_inc} {:close 0, :instruction string_butlast} {:close 1, :instruction boolean_rot} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction string_fromchar} {:close 0, :instruction char_dup_items} {:close 0, :instruction integer_div} {:close 0, :instruction string_rest} {:close 0, :instruction string_rot} {:close 0, :instruction string_contains} {:close 0, :instruction "btrin w"} {:close 0, :instruction char_yankdup} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction string_nth} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction char_flush} {:close 0, :instruction integer_max} {:close 0, :instruction exec_rot} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction char_flush} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_dup_times} {:close 0, :instruction string_parse_to_chars} {:close 1, :instruction string_flush} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction string_contains} {:close 0, :instruction integer_eq} {:close 0, :instruction string_reverse} {:close 0, :instruction string_take} {:close 1, :instruction char_iswhitespace} {:close 0, :instruction integer_fromstring} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_yank} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_flush} {:close 1, :instruction "aeiou"} {:close 0, :instruction string_flush} {:close 1, :instruction string_stackdepth} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction char_shove} {:close 0, :instruction \d} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction integer_max} {:close 0, :instruction string_rot} {:close 0, :instruction \A} {:close 0, :instruction string_last} {:close 0, :instruction integer_empty} {:close 0, :instruction print_newline} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction char_shove} {:close 0, :instruction string_emptystring} {:close 0, :instruction exec_flush} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction char_dup_times} {:close 2, :instruction boolean_and} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_dup_items} {:close 0, :instruction string_dup} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction char_isdigit} {:close 0, :instruction integer_gt} {:close 0, :instruction char_dup_items} {:close 0, :instruction string_containschar} {:close 0, :instruction string_removechar} {:close 0, :instruction string_stackdepth} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup} {:close 1, :instruction exec_rot} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction \o} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_yankdup} {:close 2, :instruction string_emptystring} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction boolean_not} {:close 0, :instruction string_conjchar} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_exec} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction string_stackdepth} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_and} {:close 0, :instruction char_yank} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_fromchar} {:close 0, :instruction boolean_or} {:close 1, :instruction char_dup_items} {:close 0, :instruction string_concat} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_empty} {:close 1, :instruction boolean_and} {:close 1, :instruction \a} {:close 1, :instruction string_removechar} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_empty} {:close 2, :instruction string_stackdepth} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_dup} {:close 2, :instruction string_rest} {:close 0, :instruction string_split} {:close 0, :instruction \u} {:close 0, :instruction \o} {:close 2, :instruction exec_while} {:close 0, :instruction string_frominteger} {:close 0, :instruction string_conjchar} {:close 0, :instruction exec_y} {:close 1, :instruction integer_dup} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_gte} {:close 1, :instruction integer_empty} {:close 0, :instruction string_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_empty} {:close 0, :instruction print_string} {:close 0, :instruction char_dup_items} {:close 0, :instruction exec_eq} {:close 1, :instruction integer_yankdup} {:close 1, :instruction exec_if} {:close 0, :instruction string_last} {:close 2, :instruction integer_fromstring} {:close 0, :instruction tagged_552} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction exec_while} {:close 0, :instruction string_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction \a} {:close 1, :instruction boolean_or} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction char_yankdup} {:close 0, :instruction char_stackdepth} {:close 1, :instruction exec_string_iterate} {:close 0, :instruction exec_when} {:close 0, :instruction string_setchar} {:close 1, :instruction exec_do*times} {:close 0, :instruction char_swap} {:close 1, :instruction integer_sub} {:close 1, :instruction integer_yank} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_and} {:close 0, :instruction string_conjchar} {:close 0, :instruction "aeiou"} {:close 0, :instruction string_contains} {:close 0, :instruction boolean_yank} {:close 1, :instruction string_reverse} {:close 0, :instruction char_isdigit} {:close 0, :instruction string_substring} {:close 0, :instruction string_first} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_string_iterate} {:close 2, :instruction string_length} {:close 0, :instruction char_yankdup} {:close 0, :instruction integer_lt} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_rest} {:close 0, :instruction string_eq} {:close 0, :instruction string_eq} {:close 0, :instruction tag_char_674} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_shove} {:close 0, :instruction string_replace} {:close 0, :instruction boolean_rot} {:close 1, :instruction char_pop} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction \a} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_dup} {:close 1, :instruction exec_when} {:close 0, :instruction integer_dup} {:close 0, :instruction char_swap} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_swap} {:close 0, :instruction string_replacefirstchar} {:close 1, :instruction string_last} {:close 0, :instruction string_swap} {:close 0, :instruction exec_do*while} {:close 0, :instruction string_rot} {:close 0, :instruction string_replacefirst} {:close 2, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction string_first} {:close 0, :instruction exec_if} {:close 0, :instruction integer_sub} {:close 0, :instruction char_eq} {:close 0, :instruction \i} {:close 0, :instruction string_fromchar} {:close 0, :instruction exec_if} {:close 1, :instruction "pzmcvogty"} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_sub} {:close 1, :instruction char_rot} {:close 0, :instruction string_conjchar} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction string_pop} {:close 0, :instruction string_first} {:close 1, :instruction char_iswhitespace} {:close 0, :instruction string_replacechar} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_eq} {:close 0, :instruction string_stackdepth} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction string_pop} {:close 0, :instruction string_yank} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction char_rot} {:close 0, :instruction exec_s} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_dup_items} {:close 0, :instruction char_empty} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 0, :instruction string_yank} {:close 0, :instruction string_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction integer_mult} {:close 1, :instruction print_char} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction string_replacechar} {:close 0, :instruction integer_add} {:close 0, :instruction integer_fromstring} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction string_shove} {:close 0, :instruction char_isletter} {:close 1, :instruction string_dup} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction string_dup_items} {:close 0, :instruction char_stackdepth} {:close 0, :instruction string_first} {:close 0, :instruction char_iswhitespace} {:close 0, :instruction string_nth} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction char_isdigit} {:close 0, :instruction string_butlast} {:close 2, :instruction integer_max} {:close 0, :instruction integer_inc} {:close 0, :instruction char_isdigit} {:close 0, :instruction exec_empty} {:close 0, :instruction string_fromboolean} {:close 0, :instruction integer_gte} {:close 0, :instruction print_newline} {:close 0, :instruction \e} {:close 1, :instruction integer_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_xor} {:close 0, :instruction string_containschar} {:close 0, :instruction exec_do*range} {:close 0, :instruction string_swap} {:close 0, :instruction string_dup_times} {:close 0, :instruction string_fromboolean} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction string_substring} {:close 0, :instruction string_replacefirst} {:close 0, :instruction string_reverse} {:close 0, :instruction \i} {:close 0, :instruction print_integer} {:close 1, :instruction integer_dup_items} {:close 0, :instruction string_shove} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_dup_items} {:close 0, :instruction exec_dup} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction print_newline} {:close 0, :instruction char_dup} {:close 0, :instruction string_yank} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction char_allfromstring} {:close 1, :instruction string_empty} {:close 0, :instruction char_isdigit} {:close 1, :instruction boolean_rot} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction string_yankdup} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_while} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_dup_times} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_do*times} {:close 1, :instruction integer_yankdup} {:close 2, :instruction boolean_xor} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup} {:close 0, :instruction "ay"} {:close 1, :instruction exec_do*count} {:close 0, :instruction string_dup} {:close 0, :instruction string_indexofchar} {:close 0, :instruction string_removechar} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction string_substring} {:close 0, :instruction "ujix"} {:close 0, :instruction integer_fromchar} {:close 0, :instruction string_concat} {:close 0, :instruction exec_rot} {:close 0, :instruction char_dup_times} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_shove} {:close 0, :instruction char_dup_items} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction "edxhyfczsdqtqv"} {:close 0, :instruction boolean_empty} {:close 0, :instruction char_empty} {:close 1, :instruction exec_do*times} {:close 1, :instruction tag_string_546})
Lexicase best program: (in1 char_rot print_string char_dup \o "ay" print_string string_eq integer_sub string_take integer_yank string_length exec_s () (char_pop integer_mod integer_gt) (boolean_not boolean_eq string_yank integer_lt char_allfromstring boolean_rot string_dup integer_div string_fromboolean exec_empty exec_swap (exec_yank exec_if (char_dup integer_pop) (exec_do*count (string_first string_take) string_split) integer_dup_times string_fromboolean \y string_take string_fromboolean string_replacefirstchar boolean_xor \o) (boolean_eq string_flush) string_flush) string_fromboolean print_string integer_fromboolean integer_inc string_butlast boolean_rot integer_stackdepth string_fromchar char_dup_items integer_div string_rest string_rot string_contains "btrin w" char_yankdup integer_gte boolean_frominteger string_nth exec_yank exec_do*while (char_flush integer_max exec_rot (integer_inc) (exec_do*while (boolean_dup_items exec_y (boolean_stackdepth char_flush integer_mult integer_inc exec_dup_times (string_parse_to_chars string_flush) boolean_dup_items string_contains integer_eq string_reverse string_take char_iswhitespace) integer_fromstring boolean_swap integer_yank print_newline boolean_flush "aeiou") string_flush string_stackdepth) (integer_yankdup exec_k_when_autoconstructing () (char_shove \d string_occurrencesofchar integer_max string_rot \A string_last integer_empty print_newline exec_s_when_autoconstructing (char_shove string_emptystring exec_flush string_occurrencesofchar char_dup_times boolean_and) () (exec_noop integer_dup_items) string_dup exec_flush boolean_shove char_isdigit integer_gt char_dup_items string_containschar string_removechar string_stackdepth exec_string_iterate (integer_lt exec_y_when_autoconstructing (exec_dup (exec_rot () (boolean_dup_items \o integer_shove integer_sub boolean_empty integer_yankdup string_emptystring) () boolean_invert_first_then_and string_replacefirstchar exec_string_iterate (boolean_not string_conjchar boolean_invert_second_then_and boolean_swap print_exec (boolean_yankdup string_stackdepth) integer_min) boolean_and char_yank integer_fromboolean) integer_sub integer_fromchar boolean_or char_dup_items) string_concat integer_dup integer_empty boolean_and) \a) string_removechar) boolean_invert_first_then_and boolean_empty string_stackdepth) boolean_frominteger integer_dup string_rest string_split \u \o exec_while () string_frominteger string_conjchar exec_y (integer_dup) boolean_flush exec_k_when_autoconstructing (boolean_dup integer_gte integer_empty) (string_dup_times integer_sub boolean_empty print_string char_dup_items exec_eq integer_yankdup) exec_if () (string_last integer_fromstring) tagged_552 exec_string_iterate (exec_while (string_empty integer_yankdup \a boolean_or) exec_noop) integer_dec exec_rot (exec_s_when_autoconstructing (char_yankdup char_stackdepth exec_string_iterate () exec_when (string_setchar exec_do*times () char_swap integer_sub) integer_yank) (integer_yank boolean_rot boolean_and string_conjchar "aeiou" string_contains boolean_yank string_reverse) (char_isdigit string_substring string_first integer_gte exec_yank exec_string_iterate (string_length)) char_yankdup integer_lt string_parse_to_chars string_rest string_eq string_eq tag_char_674 boolean_rot integer_shove string_replace boolean_rot char_pop) (exec_s_when_autoconstructing (\a boolean_rot integer_dup_items integer_dup exec_when () integer_dup char_swap integer_dup_times integer_min boolean_invert_first_then_and boolean_swap string_replacefirstchar string_last) (string_swap exec_do*while (string_rot string_replacefirst exec_swap () () boolean_xor exec_do*count () exec_flush string_first exec_if (integer_sub char_eq \i string_fromchar exec_if ("pzmcvogty") (integer_sub integer_sub char_rot) string_conjchar exec_stackdepth string_pop) (string_first char_iswhitespace) string_replacechar boolean_empty) exec_shove (exec_eq string_stackdepth string_occurrencesofchar string_pop string_yank exec_s_when_autoconstructing () (exec_y_when_autoconstructing (char_rot exec_s (integer_mult exec_dup_items char_empty exec_do*range (print_integer string_yank string_flush boolean_and string_occurrencesofchar integer_mult print_char) boolean_dup_times string_replacechar integer_add integer_fromstring string_occurrencesofchar boolean_invert_second_then_and string_shove char_isletter string_dup) (boolean_frominteger) (string_dup_items char_stackdepth string_first char_iswhitespace string_nth string_replacefirstchar) char_isdigit string_butlast integer_max)) (integer_inc char_isdigit exec_empty string_fromboolean integer_gte print_newline \e integer_shove) boolean_invert_first_then_and boolean_xor string_containschar exec_do*range (string_swap string_dup_times string_fromboolean string_replacefirstchar string_substring string_replacefirst string_reverse \i print_integer integer_dup_items) string_shove integer_rot exec_dup_items exec_dup (string_replacefirstchar print_newline char_dup string_yank boolean_frominteger) char_allfromstring) string_empty) (char_isdigit boolean_rot) integer_stackdepth string_yankdup exec_yankdup exec_while (exec_empty integer_dup_times) exec_do*while (exec_do*times (integer_yankdup) boolean_xor)) (exec_swap (integer_dup "ay" exec_do*count () string_dup string_indexofchar string_removechar string_replacefirstchar) (boolean_yankdup string_substring "ujix" integer_fromchar string_concat exec_rot (char_dup_times integer_dup_items boolean_shove char_dup_items boolean_swap boolean_not "edxhyfczsdqtqv" boolean_empty char_empty exec_do*times () tag_string_546) () ())))
Lexicase best errors: [3 1 1 1 1 1 1 1 1 1 1 1 1 3 3 1 3 1 3 3 3 3 3 3 1 3 1 3 5 5 3 1 5 1 5 7 5 3 1 5 8 1 9 5 9 3 8 4 3 7 5 5 7 9 9 7 8 3 7 6 9 7 9 7 1 3 5 3 7 10 3 13 11 14 11 11 9 5 13 15 14 15 12 7 18 12 11 13 14 7 3 7 14 13 9 5 13 3 14 7 17 7 17 9 14 19 18 15 15 18 15 18 13 20 19 13 19 22 12 24 8 9 16 12 24 17 18 15 21 18 16 5 18 20 9 9 17 22 17 11 20 23 27 7 13 11 25 23 20 20 21 18 13 13 16 18 15 20 22 15 25 25 21 23 17 26 26 27 18 9 16 22 30 25 21 22 18 25 23 25 27 18 25 17 28 26 30 20 19 28 26 20 22 31 49 49 49 1 1 35]
Lexicase best number of elite cases: 186
Lexicase best total error: 2549
Lexicase best mean error: 12.745
Lexicase best size: 465
Percent parens: 0.172
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction char_yank} {:close 0, :instruction boolean_flush} {:close 1, :instruction string_concat} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_swap} {:close 2, :instruction boolean_stackdepth} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_replacefirst} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction char_frominteger} {:close 0, :instruction exec_do*times} {:close 1, :instruction exec_swap} {:close 0, :instruction integer_eq} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_dup_times} {:close 0, :instruction string_containschar} {:close 0, :instruction integer_rot} {:close 0, :instruction char_flush} {:close 0, :instruction integer_yank} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction print_char} {:close 0, :instruction string_length} {:close 0, :instruction string_pop} {:close 0, :instruction string_rest} {:close 0, :instruction exec_shove} {:close 0, :instruction string_swap} {:close 0, :instruction in1} {:close 0, :instruction string_substring} {:close 0, :instruction exec_dup_items} {:close 2, :instruction "ay"} {:close 0, :instruction string_last} {:close 0, :instruction char_yankdup} {:close 2, :instruction integer_pop} {:close 0, :instruction string_swap} {:close 0, :instruction exec_y} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_empty} {:close 0, :instruction exec_swap} {:close 0, :instruction char_dup} {:close 0, :instruction string_eq} {:close 0, :instruction string_fromchar} {:close 1, :instruction integer_fromchar} {:close 1, :instruction integer_min} {:close 1, :instruction integer_yank} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_flush} {:close 0, :instruction char_allfromstring} {:close 0, :instruction string_concat} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_eq} {:close 1, :instruction integer_gt} {:close 0, :instruction tagged_243} {:close 0, :instruction string_frominteger} {:close 0, :instruction char_yank} {:close 1, :instruction string_yank} {:close 1, :instruction boolean_flush} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction integer_shove} {:close 1, :instruction boolean_swap} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_xor} {:close 0, :instruction string_shove} {:close 0, :instruction exec_rot} {:close 1, :instruction boolean_shove} {:close 0, :instruction print_boolean} {:close 0, :instruction string_rot} {:close 1, :instruction \o} {:close 1, :instruction char_frominteger} {:close 0, :instruction exec_pop} {:close 0, :instruction char_dup_items} {:close 0, :instruction char_dup} {:close 0, :instruction exec_shove} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction string_eq} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_empty} {:close 0, :instruction string_stackdepth} {:close 1, :instruction string_replace} {:close 0, :instruction exec_do*times} {:close 0, :instruction char_stackdepth} {:close 0, :instruction string_fromchar} {:close 0, :instruction boolean_pop} {:close 0, :instruction integer_sub} {:close 0, :instruction string_butlast} {:close 1, :instruction string_emptystring} {:close 0, :instruction string_shove} {:close 1, :instruction char_shove} {:close 0, :instruction string_setchar} {:close 1, :instruction \o} {:close 0, :instruction boolean_dup} {:close 0, :instruction string_dup_items} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_invert_first_then_and} {:close 1, :instruction boolean_xor} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_if} {:close 0, :instruction string_pop} {:close 0, :instruction char_yankdup} {:close 0, :instruction integer_dup_times} {:close 0, :instruction \a} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_shove} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction boolean_swap} {:close 1, :instruction string_emptystring} {:close 0, :instruction \A} {:close 0, :instruction \a} {:close 1, :instruction integer_gt} {:close 0, :instruction exec_while} {:close 0, :instruction string_butlast} {:close 0, :instruction string_nth} {:close 0, :instruction string_take} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_dup_items} {:close 0, :instruction exec_s} {:close 2, :instruction "aeiou"} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_yankdup} {:close 1, :instruction string_split} {:close 0, :instruction char_rot} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_swap} {:close 1, :instruction string_pop} {:close 0, :instruction string_containschar} {:close 0, :instruction integer_div} {:close 0, :instruction char_dup_times} {:close 1, :instruction char_isdigit} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_swap} {:close 0, :instruction char_dup_times} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_dup} {:close 0, :instruction string_replace} {:close 0, :instruction string_yankdup} {:close 0, :instruction exec_eq} {:close 0, :instruction \i} {:close 1, :instruction char_yankdup} {:close 0, :instruction integer_gt} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_boolean} {:close 0, :instruction boolean_shove} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction integer_dec} {:close 1, :instruction string_take} {:close 0, :instruction char_dup_times} {:close 1, :instruction integer_lte} {:close 0, :instruction exec_dup_items} {:close 0, :instruction char_yank} {:close 1, :instruction char_frominteger} {:close 1, :instruction integer_shove} {:close 0, :instruction string_contains} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction exec_s_when_autoconstructing} {:close 1, :instruction integer_mod} {:close 0, :instruction integer_dup} {:close 0, :instruction char_empty} {:close 0, :instruction \i} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_shove} {:close 0, :instruction char_stackdepth} {:close 1, :instruction \e} {:close 1, :instruction exec_dup} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_dup} {:close 2, :instruction integer_max} {:close 0, :instruction char_shove} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction char_stackdepth} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_fromboolean} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction char_rot} {:close 1, :instruction char_rot} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction boolean_pop} {:close 0, :instruction char_isletter} {:close 1, :instruction string_take} {:close 0, :instruction char_isletter} {:close 0, :instruction string_empty} {:close 0, :instruction integer_pop} {:close 0, :instruction exec_do*times} {:close 1, :instruction boolean_and} {:close 0, :instruction \2} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_k} {:close 1, :instruction exec_s} {:close 0, :instruction char_shove} {:close 0, :instruction integer_fromchar} {:close 0, :instruction string_butlast} {:close 0, :instruction char_swap} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_k} {:close 0, :instruction string_fromchar} {:close 0, :instruction integer_max} {:close 1, :instruction char_yank} {:close 0, :instruction "aeiou"} {:close 0, :instruction boolean_flush} {:close 0, :instruction string_split} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_flush} {:close 1, :instruction integer_mod} {:close 0, :instruction print_integer} {:close 0, :instruction in1} {:close 0, :instruction boolean_eq} {:close 0, :instruction "f"} {:close 0, :instruction string_frominteger} {:close 1, :instruction boolean_xor} {:close 0, :instruction string_nth} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_yankdup} {:close 0, :instruction char_empty} {:close 0, :instruction string_rot} {:close 0, :instruction exec_when} {:close 0, :instruction char_flush} {:close 0, :instruction string_shove} {:close 0, :instruction string_frominteger} {:close 0, :instruction \o} {:close 0, :instruction integer_dec} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction print_char} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_yankdup} {:close 0, :instruction boolean_yank} {:close 0, :instruction string_indexofchar} {:close 0, :instruction exec_dup_items} {:close 1, :instruction exec_swap} {:close 0, :instruction string_setchar} {:close 0, :instruction "aeiou"} {:close 0, :instruction \u} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_eq} {:close 0, :instruction exec_swap} {:close 0, :instruction char_flush} {:close 0, :instruction integer_pop} {:close 1, :instruction string_empty} {:close 0, :instruction char_eq} {:close 0, :instruction exec_when} {:close 0, :instruction string_conjchar} {:close 0, :instruction integer_empty} {:close 0, :instruction char_swap} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_and} {:close 0, :instruction string_rot} {:close 0, :instruction exec_pop} {:close 0, :instruction exec_do*while} {:close 0, :instruction string_indexofchar} {:close 0, :instruction boolean_dup_items} {:close 2, :instruction string_first} {:close 1, :instruction "aeiou"} {:close 0, :instruction char_iswhitespace} {:close 0, :instruction string_replacechar} {:close 0, :instruction boolean_xor} {:close 0, :instruction string_fromchar} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_do*count} {:close 0, :instruction char_yankdup} {:close 1, :instruction string_contains} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_yankdup} {:close 1, :instruction boolean_or} {:close 0, :instruction exec_y} {:close 0, :instruction print_newline} {:close 0, :instruction integer_pop} {:close 0, :instruction char_stackdepth} {:close 0, :instruction string_shove} {:close 0, :instruction char_empty} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_shove} {:close 1, :instruction char_empty} {:close 0, :instruction \o} {:close 0, :instruction string_butlast} {:close 0, :instruction print_char} {:close 0, :instruction char_pop} {:close 1, :instruction exec_dup_times} {:close 0, :instruction char_isdigit} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_yankdup} {:close 1, :instruction string_containschar} {:close 0, :instruction string_pop} {:close 0, :instruction string_yank} {:close 1, :instruction char_yankdup} {:close 0, :instruction string_substring} {:close 0, :instruction integer_add} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_while} {:close 0, :instruction print_char} {:close 0, :instruction string_indexofchar} {:close 0, :instruction "ay"} {:close 0, :instruction string_emptystring} {:close 1, :instruction boolean_not} {:close 1, :instruction string_conjchar} {:close 1, :instruction \i} {:close 0, :instruction boolean_and} {:close 0, :instruction char_iswhitespace} {:close 0, :instruction string_shove} {:close 0, :instruction \u} {:close 0, :instruction integer_eq} {:close 0, :instruction exec_empty} {:close 1, :instruction string_occurrencesofchar} {:close 0, :instruction string_shove} {:close 0, :instruction string_dup} {:close 0, :instruction string_dup} {:close 0, :instruction integer_empty} {:close 0, :instruction char_frominteger} {:close 0, :instruction string_removechar} {:close 0, :instruction exec_yankdup} {:close 0, :instruction print_newline} {:close 0, :instruction string_fromboolean} {:close 0, :instruction char_isletter} {:close 0, :instruction char_eq} {:close 0, :instruction char_rot} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_dup_times} {:close 0, :instruction string_flush} {:close 1, :instruction char_yankdup} {:close 0, :instruction integer_lt} {:close 0, :instruction char_empty} {:close 1, :instruction integer_lt} {:close 0, :instruction string_indexofchar} {:close 0, :instruction \space} {:close 0, :instruction exec_do*count} {:close 0, :instruction char_rot} {:close 0, :instruction boolean_eq} {:close 0, :instruction string_stackdepth} {:close 1, :instruction exec_dup_times} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_while} {:close 0, :instruction \e} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_fromchar} {:close 0, :instruction \e} {:close 1, :instruction exec_do*range} {:close 0, :instruction exec_do*range} {:close 0, :instruction "ay"} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_if} {:close 0, :instruction string_shove} {:close 0, :instruction \Q} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction char_yankdup} {:close 1, :instruction exec_pop} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_do*while} {:close 1, :instruction integer_dup_items} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction char_dup_items} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction exec_dup_times} {:close 0, :instruction char_frominteger} {:close 1, :instruction string_setchar} {:close 0, :instruction string_first} {:close 0, :instruction string_reverse} {:close 0, :instruction string_last} {:close 1, :instruction integer_yankdup} {:close 0, :instruction string_removechar} {:close 0, :instruction char_swap} {:close 0, :instruction string_empty} {:close 2, :instruction char_yankdup} {:close 0, :instruction string_stackdepth} {:close 0, :instruction boolean_yank} {:close 0, :instruction string_substring} {:close 0, :instruction string_indexofchar} {:close 0, :instruction string_replace} {:close 0, :instruction char_dup_items} {:close 0, :instruction char_isletter} {:close 0, :instruction exec_when} {:close 0, :instruction string_yankdup} {:close 0, :instruction char_shove} {:close 1, :instruction integer_fromstring} {:close 0, :instruction char_dup_times} {:close 0, :instruction integer_min} {:close 1, :instruction char_yankdup} {:close 0, :instruction integer_gte} {:close 0, :instruction char_yankdup} {:close 0, :instruction string_containschar} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_yank} {:close 0, :instruction string_dup} {:close 0, :instruction string_substring} {:close 0, :instruction integer_max} {:close 0, :instruction string_dup_times} {:close 0, :instruction boolean_swap} {:close 0, :instruction \o} {:close 0, :instruction string_emptystring} {:close 0, :instruction exec_noop} {:close 0, :instruction char_yank} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_yankdup} {:close 0, :instruction integer_div} {:close 0, :instruction \9} {:close 0, :instruction string_dup} {:close 1, :instruction integer_dup_times} {:close 0, :instruction boolean_pop} {:close 0, :instruction char_shove} {:close 0, :instruction exec_do*range} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_pop} {:close 0, :instruction char_iswhitespace} {:close 0, :instruction integer_dup_items} {:close 0, :instruction string_dup} {:close 0, :instruction string_replacechar} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup_items} {:close 1, :instruction integer_yank} {:close 0, :instruction string_containschar} {:close 0, :instruction "aeiou"} {:close 0, :instruction integer_dup_times} {:close 0, :instruction string_replace} {:close 0, :instruction string_take} {:close 0, :instruction \a} {:close 0, :instruction string_dup_times} {:close 1, :instruction exec_dup} {:close 1, :instruction tagged_581} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_pop} {:close 0, :instruction char_flush} {:close 0, :instruction integer_fromstring} {:close 0, :instruction "kqtv rbymroii"} {:close 0, :instruction \a} {:close 1, :instruction integer_empty} {:close 0, :instruction string_take} {:close 0, :instruction boolean_flush} {:close 1, :instruction "aeiou"} {:close 0, :instruction integer_yank} {:close 0, :instruction \space} {:close 0, :instruction boolean_pop} {:close 1, :instruction integer_fromstring} {:close 0, :instruction string_pop} {:close 0, :instruction char_yankdup} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction \k} {:close 0, :instruction integer_empty} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_pop} {:close 0, :instruction string_nth} {:close 0, :instruction boolean_eq} {:close 0, :instruction string_fromchar} {:close 0, :instruction string_conjchar} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction string_substring} {:close 0, :instruction string_last} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction string_stackdepth} {:close 1, :instruction string_parse_to_chars})
Zero cases best program: (char_yank boolean_flush string_concat integer_dec exec_swap (boolean_stackdepth) () integer_dup_items string_replacefirst boolean_frominteger char_frominteger exec_do*times (exec_swap () (integer_eq boolean_yankdup boolean_eq exec_dup_times (string_containschar integer_rot char_flush integer_yank exec_yank integer_fromboolean exec_dup_times (boolean_yank integer_lte exec_string_iterate (print_char string_length string_pop string_rest exec_shove (string_swap in1 string_substring exec_dup_items "ay")) string_last char_yankdup integer_pop)) string_swap exec_y (exec_shove (exec_do*count (exec_empty exec_swap (char_dup string_eq string_fromchar integer_fromchar) (integer_min) integer_yank) integer_dup integer_flush) char_allfromstring string_concat integer_dup_times boolean_dup_items exec_dup_times (boolean_eq integer_gt) tagged_243 string_frominteger char_yank string_yank) boolean_flush) string_parse_to_chars integer_shove boolean_swap) boolean_invert_second_then_and boolean_xor string_shove exec_rot (boolean_shove) (print_boolean string_rot \o) (char_frominteger) exec_pop (char_dup_items char_dup exec_shove (integer_gt boolean_dup_items string_eq) integer_sub exec_empty string_stackdepth string_replace) exec_do*times (char_stackdepth string_fromchar boolean_pop integer_sub string_butlast string_emptystring) string_shove char_shove string_setchar \o boolean_dup string_dup_items integer_pop boolean_invert_first_then_and boolean_xor integer_fromboolean integer_empty integer_mod exec_if (string_pop char_yankdup integer_dup_times \a boolean_yankdup integer_shove integer_min) (boolean_yankdup boolean_swap string_emptystring) \A \a integer_gt exec_while (string_butlast string_nth string_take integer_gte exec_dup_items exec_s ("aeiou") () (integer_div boolean_yankdup) string_split) char_rot exec_swap (boolean_swap string_pop) (string_containschar integer_div char_dup_times char_isdigit) boolean_dup integer_stackdepth exec_do*count (exec_swap (char_dup_times integer_gte exec_dup (string_replace string_yankdup exec_eq \i char_yankdup) integer_gt boolean_invert_first_then_and print_boolean boolean_shove boolean_dup_times integer_dec) (string_take) char_dup_times integer_lte) exec_dup_items char_yank char_frominteger integer_shove string_contains exec_k_when_autoconstructing () (exec_s_when_autoconstructing () (integer_mod) (integer_dup char_empty \i exec_y (boolean_shove char_stackdepth \e) exec_dup () exec_s_when_autoconstructing () (integer_dup integer_max) () char_shove boolean_stackdepth) char_stackdepth boolean_yankdup string_parse_to_chars string_fromboolean boolean_frominteger char_rot char_rot) integer_flush boolean_frominteger boolean_pop char_isletter string_take char_isletter string_empty integer_pop exec_do*times (boolean_and) \2 exec_yank exec_k (exec_s () (char_shove integer_fromchar string_butlast char_swap boolean_or exec_k (string_fromchar integer_max char_yank) ("aeiou" boolean_flush string_split exec_pop (exec_flush integer_mod) print_integer in1 boolean_eq "f" string_frominteger boolean_xor) string_nth exec_y_when_autoconstructing (integer_yankdup char_empty string_rot exec_when (char_flush string_shove string_frominteger \o integer_dec string_parse_to_chars print_char exec_y_when_autoconstructing () integer_yankdup boolean_yank string_indexofchar exec_dup_items exec_swap () (string_setchar "aeiou" \u integer_rot boolean_eq exec_swap (char_flush integer_pop string_empty) (char_eq exec_when (string_conjchar integer_empty char_swap exec_k_when_autoconstructing (integer_mult boolean_and string_rot exec_pop (exec_do*while (string_indexofchar boolean_dup_items string_first)) "aeiou") (char_iswhitespace string_replacechar boolean_xor string_fromchar integer_rot exec_do*count (char_yankdup string_contains) exec_noop) integer_yankdup boolean_or) exec_y (print_newline integer_pop char_stackdepth string_shove char_empty print_newline boolean_shove char_empty) \o string_butlast print_char char_pop exec_dup_times () char_isdigit integer_pop exec_yankdup) string_containschar) string_pop string_yank char_yankdup) string_substring integer_add boolean_and exec_while (print_char string_indexofchar "ay" string_emptystring boolean_not) string_conjchar) \i) (boolean_and char_iswhitespace string_shove \u integer_eq exec_empty string_occurrencesofchar) string_shove string_dup string_dup integer_empty char_frominteger string_removechar exec_yankdup print_newline string_fromboolean char_isletter char_eq char_rot integer_sub) (integer_dup_times string_flush char_yankdup) integer_lt char_empty integer_lt string_indexofchar \space exec_do*count (char_rot boolean_eq string_stackdepth exec_dup_times () boolean_and exec_while (\e boolean_dup exec_while (boolean_yank integer_fromchar \e exec_do*range () exec_do*range ("ay" boolean_swap exec_if (string_shove \Q boolean_empty boolean_invert_second_then_and char_yankdup exec_pop () string_parse_to_chars boolean_yank exec_do*while (integer_dup_items) string_occurrencesofchar char_dup_items boolean_dup_times exec_dup_times () char_frominteger string_setchar) (string_first string_reverse string_last integer_yankdup) string_removechar char_swap string_empty char_yankdup)) string_stackdepth boolean_yank string_substring string_indexofchar string_replace char_dup_items char_isletter exec_when (string_yankdup char_shove integer_fromstring) char_dup_times integer_min char_yankdup) integer_gte char_yankdup string_containschar integer_empty exec_yank string_dup string_substring integer_max string_dup_times boolean_swap \o string_emptystring exec_noop char_yank exec_noop exec_yankdup integer_div \9 string_dup integer_dup_times) boolean_pop char_shove exec_do*range (exec_s (boolean_pop char_iswhitespace integer_dup_items string_dup string_replacechar exec_empty boolean_dup_items integer_yank) (string_containschar "aeiou" integer_dup_times string_replace string_take \a string_dup_times exec_dup () tagged_581) (boolean_yankdup integer_stackdepth exec_s (boolean_pop char_flush integer_fromstring "kqtv rbymroii" \a integer_empty) (string_take boolean_flush "aeiou") (integer_yank \space boolean_pop integer_fromstring) string_pop char_yankdup exec_k_when_autoconstructing (\k) (integer_empty boolean_flush) exec_pop (string_nth boolean_eq string_fromchar string_conjchar exec_stackdepth boolean_frominteger) string_substring) string_last boolean_stackdepth string_stackdepth string_parse_to_chars))
Zero cases best errors: [0 3 3 3 3 3 3 3 3 3 3 3 4 4 4 5 5 6 6 6 6 7 7 7 7 7 7 9 9 11 8 8 10 8 10 12 11 9 10 12 14 10 14 13 15 11 15 13 12 16 14 14 15 19 19 16 18 14 18 16 18 17 19 19 16 16 18 16 21 23 19 25 24 26 23 29 23 21 25 27 27 27 26 24 30 27 25 27 31 23 22 26 30 30 26 24 28 25 29 27 36 28 34 28 32 39 33 31 33 35 33 36 36 36 36 35 41 39 34 44 32 32 39 36 46 40 40 39 41 43 43 35 44 42 36 36 42 47 43 37 43 48 50 38 40 40 49 47 45 47 54 46 45 43 47 47 45 50 52 48 52 54 51 51 49 56 54 54 52 45 51 56 60 56 55 55 56 60 59 59 63 57 58 56 62 62 64 58 56 63 63 59 60 66 99 99 99 52 52 84]
Zero cases best number of elite cases: 1
Zero cases best number of zero cases: 1
Zero cases best total error: 6336
Zero cases best mean error: 31.68
Zero cases best size: 561
Percent parens: 0.164
--- Lexicase Population Statistics ---
Count of elite individuals by case: (420 4 3 3 3 3 3 3 3 3 6 3 1 3 3 1 7 1 2 2 2 2 2 2 1 2 1 1 3 1 2 1 2 1 6 6 6 2 1 2 8 1 1 1 1 2 1 1 2 6 2 2 2 2 2 2 2 2 1 2 2 2 2 1 1 2 1 2 2 2 1 5 1 1 2 1 1 2 2 2 1 2 2 1 3 1 1 1 1 2 2 1 2 1 2 2 2 1 1 1 1 1 6 1 8 1 1 2 2 1 2 2 1 8 1 1 2 2 1 2 2 1 6 1 1 1 2 2 2 1 1 1 1 1 1 2 2 1 1 2 2 2 9 1 2 2 2 1 9 1 1 2 1 2 1 2 1 1 2 2 1 7 2 1 1 1 1 2 1 2 1 1 2 1 1 2 1 1 1 2 2 2 2 2 1 1 1 2 6 2 6 1 2 1 1 1 1 1 1 6)
Population mean number of elite cases: 0.83
Count of perfect (error zero) individuals by case: (420 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
Population mean number of perfect (error zero) cases: 0.42
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 0, :instruction char_rot} {:close 0, :instruction print_string} {:close 0, :instruction char_dup} {:close 0, :instruction \o} {:close 1, :instruction "ay"} {:close 0, :instruction print_string} {:close 1, :instruction string_eq} {:close 0, :instruction integer_sub} {:close 0, :instruction string_take} {:close 1, :instruction integer_yank} {:close 0, :instruction string_length} {:close 1, :instruction exec_s} {:close 0, :instruction char_pop} {:close 0, :instruction integer_mod} {:close 1, :instruction integer_gt} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_eq} {:close 0, :instruction string_yank} {:close 0, :instruction integer_lt} {:close 0, :instruction char_allfromstring} {:close 0, :instruction boolean_rot} {:close 0, :instruction string_dup} {:close 0, :instruction integer_div} {:close 0, :instruction string_fromboolean} {:close 0, :instruction exec_empty} {:close 0, :instruction exec_swap} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_if} {:close 0, :instruction char_dup} {:close 1, :instruction integer_pop} {:close 0, :instruction exec_do*count} {:close 0, :instruction string_first} {:close 1, :instruction string_take} {:close 1, :instruction string_split} {:close 0, :instruction integer_dup_times} {:close 0, :instruction string_fromboolean} {:close 0, :instruction \y} {:close 0, :instruction string_take} {:close 0, :instruction string_fromboolean} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction boolean_xor} {:close 1, :instruction \o} {:close 0, :instruction boolean_eq} {:close 1, :instruction string_flush} {:close 1, :instruction string_flush} {:close 0, :instruction string_fromboolean} {:close 0, :instruction print_string} {:close 0, :instruction integer_fromboolean} {:close 0, :instruction integer_inc} {:close 0, :instruction string_butlast} {:close 1, :instruction boolean_rot} {:close 0, :instruction integer_stackdepth} {:close 1, :instruction string_fromchar} {:close 0, :instruction char_dup_items} {:close 0, :instruction integer_div} {:close 0, :instruction string_rest} {:close 0, :instruction string_rot} {:close 0, :instruction string_contains} {:close 0, :instruction "btrin w"} {:close 0, :instruction char_yankdup} {:close 1, :instruction integer_gte} {:close 0, :instruction boolean_frominteger} {:close 1, :instruction string_nth} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_do*while} {:close 0, :instruction char_flush} {:close 0, :instruction integer_max} {:close 0, :instruction exec_rot} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction char_flush} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_inc} {:close 0, :instruction exec_dup_times} {:close 0, :instruction string_parse_to_chars} {:close 1, :instruction string_flush} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction string_contains} {:close 0, :instruction integer_eq} {:close 0, :instruction string_reverse} {:close 0, :instruction string_take} {:close 1, :instruction char_iswhitespace} {:close 0, :instruction integer_fromstring} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_yank} {:close 0, :instruction print_newline} {:close 0, :instruction boolean_flush} {:close 1, :instruction "aeiou"} {:close 0, :instruction string_flush} {:close 1, :instruction string_stackdepth} {:close 0, :instruction integer_yankdup} {:close 1, :instruction exec_k_when_autoconstructing} {:close 0, :instruction char_shove} {:close 0, :instruction \d} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction integer_max} {:close 0, :instruction string_rot} {:close 0, :instruction \A} {:close 0, :instruction string_last} {:close 0, :instruction integer_empty} {:close 0, :instruction print_newline} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction char_shove} {:close 0, :instruction string_emptystring} {:close 0, :instruction exec_flush} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction char_dup_times} {:close 2, :instruction boolean_and} {:close 0, :instruction exec_noop} {:close 1, :instruction integer_dup_items} {:close 0, :instruction string_dup} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction char_isdigit} {:close 0, :instruction integer_gt} {:close 0, :instruction char_dup_items} {:close 0, :instruction string_containschar} {:close 0, :instruction string_removechar} {:close 0, :instruction string_stackdepth} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction integer_lt} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction exec_dup} {:close 1, :instruction exec_rot} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction \o} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_yankdup} {:close 2, :instruction string_emptystring} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction boolean_not} {:close 0, :instruction string_conjchar} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_swap} {:close 0, :instruction print_exec} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction string_stackdepth} {:close 1, :instruction integer_min} {:close 0, :instruction boolean_and} {:close 0, :instruction char_yank} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_fromchar} {:close 0, :instruction boolean_or} {:close 1, :instruction char_dup_items} {:close 0, :instruction string_concat} {:close 0, :instruction integer_dup} {:close 0, :instruction integer_empty} {:close 1, :instruction boolean_and} {:close 1, :instruction \a} {:close 1, :instruction string_removechar} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_empty} {:close 2, :instruction string_stackdepth} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_dup} {:close 2, :instruction string_rest} {:close 0, :instruction string_split} {:close 0, :instruction \u} {:close 0, :instruction \o} {:close 2, :instruction exec_while} {:close 0, :instruction string_frominteger} {:close 0, :instruction string_conjchar} {:close 0, :instruction exec_y} {:close 1, :instruction integer_dup} {:close 0, :instruction boolean_flush} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction integer_gte} {:close 1, :instruction integer_empty} {:close 0, :instruction string_dup_times} {:close 0, :instruction integer_sub} {:close 0, :instruction boolean_empty} {:close 0, :instruction print_string} {:close 0, :instruction char_dup_items} {:close 0, :instruction exec_eq} {:close 1, :instruction integer_yankdup} {:close 1, :instruction exec_if} {:close 0, :instruction string_last} {:close 2, :instruction integer_fromstring} {:close 0, :instruction tagged_552} {:close 0, :instruction exec_string_iterate} {:close 0, :instruction exec_while} {:close 0, :instruction string_empty} {:close 0, :instruction integer_yankdup} {:close 0, :instruction \a} {:close 1, :instruction boolean_or} {:close 1, :instruction exec_noop} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction char_yankdup} {:close 0, :instruction char_stackdepth} {:close 1, :instruction exec_string_iterate} {:close 0, :instruction exec_when} {:close 0, :instruction string_setchar} {:close 1, :instruction exec_do*times} {:close 0, :instruction char_swap} {:close 1, :instruction integer_sub} {:close 1, :instruction integer_yank} {:close 0, :instruction integer_yank} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_and} {:close 0, :instruction string_conjchar} {:close 0, :instruction "aeiou"} {:close 0, :instruction string_contains} {:close 0, :instruction boolean_yank} {:close 1, :instruction string_reverse} {:close 0, :instruction char_isdigit} {:close 0, :instruction string_substring} {:close 0, :instruction string_first} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_string_iterate} {:close 2, :instruction string_length} {:close 0, :instruction char_yankdup} {:close 0, :instruction integer_lt} {:close 0, :instruction string_parse_to_chars} {:close 0, :instruction string_rest} {:close 0, :instruction string_eq} {:close 0, :instruction string_eq} {:close 0, :instruction tag_char_674} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_shove} {:close 0, :instruction string_replace} {:close 0, :instruction boolean_rot} {:close 1, :instruction char_pop} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction \a} {:close 0, :instruction boolean_rot} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_dup} {:close 1, :instruction exec_when} {:close 0, :instruction integer_dup} {:close 0, :instruction char_swap} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_swap} {:close 0, :instruction string_replacefirstchar} {:close 1, :instruction string_last} {:close 0, :instruction string_swap} {:close 0, :instruction exec_do*while} {:close 0, :instruction string_rot} {:close 0, :instruction string_replacefirst} {:close 2, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 1, :instruction exec_do*count} {:close 0, :instruction exec_flush} {:close 0, :instruction string_first} {:close 0, :instruction exec_if} {:close 0, :instruction integer_sub} {:close 0, :instruction char_eq} {:close 0, :instruction \i} {:close 0, :instruction string_fromchar} {:close 0, :instruction exec_if} {:close 1, :instruction "pzmcvogty"} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_sub} {:close 1, :instruction char_rot} {:close 0, :instruction string_conjchar} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction string_pop} {:close 0, :instruction string_first} {:close 1, :instruction char_iswhitespace} {:close 0, :instruction string_replacechar} {:close 1, :instruction boolean_empty} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_eq} {:close 0, :instruction string_stackdepth} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction string_pop} {:close 0, :instruction string_yank} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction char_rot} {:close 0, :instruction exec_s} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_dup_items} {:close 0, :instruction char_empty} {:close 0, :instruction exec_do*range} {:close 0, :instruction print_integer} {:close 0, :instruction string_yank} {:close 0, :instruction string_flush} {:close 0, :instruction boolean_and} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction integer_mult} {:close 1, :instruction print_char} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction string_replacechar} {:close 0, :instruction integer_add} {:close 0, :instruction integer_fromstring} {:close 0, :instruction string_occurrencesofchar} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction string_shove} {:close 0, :instruction char_isletter} {:close 1, :instruction string_dup} {:close 1, :instruction boolean_frominteger} {:close 0, :instruction string_dup_items} {:close 0, :instruction char_stackdepth} {:close 0, :instruction string_first} {:close 0, :instruction char_iswhitespace} {:close 0, :instruction string_nth} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction char_isdigit} {:close 0, :instruction string_butlast} {:close 2, :instruction integer_max} {:close 0, :instruction integer_inc} {:close 0, :instruction char_isdigit} {:close 0, :instruction exec_empty} {:close 0, :instruction string_fromboolean} {:close 0, :instruction integer_gte} {:close 0, :instruction print_newline} {:close 0, :instruction \e} {:close 1, :instruction integer_shove} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction boolean_xor} {:close 0, :instruction string_containschar} {:close 0, :instruction exec_do*range} {:close 0, :instruction string_swap} {:close 0, :instruction string_dup_times} {:close 0, :instruction string_fromboolean} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction string_substring} {:close 0, :instruction string_replacefirst} {:close 0, :instruction string_reverse} {:close 0, :instruction \i} {:close 0, :instruction print_integer} {:close 1, :instruction integer_dup_items} {:close 0, :instruction string_shove} {:close 0, :instruction integer_rot} {:close 0, :instruction exec_dup_items} {:close 0, :instruction exec_dup} {:close 0, :instruction string_replacefirstchar} {:close 0, :instruction print_newline} {:close 0, :instruction char_dup} {:close 0, :instruction string_yank} {:close 1, :instruction boolean_frominteger} {:close 1, :instruction char_allfromstring} {:close 1, :instruction string_empty} {:close 0, :instruction char_isdigit} {:close 1, :instruction boolean_rot} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction string_yankdup} {:close 0, :instruction exec_yankdup} {:close 0, :instruction exec_while} {:close 0, :instruction exec_empty} {:close 1, :instruction integer_dup_times} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_do*times} {:close 1, :instruction integer_yankdup} {:close 2, :instruction boolean_xor} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_dup} {:close 0, :instruction "ay"} {:close 1, :instruction exec_do*count} {:close 0, :instruction string_dup} {:close 0, :instruction string_indexofchar} {:close 0, :instruction string_removechar} {:close 1, :instruction string_replacefirstchar} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction string_substring} {:close 0, :instruction "ujix"} {:close 0, :instruction integer_fromchar} {:close 0, :instruction string_concat} {:close 0, :instruction exec_rot} {:close 0, :instruction char_dup_times} {:close 0, :instruction integer_dup_items} {:close 0, :instruction boolean_shove} {:close 0, :instruction char_dup_items} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction "edxhyfczsdqtqv"} {:close 0, :instruction boolean_empty} {:close 0, :instruction char_empty} {:close 1, :instruction exec_do*times} {:close 1, :instruction tag_string_546})
Best program: (in1 char_rot print_string char_dup \o "ay" print_string string_eq integer_sub string_take integer_yank string_length exec_s () (char_pop integer_mod integer_gt) (boolean_not boolean_eq string_yank integer_lt char_allfromstring boolean_rot string_dup integer_div string_fromboolean exec_empty exec_swap (exec_yank exec_if (char_dup integer_pop) (exec_do*count (string_first string_take) string_split) integer_dup_times string_fromboolean \y string_take string_fromboolean string_replacefirstchar boolean_xor \o) (boolean_eq string_flush) string_flush) string_fromboolean print_string integer_fromboolean integer_inc string_butlast boolean_rot integer_stackdepth string_fromchar char_dup_items integer_div string_rest string_rot string_contains "btrin w" char_yankdup integer_gte boolean_frominteger string_nth exec_yank exec_do*while (char_flush integer_max exec_rot (integer_inc) (exec_do*while (boolean_dup_items exec_y (boolean_stackdepth char_flush integer_mult integer_inc exec_dup_times (string_parse_to_chars string_flush) boolean_dup_items string_contains integer_eq string_reverse string_take char_iswhitespace) integer_fromstring boolean_swap integer_yank print_newline boolean_flush "aeiou") string_flush string_stackdepth) (integer_yankdup exec_k_when_autoconstructing () (char_shove \d string_occurrencesofchar integer_max string_rot \A string_last integer_empty print_newline exec_s_when_autoconstructing (char_shove string_emptystring exec_flush string_occurrencesofchar char_dup_times boolean_and) () (exec_noop integer_dup_items) string_dup exec_flush boolean_shove char_isdigit integer_gt char_dup_items string_containschar string_removechar string_stackdepth exec_string_iterate (integer_lt exec_y_when_autoconstructing (exec_dup (exec_rot () (boolean_dup_items \o integer_shove integer_sub boolean_empty integer_yankdup string_emptystring) () boolean_invert_first_then_and string_replacefirstchar exec_string_iterate (boolean_not string_conjchar boolean_invert_second_then_and boolean_swap print_exec (boolean_yankdup string_stackdepth) integer_min) boolean_and char_yank integer_fromboolean) integer_sub integer_fromchar boolean_or char_dup_items) string_concat integer_dup integer_empty boolean_and) \a) string_removechar) boolean_invert_first_then_and boolean_empty string_stackdepth) boolean_frominteger integer_dup string_rest string_split \u \o exec_while () string_frominteger string_conjchar exec_y (integer_dup) boolean_flush exec_k_when_autoconstructing (boolean_dup integer_gte integer_empty) (string_dup_times integer_sub boolean_empty print_string char_dup_items exec_eq integer_yankdup) exec_if () (string_last integer_fromstring) tagged_552 exec_string_iterate (exec_while (string_empty integer_yankdup \a boolean_or) exec_noop) integer_dec exec_rot (exec_s_when_autoconstructing (char_yankdup char_stackdepth exec_string_iterate () exec_when (string_setchar exec_do*times () char_swap integer_sub) integer_yank) (integer_yank boolean_rot boolean_and string_conjchar "aeiou" string_contains boolean_yank string_reverse) (char_isdigit string_substring string_first integer_gte exec_yank exec_string_iterate (string_length)) char_yankdup integer_lt string_parse_to_chars string_rest string_eq string_eq tag_char_674 boolean_rot integer_shove string_replace boolean_rot char_pop) (exec_s_when_autoconstructing (\a boolean_rot integer_dup_items integer_dup exec_when () integer_dup char_swap integer_dup_times integer_min boolean_invert_first_then_and boolean_swap string_replacefirstchar string_last) (string_swap exec_do*while (string_rot string_replacefirst exec_swap () () boolean_xor exec_do*count () exec_flush string_first exec_if (integer_sub char_eq \i string_fromchar exec_if ("pzmcvogty") (integer_sub integer_sub char_rot) string_conjchar exec_stackdepth string_pop) (string_first char_iswhitespace) string_replacechar boolean_empty) exec_shove (exec_eq string_stackdepth string_occurrencesofchar string_pop string_yank exec_s_when_autoconstructing () (exec_y_when_autoconstructing (char_rot exec_s (integer_mult exec_dup_items char_empty exec_do*range (print_integer string_yank string_flush boolean_and string_occurrencesofchar integer_mult print_char) boolean_dup_times string_replacechar integer_add integer_fromstring string_occurrencesofchar boolean_invert_second_then_and string_shove char_isletter string_dup) (boolean_frominteger) (string_dup_items char_stackdepth string_first char_iswhitespace string_nth string_replacefirstchar) char_isdigit string_butlast integer_max)) (integer_inc char_isdigit exec_empty string_fromboolean integer_gte print_newline \e integer_shove) boolean_invert_first_then_and boolean_xor string_containschar exec_do*range (string_swap string_dup_times string_fromboolean string_replacefirstchar string_substring string_replacefirst string_reverse \i print_integer integer_dup_items) string_shove integer_rot exec_dup_items exec_dup (string_replacefirstchar print_newline char_dup string_yank boolean_frominteger) char_allfromstring) string_empty) (char_isdigit boolean_rot) integer_stackdepth string_yankdup exec_yankdup exec_while (exec_empty integer_dup_times) exec_do*while (exec_do*times (integer_yankdup) boolean_xor)) (exec_swap (integer_dup "ay" exec_do*count () string_dup string_indexofchar string_removechar string_replacefirstchar) (boolean_yankdup string_substring "ujix" integer_fromchar string_concat exec_rot (char_dup_times integer_dup_items boolean_shove char_dup_items boolean_swap boolean_not "edxhyfczsdqtqv" boolean_empty char_empty exec_do*times () tag_string_546) () ())))
Errors: [3 1 1 1 1 1 1 1 1 1 1 1 1 3 3 1 3 1 3 3 3 3 3 3 1 3 1 3 5 5 3 1 5 1 5 7 5 3 1 5 8 1 9 5 9 3 8 4 3 7 5 5 7 9 9 7 8 3 7 6 9 7 9 7 1 3 5 3 7 10 3 13 11 14 11 11 9 5 13 15 14 15 12 7 18 12 11 13 14 7 3 7 14 13 9 5 13 3 14 7 17 7 17 9 14 19 18 15 15 18 15 18 13 20 19 13 19 22 12 24 8 9 16 12 24 17 18 15 21 18 16 5 18 20 9 9 17 22 17 11 20 23 27 7 13 11 25 23 20 20 21 18 13 13 16 18 15 20 22 15 25 25 21 23 17 26 26 27 18 9 16 22 30 25 21 22 18 25 23 25 27 18 25 17 28 26 30 20 19 28 26 20 22 31 49 49 49 1 1 35]
Total: 2549
Mean: 12.745
Genome size: 385
Size: 465
Percent parens: 0.172
--- Population Statistics ---
Average total errors in population: 36051.876
Median total errors in population: 6336
Error averages by case: (159.214 160.71 160.78 160.748 160.781 160.67 160.683 160.796 160.487 160.743 160.817 160.926 161.157 161.305 161.396 165.454 165.714 162.247 162.459 162.545 162.589 166.712 166.551 166.775 166.58 166.785 166.67 167.831 168.006 168.861 163.607 163.14 164.888 163.626 164.783 165.83 168.996 167.971 164.649 165.786 167.265 164.599 167.207 166.553 167.829 165.597 167.845 166.564 165.822 168.243 167.24 167.091 168.026 170.312 170.672 168.665 169.961 167.678 169.702 168.801 169.873 169.158 170.928 170.745 168.224 168.543 169.714 168.889 171.745 173.123 170.651 174.53 173.3 174.94 172.956 177.316 173.745 172.128 174.66 176.22 176.101 176.074 175.241 174.0 177.892 175.383 175.08 175.857 178.717 173.4 172.066 175.151 177.839 177.955 175.43 174.105 176.987 174.906 177.692 175.681 182.353 176.95 181.07 176.682 179.428 184.729 180.472 178.981 180.342 181.791 180.262 182.698 182.218 182.871 181.981 181.747 186.397 184.692 180.997 188.601 179.777 180.064 184.342 182.903 189.771 185.132 186.002 184.482 186.53 187.535 187.466 181.926 188.288 186.461 182.575 183.078 186.981 190.499 187.805 183.529 187.893 191.205 192.705 184.426 185.273 185.605 192.059 190.691 189.016 190.597 195.884 189.87 189.002 187.598 190.776 191.529 189.398 193.475 194.076 191.367 194.076 195.848 193.811 193.723 191.934 197.23 195.965 196.288 194.589 189.379 193.841 197.388 200.315 197.656 196.943 196.579 197.192 200.212 200.162 199.545 202.681 198.347 199.258 198.321 202.326 202.044 203.525 199.352 197.865 203.009 203.042 199.863 201.004 204.885 232.627 230.197 232.197 197.463 196.042 219.414)
Error minima by case: (0 1 1 1 1 1 1 1 1 1 1 1 1 2 2 1 3 1 3 3 3 3 3 3 1 3 1 3 5 5 3 1 5 1 5 7 5 3 1 5 8 1 8 5 8 3 8 4 3 7 5 5 7 9 9 7 8 3 7 6 9 7 9 7 1 3 5 3 7 10 3 12 11 14 11 11 9 5 13 15 14 15 12 7 18 12 10 13 14 7 3 7 14 13 9 5 13 3 13 7 17 7 17 9 14 19 17 15 15 18 15 18 13 20 18 13 19 22 12 24 8 9 16 12 24 17 18 15 21 18 16 5 18 20 9 9 17 22 17 11 20 23 27 7 13 11 25 23 20 20 21 18 13 13 16 18 15 20 22 15 24 25 21 23 17 26 26 27 18 9 16 22 30 25 21 22 18 25 23 25 27 18 25 17 27 26 30 20 19 28 26 19 22 31 49 49 49 1 1 34)
Average genome size in population (length): 252.497
Average program size in population (points): 304.532
Average percent parens in population: 0.175
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.383
Error (vector) diversity:			 0.398
Behavioral diversity:				 0.437
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 103251470
--- Timings ---
Current time: 1559312968130 milliseconds
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
